{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","components/Loading.js","views/LandingPage.js","components/PrivateRoute.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/CreateButton.js","views/artefactViews/components/Head.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/DeleteDialog.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","useStyles","makeStyles","theme","drawer","width","margin","spacing","marginTop","require","Trianglify","height","png","drawerOpen","setDrawerOpen","classes","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Drawer","anchor","onClose","e","className","role","onClick","onKeyDown","List","name","path","icon","Home","Group","Apps","Create","Map","map","Icon","ListItem","button","key","component","RouterLink","to","style","borderRadius","ListItemIcon","ListItemText","primary","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","LoginLink","forwardRef","props","ref","innerRef","SignupLink","Button","underline","root","flexGrow","iconButton","marginRight","title","alignText","MenuAppBar","loggedIn","useTheme","dark","palette","type","setOpen","AppBar","position","elevation","Toolbar","edge","Menu","Typography","variant","noWrap","onToggleDarkTheme","Brightness7","Brightness4","LoggedInBar","username","NotLoggedInBar","lightPalette","indigo","secondary","main","teal","darkPalette","deepPurple","error","background","paper","default","lightTheme","createMuiTheme","darkTheme","localStorage","getItem","setItem","setTheme","ThemeProvider","CssBaseline","newTheme","children","textField","padding","backgroundColor","textAlign","card","maxWidth","media","ArtefactCard","artefact","upload","description","mediaURI","Card","CardActionArea","CardMedia","image","CardContent","Grid","item","xs","zeroMinWidth","gutterBottom","CardActions","size","fullWidth","popup","zIndex","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","MapType","artefacts","openArtefactID","setOpenArtefactID","handleSetOpenArtefact","mapStyle","containerStyle","mapState","center","initPopupOpen","length","coordinates","src","alt","offset","bottom","geocodingService","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","console","log","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","DELETE_ARTEFACT_MUTATION","GetFamiliesWrapper","Child","child","childProps","rest","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","state","desc","statesLoading","variables","GetArtefactWrapper","params","fetchPolicy","artefactData","artefactLoading","marginLeft","alignItems","alignContent","justify","form","display","flexWrap","submit","justifyContent","formControl","fieldTitle","paperWrapper","editLinkButton","deleteButton","marginBottom","dropzone","minHeight","dropzoneText","fontSize","outerContainer","switch","Layout","container","CircularProgress","HomePageButton","linkTo","LandingPage","landingTheme","responsiveFontSizes","typing","setTyping","useEffect","href","rel","top","right","fontWeight","fontFamily","cursor","show","onTypingDone","Delay","ms","Backspace","count","delay","left","particles","number","value","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","WaitWraper","checkAuthenticated","this","setState","localToken","Component","contextType","PrivateRoute","LoggedIn","loggedOut","landingPage","Loading","render","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","history","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","Paper","onSubmit","TextField","required","label","autoFocus","onChange","target","helperText","FormHelperText","Link","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","disabled","Logout","CreateFamilyView","artefactFamilyFormUseStyles","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","_completed","familyCreate","family","createFamily","FormControl","multiline","rows","defaultValue","Dialog","DialogTitle","DialogContent","align","DialogActions","noErrors","states","setters","isAdmin","openDelete","create","edit","view","showEditButton","showDeleteButton","visibility","setMode","CreateButton","handleSetField","inputProps","readOnly","select","Object","keys","numFams","admin","clearable","minDate","inputVariant","format","openTo","date","KeyboardButtonProps","FormControlLabel","control","Switch","checked","isPublic","belongsToFamiliesBools","values","filter","disablePadding","dense","Checkbox","tabIndex","initialFiles","files","acceptedFiles","filesLimit","dropzoneClass","dropzoneTextStyle","dropzoneParagraph","imageStyle","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","keyCode","document","getElementById","click","Popover","queryResults","undefined","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","action","close","deleteArtefact","aria-labelledby","DialogContentText","ArtefactView","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","deleteOpen","setDeleteOpen","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","pushHomeURL","handleCreationCompleted","artefactCreate","updateCompleted","deleteCompleted","handleCreationError","handleUpdateError","handleDeleteError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","input","saveChange","artefactInput","dataLoading","componentProps","addressProps","newLocationState","components","comp","Name","State","Admin","Date","Description","Privacy","Families","Images","componentsViewMode","regularView","Head","widthProps","FieldWrapper","Address","SuccessSnackbar","DeleteDialog","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","Error404View","overflow","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","selectedFamily","profileId","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","_homepageInfoCompleted","home_data","called","selectFamily","useRef","hasArtefacts","Container","paddingTop","GridList","cellHeight","cols","GridListTile","newFamily","toFamily","SelectProps","autoWidth","overlay","minWidth","success","green","MyDialogContent","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","helpOpen","setHelpOpen","promiseArr","all","handleChange","newCenter","coord","fam","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4ce2577.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", \n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    Button,\n    makeStyles,\n    Drawer,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon\n} from '@material-ui/core'\n\nimport {\n    Home,\n    Group,\n    Create,\n    Map,\n    Apps,\n    AccountCircle\n} from '@material-ui/icons'\n\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 'auto',\n        margin: theme.spacing(1),\n        marginTop: theme.spacing(5)\n    }\n}))\n\nconst Trianglify = require('trianglify')\nconst pattern = Trianglify({ width: 200, height: 200 })\nconst mediaURI = pattern.png()\n\nexport default ({ drawerOpen, setDrawerOpen }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Drawer\n                anchor='left'\n                open={drawerOpen}\n                onClose={e => setDrawerOpen(false)}\n            >\n                <div\n                    className={classes.drawer}\n                    role='presentation'\n                    onClick={e => setDrawerOpen(false)}\n                    onKeyDown={e => setDrawerOpen(false)}\n                >\n                    <List>\n                        {[\n                            { name: 'Home', path: '/', icon: Home },\n                            {\n                                name: 'Create Family',\n                                path: '/family/create/',\n                                icon: Group\n                            },\n                            {\n                                name: 'Manage Artefacts',\n                                path: '/artefacts/manage/',\n                                icon: Apps\n                            },\n                            {\n                                name: 'Create Artefact',\n                                path: '/artefacts/create/',\n                                icon: Create\n                            },\n                            { name: 'Artefact Map', path: '/map/', icon: Map }\n                        ].map(({ name, path, icon: Icon }) => (\n                            <ListItem\n                                button\n                                key={path}\n                                component={RouterLink}\n                                to={path}\n                                style={{ borderRadius: 10 }}\n                            >\n                                <ListItemIcon>\n                                    <Icon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={name}\n                                    // primaryTypographyProps={{variant: 'h6'}}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Toolbar,\n    AppBar,\n    Button,\n    makeStyles,\n    Grid,\n    Typography,\n    Link\n} from '@material-ui/core'\n// import MenuIcon from '@material-ui/icons/Menu'\n\nimport { Home, Menu, Brightness4, Brightness7 } from '@material-ui/icons'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    iconButton: {\n        marginRight: theme.spacing(1)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.iconButton}\n                        edge='start'\n                        color='inherit'\n                        aria-label='menu'\n                        onClick={e => setOpen(true)}\n                    >\n                        <Menu />\n                    </IconButton>\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='home'\n                        component={RouterLink}\n                        to='/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant='h6' className={classes.title} noWrap>\n                        Artefacts Register\n                    </Typography>\n\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='theme-toggle'\n                        onClick={props.onToggleDarkTheme}\n                    >\n                        {!dark ? <Brightness4 /> : <Brightness7 />}\n                    </IconButton>\n\n                    {loggedIn ? (\n                        <LoggedInBar\n                            username={username}\n                            drawerOpen={open}\n                            setDrawerOpen={setOpen}\n                        />\n                    ) : (\n                        <NotLoggedInBar />\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport {\n    teal,\n    deepPurple,\n    indigo\n} from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    // secondary: teal,\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        // light: deepPurple[100],\n        main: deepPurple['A100'],\n        // dark: deepPurple[500]\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nconst lightTheme = createMuiTheme({ palette: lightPalette, type: 'light' })\nconst darkTheme = createMuiTheme({ palette: darkPalette, type: 'dark' })\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header onToggleDarkTheme={toggleDarkTheme} />\n            {props.children}\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { config } from '../constants'\n\nvar Trianglify = require('trianglify')\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        maxWidth: 345,\n        borderRadius: 10\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 140\n    }\n}))\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ artefact }) {\n    const classes = useStyles()\n    \n    const { upload, name, description, id } = artefact\n    \n    var mediaURI = config.mediaRoot + upload\n    if (upload === \"False\"){\n        var pattern = Trianglify({ width: 500, height: 500 })\n        mediaURI = pattern.png()\n    }\n\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={mediaURI}\n                    title={name}\n                />\n                <CardContent>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    size='small'\n                    fullWidth\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                {/* <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button> */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        // backgroundColor: theme.palette.background.paper + '!important',\n        // background: theme.palette.background.paper + '!important',\n        zIndex: '50 !important'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const classes = useStyles()\n\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    const handleSetOpenArtefact = id => {\n        if (openArtefactID === id) {\n            setOpenArtefactID('')\n        } else {\n            setOpenArtefactID(id)\n        }\n    }\n\n    const onMapClick = () => {\n        handleSetOpenArtefact('')\n        if (props.onClick){\n            props.onClick()\n        }\n    }\n\n    return (\n        <MapType\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={onMapClick}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, id, ...rest } = artefact\n                if (initPopupOpen) {\n                    artefact.initPopupOpen = false\n                    setOpenArtefactID(id)\n                }\n                if (!center || !center.length) {\n                    return null\n                }\n                return (\n                    <Fragment key={id}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => handleSetOpenArtefact(id)}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup && openArtefactID === id && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                                style={{\n                                    backgroundColor: '#000000 !important'\n                                }}\n                                className={classes.popup}\n                            >\n                                <ArtefactCard artefact={artefact} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </MapType>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`\n\nexport const DELETE_ARTEFACT_MUTATION = gql`\n    mutation ArtefactDelete($id: ID!) {\n        artefactDelete(id: $id) {\n            ok\n        }\n    }\n`\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.error(error),\n        fetchPolicy: \"network-only\"\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'flex-start',\n        textAlign: 'left'\n    },\n    title: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    fieldTitle: {\n        textAlign: 'left',\n        marginLeft: theme.spacing(1)\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    editLinkButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1)\n    },\n    deleteButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.error.main\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper + '!important',\n        // minHeight: '160px',\n        minHeight: '85% !important',\n        borderRadius: 10,\n        alignItems: 'flex-start !important'\n    },\n    dropzoneText: {\n        fontSize: 'medium !important'\n        // margin: '0 !important'\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    },\n    switch: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    }\n}))\n","import React from 'react'\nimport { CircularProgress, Grid } from '@material-ui/core'\nimport { Layout } from './'\n\nexport default () => (\n    <Layout>\n        <Grid\n            container\n            alignItems='center'\n            justify='center'\n            style={{ height: '90vh' }}\n        >\n            <CircularProgress />\n        </Grid>\n    </Layout>\n)\n","import React, { useState, useEffect } from 'react'\nimport Particles from 'react-particles-js'\nimport { Button } from '@material-ui/core'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Typist from 'react-typist'\nimport { Link as RouterLink } from 'react-router-dom'\n\n/*\nThe page that users come to when they first encounter our app. It's a marketing page\n\n*/\nfunction HomePageButton(props) {\n    const { linkTo } = props\n    return (\n        <Button\n            style={{\n                color: '#f0f0f0',\n                padding: '12px',\n                margin: '4px',\n                marginTop: '8px'\n            }}\n            component={RouterLink}\n            to={linkTo}\n        >\n            {props.children}\n        </Button>\n    )\n}\n\nfunction LandingPage(props) {\n    // Help the landing page be mobile friendly\n    let landingTheme = createMuiTheme()\n    landingTheme = responsiveFontSizes(landingTheme)\n\n    // Allow for looping of the typing animation\n    const [typing, setTyping] = useState(true)\n    useEffect(() => {\n        setTyping(true)\n    }, [typing])\n\n    const typingDone = () => {\n        setTyping(false)\n    }\n\n    return (\n        <div>\n            <ThemeProvider theme={landingTheme}>\n                <link\n                    href='https://fonts.googleapis.com/css?family=Dosis&display=swap'\n                    rel='stylesheet'\n                ></link>\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: '20px',\n                        zIndex: 4\n                    }}\n                >\n                    <HomePageButton linkTo='/signup'>Sign up</HomePageButton>\n                    <HomePageButton linkTo='/login'>Login</HomePageButton>\n                </div>\n                <Typography\n                    theme={landingTheme}\n                    variant='h1'\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '10%',\n                        zIndex: 3,\n                        position: 'relative',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    Family Artefacts Register\n                </Typography>\n                <Typography\n                    variant='h2'\n                    theme={landingTheme}\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '1%',\n                        zIndex: 3,\n                        position: 'relative',\n                        top: '8rem',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    {typing ? (\n                        <Typist\n                            cursor={{ show: false }}\n                            onTypingDone={typingDone}\n                        >\n                            <Typist.Delay ms={400} />\n                            <span>Connecting you to your family</span>\n                            <span> and your familys history.</span>\n                            <Typist.Backspace count={10} delay={200} />\n                            <span>'s history.</span>\n                            <Typist.Backspace count={56} delay={5000} />\n                        </Typist>\n                    ) : (\n                        ''\n                    )}\n                </Typography>\n                <Particles\n                    style={{\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        background: 'rgb(103, 58, 183)',\n                        background:\n                            'linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)'\n                    }}\n                    params={{\n                        particles: {\n                            number: {\n                                value: 120,\n                                density: {\n                                    enable: true,\n                                    value_area: 800\n                                }\n                            },\n                            color: {\n                                value: '#ffffff'\n                            },\n                            shape: {\n                                type: 'circle',\n                                stroke: {\n                                    width: 0,\n                                    color: '#FFFFFF'\n                                },\n                                polygon: {\n                                    nb_sides: 5\n                                },\n                                image: {\n                                    src: 'img/github.svg',\n                                    width: 100,\n                                    height: 100\n                                }\n                            },\n                            opacity: {\n                                value: 0.44093831673801875,\n                                random: false,\n                                anim: {\n                                    enable: false,\n                                    speed: 1,\n                                    opacity_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            size: {\n                                value: 4.008530152163807,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 40,\n                                    size_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            line_linked: {\n                                enable: true,\n                                distance: 150,\n                                color: '#ffffff',\n                                opacity: 0.4,\n                                width: 1\n                            },\n                            move: {\n                                enable: true,\n                                speed: 6,\n                                direction: 'none',\n                                random: false,\n                                straight: false,\n                                out_mode: 'out',\n                                bounce: false,\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200\n                                }\n                            }\n                        },\n                        interactivity: {\n                            detect_on: 'canvas',\n                            events: {\n                                onhover: {\n                                    enable: true,\n                                    mode: 'grab'\n                                },\n                                onclick: {\n                                    enable: true,\n                                    mode: 'push'\n                                },\n                                resize: true\n                            },\n                            modes: {\n                                grab: {\n                                    distance: 400,\n                                    line_linked: {\n                                        opacity: 1\n                                    }\n                                },\n                                bubble: {\n                                    distance: 400,\n                                    size: 40,\n                                    duration: 2,\n                                    opacity: 8,\n                                    speed: 3\n                                },\n                                repulse: {\n                                    distance: 200,\n                                    duration: 0.4\n                                },\n                                push: {\n                                    particles_nb: 4\n                                },\n                                remove: {\n                                    particles_nb: 2\n                                }\n                            }\n                        },\n                        retina_detect: true\n                    }}\n                ></Particles>\n            </ThemeProvider>\n        </div>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout, formUseStyles } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = formUseStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='secondary'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Login {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Layout, formUseStyles } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = formUseStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='secondary'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Signup {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Grid,\n    Paper,\n    FormControl\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    // back to const once done\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    // Call the mutation on form submission\n    const submitForm = async event => {\n        event.preventDefault()\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n        props.history.push(`/`)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid\n                container\n                spacing={1}\n                className={classes.outerContainer}\n            >\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4' className={classes.title}>\n                        Create Family\n                    </Typography>\n\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e => console.error(\"The admin value was changed, how is this even possible?\")}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </DialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            You can now add artefacts to this family. To view them simply\n                            select '{familyName}' from the Select Family dropdown on your\n                            home dashboard.<br />\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br /><br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\" autoFocus>\n                            Continue\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n            )}\n        </form>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={11} md={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { Fragment } from 'react'\n\nimport { Button, FormHelperText } from '@material-ui/core'\n\nexport default ({ noErrors, ...rest }) => (\n    <Fragment>\n        <Button\n            {...rest}\n            color='secondary'\n            variant='contained'\n            type='submit'\n        >\n            Save\n        </Button>\n        {!noErrors && (\n            <FormHelperText error={!noErrors}>\n                Unknown Error Occurred\n            </FormHelperText>\n        )}\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\nimport { Grid, Typography, Button } from '@material-ui/core'\nimport CreateButton from './CreateButton'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    isAdmin,\n    openDelete,\n    noErrors\n}) => {\n    const { create, edit, view } = states.mode\n    const showEditButton = view && isAdmin\n    const showDeleteButton = edit && isAdmin\n\n    return (\n        <Fragment>\n            {(showEditButton || showDeleteButton || create) && (\n                <div\n                    className={classes.editLinkButton}\n                    style={{\n                        marginRight: 'auto',\n                        // width: '65px',\n                        height: '20px',\n                        visibility: 'hidden'\n                    }}\n                />\n            )}\n            <Typography variant='h4' className={classes.title}>\n                {create && 'Create'} {edit && 'Edit'} {view && 'View'} Artefact\n            </Typography>\n            {showEditButton && (\n                <Button\n                    color='secondary'\n                    variant='contained'\n                    onClick={e => setters.setMode({ edit: true })}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                >\n                    Edit\n                </Button>\n            )}\n            {showDeleteButton && (\n                <Button\n                    color='default'\n                    variant='contained'\n                    onClick={openDelete}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                >\n                    Delete\n                </Button>\n            )}\n\n            {create && (\n                <CreateButton\n                    noErrors={noErrors}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                />\n            )}\n            {create && (\n                <Grid item xs={12}>\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Artefacts are belongings of the family, enter as much or\n                        as little detail as you like\n                    </Typography>\n                </Grid>\n            )}\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            // style={{ height: '100%' }}\n            // InputProps={{ style: {height: '100%'} }}\n            id='artefact-name'\n            label='Artefact name'\n            variant='outlined'\n            autoFocus={!view}\n            required\n            fullWidth\n            value={state.name || ''}\n            inputProps={{ readOnly: view }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField, MenuItem } from '@material-ui/core'\n\nexport default ({ states, setters, artefactStates, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='state'\n            label='Artefact State'\n            variant='outlined'\n            required\n            fullWidth\n            value={state.state || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            select\n            disabled={disabled}\n        >\n            {Object.keys(artefactStates).map(value => {\n                return (\n                    <MenuItem value={artefactStates[value]} key={value}>\n                        {value}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, numFams }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    return (\n        <TextField\n            id='description'\n            label='Description'\n            variant='outlined'\n            required\n            fullWidth\n            multiline\n            value={state.description || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, username }) => {\n    var { view } = states.mode\n    var { state } = states\n    return (\n        <TextField\n            id='artefact-admin'\n            label='Artefact Admin'\n            variant='outlined'\n            required\n            fullWidth\n            value={\n                state.admin && Object.keys(state.admin).length !== 0\n                    ? state.admin.username\n                    : username\n            }\n            inputProps={{\n                readOnly: true\n            }}\n            onChange={e => console.log('admin field was changed')}\n        />\n    )\n}\n","import React from 'react'\n\nimport 'date-fns'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <KeyboardDatePicker\n            disabled={view || disabled}\n            clearable\n            minDate={'1500-01-01'}\n            // variant='inline'\n            inputVariant='outlined'\n            format='dd/MM/yyyy'\n            openTo='year'\n            label='Date'\n            value={state.date}\n            onChange={date => handleSetField(name, date)}\n            KeyboardButtonProps={{\n                'aria-label': 'change date'\n            }}\n        />\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    Switch,\n    FormHelperText,\n    Typography,\n    FormControlLabel\n} from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, classes }) => {\n    var { create, edit } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (create || edit) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    Privacy\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.isPublic || false}\n                            onChange={e =>\n                                handleSetField(name, e.target.checked)\n                            }\n                            // edge='end'\n                            disabled={disabled}\n                        />\n                    }\n                    style={{ marginLeft: 3 }}\n                    label='Public'\n                />\n                <FormHelperText className={classes.fieldTitle}>\n                    {state.isPublic\n                        ? 'Viewable by anyone'\n                        : 'Viewable by family members only'}\n                </FormHelperText>\n            </Fragment>\n        )\n    } else {\n        return null\n    }\n}\n","import React, { Fragment } from 'react'\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Typography\n} from '@material-ui/core'\n\nexport default ({ states, setters, families, disabled, name, classes }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (\n        view &&\n        state.belongsToFamiliesBools &&\n        Object.values(state.belongsToFamiliesBools).filter(value => value)\n            .length === 0\n    ) {\n        return (\n            <Typography variant='h6' className={classes.fieldTitle}>\n                This artefact doesn't belong to any of your families\n            </Typography>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                {!view\n                    ? 'Families the artefact belongs to'\n                    : 'Belongs to your families'}\n            </Typography>\n            <List disablePadding>\n                {families.map(family => {\n                    if (\n                        state.belongsToFamiliesBools &&\n                        (!view || state.belongsToFamiliesBools[family.id])\n                    ) {\n                        return (\n                            <ListItem key={family.id} dense disabled={disabled}>\n                                {!view && (\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge='start'\n                                            checked={\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] || false\n                                            }\n                                            onClick={e =>\n                                                handleSetField(name, {\n                                                    ...state.belongsToFamiliesBools,\n                                                    [family.id]:\n                                                        e.target.checked\n                                                })\n                                            }\n                                            tabIndex={-1}\n                                        />\n                                    </ListItemIcon>\n                                )}\n                                <ListItemText primary={family.familyName} />\n                            </ListItem>\n                        )\n                    }\n                    return null\n                })}\n            </List>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport Image from 'material-ui-image'\nimport { useTheme } from '@material-ui/styles'\n\nimport { config } from '../../../constants'\n\nexport default ({ classes, states, setters, name }) => {\n    const theme = useTheme()\n    var { edit, create, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                Images\n            </Typography>\n            {edit && (\n                <Typography variant='caption' className={classes.fieldTitle}>\n                    Editing coming soon...\n                </Typography>\n            )}\n\n            {create && (\n                <DropzoneArea\n                    initialFiles={state.files || []}\n                    acceptedFiles={['image/*']}\n                    dropzoneText=''\n                    filesLimit={1}\n                    onChange={files => handleSetField(name, files)}\n                    dropzoneClass={classes.dropzone}\n                    classes={{\n                        dropzoneTextStyle: classes.fieldTitle,\n                        dropzoneParagraph: classes.fieldTitle\n                    }}\n                />\n            )}\n            {(view || edit) && state.upload !== 'False' && (\n                <Image\n                    src={config.mediaRoot + state.upload}\n                    loading={<CircularProgress />}\n                    color={theme.palette.background.paper}\n                    imageStyle={{ borderRadius: 10 }}\n                />\n            )}\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    TextField,\n    Grid,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Map } from '../../../components'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    name,\n    handleGeocodeQuery,\n    disabled\n}) => {\n    var { view } = states.mode\n    var {\n        handleSetField,\n        setAddressIsSearchResult,\n        setLocationState,\n        handleSetLocationResult\n    } = setters\n    var { locationState, state } = states\n\n    const theme = useTheme()\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    return (\n        <Fragment>\n            <TextField\n                id='address'\n                label='Address'\n                variant='outlined'\n                fullWidth\n                disabled={disabled}\n                value={state.address || ''}\n                inputProps={{\n                    readOnly: view\n                }}\n                onChange={e => {\n                    handleSetField(name, e.target.value)\n                    if (e.target.value) {\n                        setAddressIsSearchResult(false)\n                    } else {\n                        // allow blank address\n                        setAddressIsSearchResult(true)\n                    }\n                }}\n                error={!!locationState.error}\n                InputProps={{\n                    endAdornment: !view && (\n                        <IconButton\n                            className={classes.iconButton}\n                            aria-label='search'\n                            id='search'\n                            onClick={e =>\n                                handleGeocodeQuery({\n                                    query: state.address,\n                                    initial: false\n                                })\n                            }\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    ),\n                    style: { marginBottom: 3 }\n                }}\n                onKeyDown={e => {\n                    if (e.keyCode === 13 && !view) {\n                        e.preventDefault()\n                        document.getElementById('search').click()\n                    }\n                }}\n                helperText={locationState.error}\n            />\n            <Popover\n                id={locationState.queryResults.length ? 'results' : undefined}\n                open={!!locationState.queryResults.length}\n                anchorEl={document.getElementById('address')}\n                onClose={e =>\n                    setLocationState({\n                        ...locationState,\n                        queryResults: []\n                    })\n                }\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <List component='div' disablePadding>\n                    {locationState.queryResults.map(result => (\n                        <ListItem\n                            key={result.placeName}\n                            button\n                            className={classes.nested}\n                            onClick={e => handleSetLocationResult(result)}\n                        >\n                            <ListItemText primary={result.placeName} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Popover>\n\n            <Grid container style={{ marginTop: 1 }}>\n                <Map\n                    interactive={false}\n                    className={classes.map}\n                    mapState={locationState.mapState}\n                    mapStyle={mapStyle}\n                    containerStyle={{\n                        height: '60vh',\n                        width: '100vw',\n                        borderRadius: 20,\n                        marginTop: 5\n                    }}\n                    artefacts={[\n                        {\n                            center: locationState.mapState.center,\n                            id: -1\n                        }\n                    ]}\n                />\n            </Grid>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\n\nexport default ({ save, cancel, updateErrors, classes }) => {\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            justify='space-evenly'\n            alignItems='center'\n            spacing={1}\n            style={{ marginTop: 1 }}\n        >\n            <Grid item xs={6}>\n                <MyButton onClick={save} name='Save' color='primary' />\n            </Grid>\n            <Grid item xs={6}>\n                <MyButton\n                    onClick={cancel}\n                    name='Cancel'\n                    color='secondary'\n                />\n            </Grid>\n\n            {updateErrors && (\n                <Grid item xs={12}>\n                    <FormHelperText error>\n                        Error Updating Artefact\n                    </FormHelperText>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid, FormControl, Paper } from '@material-ui/core'\nimport EditButtons from './EditButtons'\n\nexport default ({\n    child: Child,\n    childProps,\n    name,\n    classes,\n    editButtonProps,\n    ...rest\n}) => {\n    var { beingEdited, states } = childProps\n    var { edit } = states.mode\n    var thisBeingEdited = beingEdited === name\n    var someBeingEdited = edit && !!beingEdited\n    return (\n        <Paper className={classes.paperWrapper} elevation={3}>\n            <FormControl className={classes.formControl} fullWidth>\n                <Child\n                    {...childProps}\n                    disabled={someBeingEdited && !thisBeingEdited}\n                    name={name}\n                    classes={classes}\n                    {...rest}\n                />\n\n                {thisBeingEdited && <EditButtons {...editButtonProps} />}\n            </FormControl>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport {\n    Button,\n    Snackbar,\n    IconButton,\n    ClickAwayListener\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id='message-id'>Edit successful</span>}\n                action={[\n                    <Button\n                        key='view'\n                        color='secondary'\n                        size='small'\n                        onClick={e => viewArtefact(id)}\n                    >\n                        VIEW\n                    </Button>,\n                    <IconButton\n                        key='close'\n                        aria-label='close'\n                        color='inherit'\n                        onClick={() => setOpen(false)}\n                        className={classes.close}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </ClickAwayListener>\n    )\n}\n","import React from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button\n} from '@material-ui/core'\n\nexport default ({ open, setOpen, deleteArtefact, artefact }) => {\n    return (\n        <Dialog\n            fullWidth\n            maxWidth='sm'\n            open={open}\n            onClose={() => setOpen(false)}\n            aria-labelledby='help-title'\n        >\n            <DialogTitle>Delete Artefact</DialogTitle>\n            <DialogContent>\n                <DialogContentText>This cannot be undone</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color='secondary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() =>\n                        deleteArtefact({ variables: { id: artefact.id } })\n                    }\n                    color='primary'\n                >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useContext, useState, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { CssBaseline, Grid, CircularProgress } from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { geocodeQuery, artefactFamilyFormUseStyles } from '../../components'\n\nimport {\n    Head,\n    Name,\n    State,\n    Description,\n    Admin,\n    Date,\n    Privacy,\n    Families,\n    Images,\n    FieldWrapper,\n    Address,\n    SuccessSnackbar,\n    DeleteDialog,\n    CreateButton\n} from './components'\nimport authContext from '../../authContext'\n\nimport { Layout } from '../../components'\n\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION,\n    DELETE_ARTEFACT_MUTATION\n} from '../../gqlQueriesMutations'\n\nimport { AUTH_TOKEN, config } from '../../constants'\nimport axios from 'axios'\n\nfunction ArtefactView(props) {\n    // get the mode\n    // var { create, edit, view } = props\n    // var mode = { create: create, edit: edit, view: view }\n    const [mode, setMode] = useState({\n        create: props.create,\n        edit: props.edit,\n        view: props.view\n    })\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    var { artefactStates, families } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors\n\n    if (!mode.create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && mode.edit) {\n        setMode({ view: true })\n    }\n\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [deleteOpen, setDeleteOpen] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (mode.edit || mode.view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families\n    ) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n        console.log(artefact)\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (mode.create && families && !state.belongsToFamiliesBools) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null, state: 'OKY' })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (mode.edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n        setMode({ view: true })\n    }\n\n    // send user to home\n    const pushHomeURL = () => {\n        const { history } = props\n        if (history) {\n            history.push(`/`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        console.log(\"here's the data\")\n        console.log(data)\n        var id = data.data.artefactCreate.artefact.id\n        pushViewArtefactURL(id)\n    }\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const deleteCompleted = async data => {\n        pushHomeURL()\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n    const handleDeleteError = async errors => {\n        console.error('Deletion errors occured: ', errors)\n    }\n\n    const createArtefact = async (\n        variables,\n        successCallback,\n        errorCallback\n    ) => {\n        console.log(\"here's input from call\")\n        console.log(variables)\n        // const input = \"hello\"\n        let form_data = new FormData()\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0])\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\n        form_data.append('variables', JSON.stringify(variables))\n        let url = config.uri\n        axios\n            .post(url, form_data, {\n                headers: {\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Transfer-Encoding': 'multipart/form-data'\n                }\n            })\n            .then(res => {\n                successCallback(res.data)\n            })\n            .catch(err => {\n                // console.error(err);\n                errorCallback(err)\n            })\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const [deleteArtefact, { error: deleteErrors }] = useMutation(\n        DELETE_ARTEFACT_MUTATION,\n        {\n            onCompleted: deleteCompleted,\n            onError: handleDeleteError\n        }\n    )\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n        createArtefact(input, handleCreationCompleted, handleCreationError)\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (mode.edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        mode.create ? submitForm(e) : saveChange(e)\n    }\n\n    if ((mode.edit || mode.view) && dataLoading) {\n        return <CircularProgress />\n    }\n\n    const editButtonProps = {\n        save: saveChange,\n        cancel: cancelEditing,\n        updateErrors: updateErrors,\n        classes: classes\n    }\n\n    const componentProps = {\n        classes: classes,\n        beingEdited: beingEdited,\n        artefactStates: artefactStates,\n        username: context.user.username,\n        families: families,\n        states: {\n            state: state,\n            locationState: locationState,\n            mode: mode\n        },\n        setters: {\n            handleSetField: handleSetField,\n            setMode\n        }\n    }\n\n    const addressProps = {\n        ...componentProps,\n        handleGeocodeQuery: handleGeocodeQuery,\n        setters: {\n            ...componentProps.setters,\n            setLocationState: setLocationState,\n            setAddressIsSearchResult: setAddressIsSearchResult,\n            handleSetLocationResult: handleSetLocationResult\n        }\n    }\n\n    const components = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: mode.view ? null : Privacy, name: 'isPublic' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        {\n            comp: mode.view && state.upload === 'False' ? null : Images,\n            name: 'files'\n        }\n    ]\n\n    const componentsViewMode = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: Families, name: 'belongsToFamiliesBools' }\n    ]\n    const regularView = !mode.view || state.upload === 'False'\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <Grid container className={classes.outerContainer} spacing={1}>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={1}\n                >\n                    <Head\n                        isAdmin={isAdmin}\n                        openDelete={() => setDeleteOpen(true)}\n                        noErrors={noErrors}\n                        {...componentProps}\n                    />\n                </Grid>\n\n                {regularView &&\n                    components.map(({ comp, name, widthProps }) => {\n                        if (comp === null) return null\n                        if (!widthProps) widthProps = { xs: 6, sm: 6 }\n                        return (\n                            <Grid\n                                container\n                                item\n                                {...widthProps}\n                                key={name}\n                                // alignItems='flex-start'\n                                alignContent='stretch'\n                            >\n                                <FieldWrapper\n                                    key={comp}\n                                    child={comp}\n                                    name={name}\n                                    childProps={componentProps}\n                                    editButtonProps={editButtonProps}\n                                    classes={classes}\n                                />\n                            </Grid>\n                        )\n                    })}\n\n                {!regularView && (\n                    <Fragment>\n                        <Grid\n                            container\n                            item\n                            xs={12}\n                            sm={6}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                        >\n                            <FieldWrapper\n                                child={Images}\n                                name={'files'}\n                                childProps={componentProps}\n                                editButtonProps={editButtonProps}\n                                classes={classes}\n                            />\n                        </Grid>\n\n                        <Grid\n                            container\n                            item\n                            xs={12}\n                            sm={6}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                            spacing={1}\n                        >\n                            {componentsViewMode.map(\n                                ({ comp, name, widthProps }) => {\n                                    if (comp === null) return null\n                                    if (!widthProps)\n                                        widthProps = { xs: 12 }\n                                    return (\n                                        <Grid\n                                            container\n                                            item\n                                            {...widthProps}\n                                            key={name}\n                                            // alignItems='flex-start'\n                                            alignContent='stretch'\n                                            padding={1}\n                                        >\n                                            <FieldWrapper\n                                                key={comp}\n                                                child={comp}\n                                                name={name}\n                                                childProps={componentProps}\n                                                editButtonProps={\n                                                    editButtonProps\n                                                }\n                                                classes={classes}\n                                            />\n                                        </Grid>\n                                    )\n                                }\n                            )}\n                        </Grid>\n                    </Fragment>\n                )}\n\n                {(!mode.view || state.address) && (\n                    <Grid item xs={12}>\n                        <FieldWrapper\n                            child={Address}\n                            name='address'\n                            childProps={addressProps}\n                            editButtonProps={editButtonProps}\n                            classes={classes}\n                        />\n                    </Grid>\n                )}\n\n                {mode.create && (\n                    <Grid item xs={12} md={12}>\n                        <CreateButton noErrors={noErrors} fullWidth />\n                    </Grid>\n                )}\n\n                <SuccessSnackbar\n                    open={snackbarOpen}\n                    setOpen={setSnackbarOpen}\n                    viewArtefact={pushViewArtefactURL}\n                    classes={classes}\n                    id={artefact ? artefact.id : '-1'}\n                />\n\n                <DeleteDialog\n                    open={deleteOpen}\n                    setOpen={setDeleteOpen}\n                    deleteArtefact={deleteArtefact}\n                    artefact={artefact}\n                />\n            </Grid>\n        </form>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <Layout>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid\n                    container\n                    spacing={0}\n                    alignItems='flex-start'\n                    justify='center'\n                    style={{ minHeight: '80vh' }}\n                >\n                    <Grid item xs={11} md={9}>\n                        <CssBaseline />\n                        <ArtefactView {...props} />\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Layout>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    container: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1)\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery($first: Int!) {\n        me {\n            artefactAdministratorOf(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n    const classes = useStyles()\n    const numArtefactsFetched = 10\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        variables: {\n            first: numArtefactsFetched\n        },\n        onCompleted: data =>\n            SetArtefactEdges(data.me.artefactAdministratorOf.edges),\n        fetchPolicy: 'network-only'\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <Loading />\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={2} className={classes.container}>\n                <Grid item xs={12}>\n                    <Grid container justify='center' spacing={2}>\n                        {artefactEdges.map(edge => (\n                            <Grid item key={edge.node.id}>\n                                <ArtefactCard artefact={edge.node} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt='You are lost - Obi Wan'/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState } from 'react'\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {\n    Typography,\n    Button,\n    TextField,\n    Grid,\n    FormControl,\n    Container\n} from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useMutation, useQuery } from '@apollo/react-hooks'\nimport {ArtefactCard, Loading} from '../components'\nimport { Redirect } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n    query {\n        me {\n            isMemberOf {\n                id\n                familyName\n                joinCode\n                hasArtefacts {\n                    edges {\n                        node {\n                            id\n                            name\n                            admin {\n                                username\n                            }\n                        }\n                    }\n                }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                    hasArtefacts {\n                        edges {\n                            node {\n                                id\n                                name\n                                description\n                                upload\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst JOIN_FAMILY_MUTATION = gql`\n    mutation JoinFamily($joinCode: String!) {\n        familyJoin(joinCode: $joinCode) {\n            family {\n                familyName\n                familyAdmin {\n                    username\n                }\n            }\n        }\n    }\n`\n\nconst SELECT_FAMILY_MUTATION = gql`\n    mutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n        updateProfile(input: { id: $profileId, selectedFamily: $toFamily }) {\n            id\n            selectedFamily\n        }\n    }\n`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n    const [formJoinCode, setFormJoinCode] = useState('')\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(\n        JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n        }\n    )\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error('Enter a valid joinCode')\n            return\n        }\n\n        joinFamilyMutation({ variables: { joinCode: formJoinCode } })\n    }\n\n    const _homepageInfoCompleted = data => {\n        const selectedFamily = data.me.profile.selectedFamily\n        if (!selectedFamily) {\n            console.error('User has not selected a family')\n            return\n        }\n    }\n\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(\n        HOMEPAGE_INFO,\n        {\n            onCompleted: data => {\n                _homepageInfoCompleted(data)\n            },\n            fetchPolicy: 'network-only'\n        }\n    )\n\n    const [selectFamily, { data: mutation_data }] = useMutation(\n        SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n        }\n    )\n\n    const inputLabel = React.useRef(null)\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value\n        console.log(\"Here's the new family\")\n        selectFamily({\n            variables: { profileId: profileId, toFamily: newFamily }\n        })\n    }\n\n    if (loading || !home_data.me) {\n        return <Loading />\n    }\n\n    let selectedFamily;\n    let families;\n    let profileId;\n    \n    if (home_data) {\n        selectedFamily = home_data.me.profile.selectedFamily\n        families = home_data.me.isMemberOf\n        profileId = home_data.me.profile.id\n    } else {\n        // Go to logout to remove token which is normally the cause of this error\n        console.error('User data was not defined, but fetched, logging out')\n        return <Redirect to='/logout' />\n    }\n\n    let artefacts = []\n\n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges\n    }\n\n\n    return (\n        <Layout>\n            <Container style={{ paddingTop: \"1rem\"}}>\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    {selectedFamily && (\n                        <div>\n                            <Typography variant='h1'>\n                                {selectedFamily.familyName}\n                            </Typography>\n                            <Typography variant='h5'>\n                                Join code: {selectedFamily.joinCode}\n                            </Typography>\n                        </div>\n                    )}\n                    {!selectedFamily && (\n                        <Typography variant='h2'>\n                            Join and/or Select a Family\n                        </Typography>\n                    )}\n                    <h4>Your username is (temp, for testing): {username}</h4>\n                    <GridList cellHeight={'auto'} cols={2}>\n                        {artefacts.map((artefact, key) => (\n                            <GridListTile key={key}>\n                                <ArtefactCard\n                                    key={key}\n                                    artefact={artefact.node}\n                                />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={3}>\n                        <TextField\n                            fullWidth\n                            label='Select Family'\n                            variant='outlined'\n                            disabled={families.length <= 1}\n                            value={selectedFamily ? selectedFamily.id : null}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'family',\n                                autoWidth: true\n                            }}\n                        >\n                            {families &&\n                                families.map((item, key) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.familyName}\n                                    </MenuItem>\n                                ))}\n                        </TextField>\n                    <FormControl fullWidth>\n                        <TextField\n                            id='joinCodeField'\n                            label='Enter join code'\n                            value={formJoinCode}\n                            className={classes.textField}\n                            margin='normal'\n                            onChange={e => setFormJoinCode(e.target.value)}\n                            fullWidth\n                        />\n                        <Button variant='outlined' onClick={handleJoinFamily}>\n                            Join Family\n                        </Button>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            </Container>\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React, { useState, Fragment } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, Layout } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to show more information\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const initMapState = { zoom: [2] }\n    const [mapState, setMapState] = useState(initMapState)\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const [helpOpen, setHelpOpen] = useState(false)\n    const getArtefactMapData = data => {\n        console.log('Query resulted')\n        if (!data) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        },\n        fetchPolicy: 'network-only'\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact') {\n            if (event.target.value !== null) {\n                var newCenter = event.target.value.center\n                if (newCenter === mapState.center) {\n                    newCenter = newCenter.map(coord => 0.99999999 * coord)\n                }\n                setMapState({\n                    center: newCenter\n                })\n                event.target.value.initPopupOpen = true\n            }\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                    // onClick={e => setState({ ...state, selectedArtefact: {} })}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value} key={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {mapArtefacts.length > 0 && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Jump to'\n                                variant='outlined'\n                                value={state.selectedArtefact || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem\n                                        value={artefact}\n                                        key={artefact.id}\n                                    >\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='menu'\n                    onClick={() => setHelpOpen(true)}\n                >\n                    <HelpIcon />\n                </IconButton>\n            </Grid>\n\n            <Dialog\n                fullWidth\n                maxWidth='sm'\n                open={helpOpen}\n                onClose={() => setHelpOpen(false)}\n                aria-labelledby='help-title'\n            >\n                <MyDialogContent />\n                <DialogActions>\n                    <Button onClick={() => setHelpOpen(false)} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <GetFamiliesWrapper {...props} child={MapView} />\n    </Layout>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\nimport DetailView from './views/artefactViews/DetailView'\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                        landingPage\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}