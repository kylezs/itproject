{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/Loading.js","views/LandingPage.js","components/PrivateRoute.js","views/CreateView.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/CreateArtefactView.js","views/DetailView.js","views/UserHomeView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","config","uri","VERIFY_TOKEN_MUTATION","gql","props","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Button","component","RouterLink","to","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","loggedIn","className","AppBar","position","Toolbar","edge","Typography","variant","Link","LoggedInBar","username","NotLoggedInBar","Container","style","padding","children","Loading","progress","margin","Layout","CircularProgress","LandingPage","WaitWraper","state","checkAuthenticated","this","setState","localToken","localStorage","getItem","console","log","Component","contextType","PrivateRoute","LoggedIn","loggedOut","landingPage","path","rest","render","LOGIN_MUTATION","body","backgroundColor","palette","common","white","paper","marginTop","display","flexDirection","alignItems","form","width","submit","Login","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","data","a","token","tokenAuth","setItem","history","push","_handleError","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","onCompleted","onError","login","submitForm","variables","preventDefault","CssBaseline","onSubmit","Grid","container","item","xs","TextField","required","fullWidth","label","autoFocus","onChange","e","target","value","error","type","FormHelperText","name","PASSWORD_SCHEMA","require","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","i","length","rule","SIGNUP_MUTATION","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","validate","list","errorPassword","errorConfirmPassword","autoComplete","disabled","Logout","CREATE_FAMILY_MUTATION","DialogTitle","withStyles","closeButton","right","top","grey","disableTypography","DialogContent","MuiDialogContent","CreateFamilyView","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","setOpen","_completed","familyCreate","family","createFamily","multiline","rows","defaultValue","Dialog","align","CREATE_ARTEFACT_MUTATION","GET_ARTEFACT_STATES_QUERY","CreateArtefactView","artefactName","setArtefactName","isPublic","setIsPublic","artefactId","setArtefactId","artefactStates","setArtefactStates","artefactCondition","setArtefactCondition","files","setFiles","artefactCreate","artefact","createArtefact","_saveArtefactStates","statesData","temp","__type","enumValues","desc","description","useQuery","loading","validInputs","select","textField","SelectProps","MenuProps","menu","Object","keys","map","index","key","file","concat","ARTEFACT_DETAIL","DetailView","params","addedAt","flexWrap","justifyContent","overflow","background","gridList","height","icon","tileData","img","author","LIST_OF_FAMILIES","UserHomeView","families","me","isMemberOf","GridList","cellHeight","tile","GridListTile","src","alt","GridListTileBar","subtitle","actionIcon","App","exact","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","then","setSession","catch","verifyToken","payload","authProviderValue","pushState","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ed4a54f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst authContext = createContext({\r\n    authenticated: false, // to check if authenticated or not\r\n    user: {}, // store all the user details\r\n    authToken: \"\", // a\r\n    initiateLogin: () => { }, \r\n    handleAuthentication: () => { }, \r\n    logout: () => { }\r\n});\r\n\r\nexport default authContext;\r\nexport const AuthProvider = authContext.Provider;\r\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\r\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\r\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\r\n\r\n// GQL API for prod vs dev\r\n\r\n// Whatever server the app is on, /graphql/\r\nconst prod = {\r\n    uri: '/graphql/'\r\n};\r\n\r\n// In case running dev on either :8000 or :3000, this must be specified as full path\r\nconst dev = {\r\n    uri: 'http://localhost:8000/graphql/'\r\n};\r\n\r\n// If npm run build => production, if npm start => development (built into react)\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod;\r\n","import React, { useState } from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { AuthProvider } from \"../authContext\";\r\nimport { AUTH_TOKEN } from '../constants'\r\n\r\n\r\nconst VERIFY_TOKEN_MUTATION = gql`\r\nmutation VerifyToken($token: String!) {\r\n    verifyToken(token: $token) {\r\n        payload\r\n    }\r\n}\r\n`\r\n\r\nexport default function Auth(props) {\r\n    const [authenticated, setAuthenticated] = useState(false)\r\n    const [user, setUser] = useState({})\r\n    const [authToken, setAuthToken] = useState(\"\");\r\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\r\n\r\n    const handleAuthentication = async (authToken, _callback) => {\r\n        if (!authToken) {\r\n            authToken = localStorage.getItem(AUTH_TOKEN)\r\n        }\r\n\r\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\r\n            setSession(data)\r\n            if (_callback) {\r\n                _callback();\r\n            }\r\n        }).catch((errors) => {\r\n            // If could not validate it, remove it to stop unnecessary requests\r\n            localStorage[AUTH_TOKEN] = \"\"\r\n            if (_callback) {\r\n                _callback();\r\n            }\r\n        }\r\n\r\n        );\r\n        if (error) {\r\n            console.log(\"[Error] handleAuthentication()\")\r\n            return;\r\n        }\r\n\r\n        if (loading) {\r\n            console.log(\"Thing is loading\");\r\n        }\r\n\r\n    };\r\n\r\n    const setSession = (data) => {\r\n\r\n        if (error) {\r\n            console.log(\"Invalid data, please sign in again\");\r\n            return;\r\n        }\r\n\r\n        const username = data.data.verifyToken.payload.username\r\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\r\n        const user = {\r\n            username: username,\r\n        };\r\n        setAuthenticated(true);\r\n        setAuthToken(data.verifyToken);\r\n        setUser(user);\r\n    }\r\n\r\n    const initiateLogin = () => {\r\n        this.history.pushState(null, 'login');\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log(\"Logout called\");\r\n        setAuthenticated(false);\r\n        setUser({});\r\n        setAuthToken(\"\");\r\n        localStorage[AUTH_TOKEN] = \"\";\r\n    };\r\n\r\n    const authProviderValue = {\r\n        authenticated,\r\n        authToken,\r\n        user,\r\n        initiateLogin: initiateLogin,\r\n        handleAuthentication: handleAuthentication,\r\n        logout: logout\r\n    };\r\n\r\n    return (\r\n        <AuthProvider value={authProviderValue}>\r\n            {props.children}\r\n        </AuthProvider>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { IconButton, Menu, MenuItem, Button } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport authContext from '../authContext';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nexport default props => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const context = useContext(authContext);\r\n    const open = Boolean(anchorEl);\r\n\r\n    function handleMenu(event) {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    function handleClose() {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    function handleLogout() {\r\n        context.logout();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button component={RouterLink} to='/family/create' color=\"inherit\">\r\n                Create Family\r\n            </Button>\r\n            <Button color=\"inherit\">\r\n                Manage Artefacts\r\n            </Button>\r\n            <Button component={RouterLink} to='/artefacts/create' color=\"inherit\">\r\n                Create Artefact\r\n            </Button>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n            >\r\n                <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst LoginLink = React.forwardRef((props, ref) => (\r\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\r\n));\r\n\r\nconst SignupLink = React.forwardRef((props, ref) => (\r\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\r\n));\r\n\r\n\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\r\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport LoggedInBar from './LoggedInBar';\r\nimport NotLoggedInBar from './NotLoggedInBar';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Link }  from '@material-ui/core';\r\n\r\nimport authContext from '../authContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n    const classes = useStyles();\r\n    const context = useContext(authContext);\r\n    let loggedIn = context.authenticated;\r\n    let username = null;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        <Link component={RouterLink} to='/' color=\"inherit\" variant=\"inherit\" underline=\"none\">\r\n                            Family AR\r\n                        </Link>\r\n                    </Typography>\r\n            {loggedIn && (\r\n                <LoggedInBar username={username} />\r\n            )}\r\n            {!loggedIn && (\r\n                <NotLoggedInBar />\r\n            )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Header from './Header';\r\n\r\nexport default props => {\r\n\r\n    const containerStyles = {\r\n        padding: '20px',\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Container style={containerStyles}>\r\n                {props.children}\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Layout from '../components/Layout';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction Loading() {\r\n    const useStyles = makeStyles(theme => ({\r\n        progress: {\r\n            margin: theme.spacing(2),\r\n        },\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Layout>\r\n            <CircularProgress className={classes.progress} />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport Layout from '../components/Layout';\r\n\r\n// NB: REMOVE THE LAYOUT, THIS SHOULD NOT HAVE THE APP BAR, THIS SHOULD BE EXTRA COOL DESIGNED PAGE\r\nfunction LandingPage(props) {\r\n    return (\r\n        <Layout>\r\n            This is some cool landing page yo. Welcome!<br />\r\n            Also, in the future, this page should not have a navigation bar, it'll have cooler design stuff. It only has the nav bar\r\n            for easier linking to signup / login for now\r\n        </Layout>\r\n    );\r\n}\r\nexport default LandingPage\r\n","import React, { Component, useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authContext from '../authContext';\r\nimport { AUTH_TOKEN } from '../constants';\r\nimport Loading from './Loading';\r\nimport LandingPage from '../views/LandingPage';\r\n\r\n\r\nclass WaitWraper extends Component {\r\n    state = { checkAuthenticated: false }\r\n    static contextType = authContext;\r\n\r\n    componentDidMount() {\r\n        if (this.context.authenticated) {\r\n            this.setState({checkAuthenticated: true})\r\n        }\r\n        const localToken = localStorage.getItem(AUTH_TOKEN);\r\n\r\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\r\n        if (!this.context.authenticated && localToken) {\r\n            this.context.handleAuthentication(localToken, () => {\r\n                console.log(\"Setting state\");\r\n                this.setState({checkAuthenticated: true})\r\n            });\r\n        } else {\r\n            this.setState({ checkAuthenticated: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Render the children with a function using state as the argument\r\n        return this.props.children(this.state.checkAuthenticated);\r\n    }\r\n}\r\n\r\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\r\n    const context = useContext(authContext);\r\n    const authenticated = context.authenticated;\r\n\r\n    if (!loggedOut) {\r\n        loggedOut = \"/login\"\r\n    }\r\n\r\n    console.log(\"Authenticated: \", authenticated)\r\n    return (\r\n        <WaitWraper>\r\n            {checkAuthenticated => checkAuthenticated === false\r\n            ? <Loading />\r\n            : <Route {...rest}\r\n                render={props => {\r\n                    if (authenticated) {\r\n                        return <LoggedIn {...props} />\r\n                    } else if (!authenticated && landingPage) {\r\n                        return <LandingPage />;\r\n                    } else {\r\n                        return (\r\n                            <Redirect to={loggedOut} />\r\n                        )\r\n                    }\r\n                }} />\r\n            }\r\n        </WaitWraper>\r\n    )\r\n}","import React from 'react'\r\nimport gql from \"graphql-tag\";\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nconst CREATE_ARTEFACT = gql`\r\nmutation ArtefactCreate($artefactInput:ArtefactInputType!) {\r\n  artefactCreate(input: $artefactInput) {\r\n    artefact {\r\n      name,\r\n      description\r\n    }\r\n  }\r\n}`\r\n\r\nexport default function CreateView(props) {\r\n    let name, description;\r\n    // eslint-disable-next-line\r\n    const [createArtefact, { data, loading, errors }] = useMutation(CREATE_ARTEFACT);\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    } else if (errors) {\r\n        return <p>ERROR!</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create an Artefact</h1>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault();\r\n                    createArtefact({ variables: {\r\n                        \"artefactInput\": {\r\n                            \"name\": name.value,\r\n                            \"description\": description.value\r\n                        }\r\n                    }\r\n                    });\r\n                    name.value = '';\r\n                    description.value = '';\r\n                }}\r\n            >\r\n                <label>Name</label>\r\n                <input\r\n                    ref={node => {\r\n                        name = node;\r\n                    }}\r\n                />\r\n                <br />\r\n                <label>Description</label>\r\n                <input\r\n                    ref={node => {\r\n                        description = node;\r\n                    }}\r\n                />\r\n                <br />\r\n                <button type=\"submit\">Create</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Layout from '../components/Layout';\r\nimport authContext from '../authContext';\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from \"../constants.js\"\r\n\r\n\r\nconst LOGIN_MUTATION = gql`\r\nmutation TokenAuth($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n        token\r\n    }\r\n}\r\n`\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '50%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Login(props) {\r\n\r\n    const context = useContext(authContext);\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [invalidCred, setInvalidCred] = useState(false)\r\n    const [unknownError, setUnknownError] = useState(false)\r\n\r\n    const _confirm = async data => {\r\n        const { token } = data.tokenAuth\r\n        console.log(\"getting token first in confirm mutation\");\r\n        context.handleAuthentication(token);\r\n        localStorage.setItem(AUTH_TOKEN, token);\r\n        // this._saveUserData(token)\r\n        props.history.push(`/`)\r\n    }\r\n\r\n    const _handleError = async errors => {\r\n        console.log(\"_handleError run\")\r\n        if (errors.graphQLErrors){\r\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\r\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)){\r\n                setInvalidCred(true)\r\n                console.log(\"invalid credentials\")\r\n            } else {\r\n                console.log(\"unexpect error(s):\")\r\n                console.log(errors)\r\n                setUnknownError(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [login] = useMutation(\r\n        LOGIN_MUTATION,\r\n        {\r\n            onCompleted: _confirm,\r\n            onError: _handleError,\r\n        }\r\n    );\r\n\r\n    const submitForm = async (event) => {\r\n        login({ variables: {username: username, password: password} })\r\n        event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={submitForm}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Log In\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                autoFocus\r\n                                onChange={e => setUsername(e.target.value)}\r\n                                error={invalidCred}\r\n                                />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                error={invalidCred}\r\n                                />\r\n                            {\r\n                                invalidCred &&\r\n                                <FormHelperText id=\"password\" error={invalidCred}>Please enter valid credentials</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                name=\"submit\"\r\n                                label=\"Submit\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                >\r\n                                Log In\r\n                            </Button>\r\n                            {\r\n                                unknownError &&\r\n                                <FormHelperText id=\"password\" error={unknownError}>Unknown Error Occurred</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid item>\r\n                                <Link component={RouterLink} to=\"/signup\">\r\n                                    Need an account? Sign up\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","var passwordValidator = require('password-validator');\r\n\r\n// Create a schema\r\nexport var PASSWORD_SCHEMA = new passwordValidator();\r\n\r\nconst min_len = 6\r\nconst max_len = 100\r\n\r\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\r\nPASSWORD_SCHEMA\r\n    .is().min(min_len)                                    // Minimum length 8\r\n    .is().max(max_len)                                  // Maximum length 100\r\n    .has().uppercase()                              // Must have uppercase letters\r\n    .has().digits()                                 // Must have digits\r\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\r\n    // .has().lowercase()                              // Must have lowercase letters\r\n    // .has().not().spaces()                           // Should not have spaces\r\n\r\nexport const parseFailedRules = (rules) => {\r\n    var output = ''\r\n    for (var i=0; i < rules.length; i++){\r\n        if (i >=1) output += \" | \"\r\n        \r\n        var rule = rules[i]\r\n        if (rule === 'min'){\r\n            output += `Password must be at least ${min_len} characters long`\r\n        }\r\n        if (rule === 'max') {\r\n            output += `Password must be at most ${max_len} characters long`\r\n        }\r\n        if (rule === 'uppercase') {\r\n            output += `Password must have an uppercase letter`\r\n        }\r\n        if (rule === 'digits') {\r\n            output += `Password must have a digit`\r\n        }\r\n        if (rule === 'oneOf') {\r\n            output += `Password is too common`\r\n        }\r\n    }\r\n    return output\r\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Layout from '../components/Layout';\r\n\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { USERNAME_TAKEN_ERR_MSG } from \"../constants.js\"\r\nimport { PASSWORD_SCHEMA, parseFailedRules } from \"../components/passwordValidator.js\"\r\n\r\nconst SIGNUP_MUTATION = gql`\r\nmutation SignupMutation($email: String!, $password: String!, $username: String!){\r\n    createUser(email: $email, username: $username, password: $password) {\r\n        user {\r\n            id\r\n            username\r\n            email\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '50%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Signup(props) {\r\n    const [username, setUsername] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\r\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\r\n    const [validPassword, setValidPassword] = useState(false)\r\n    const [failedPassRules, setFailedPassRules] = useState([])\r\n    const [unknownError, setUnknownError] = useState(false)\r\n\r\n    var emailValidator = require(\"email-validator\");\r\n    \r\n\r\n    const classes = useStyles();\r\n    const _confirm = async data => {\r\n        // handle signup errors and potentially login\r\n        props.history.push(`/login`)\r\n    }\r\n\r\n    const _handleError = async errors => {\r\n        console.log(\"_handleError run\")\r\n        if (errors.graphQLErrors){\r\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\r\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)){\r\n                setUsernameIsTaken(true)\r\n            } else {\r\n                console.log(\"unexpect error(s):\")\r\n                console.log(errors)\r\n                setUnknownError(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [signup] = useMutation(\r\n        SIGNUP_MUTATION,\r\n        {\r\n            onCompleted: _confirm,\r\n            onError: _handleError,\r\n        }\r\n    );\r\n\r\n    const submitForm = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"form submitted\")\r\n        signup({ variables: {username: username, email: email, password: password} })\r\n    }\r\n\r\n    const changePassword = async (pass) => {\r\n        setPassword(pass)\r\n\r\n        // password validation\r\n        setFailedPassRules(PASSWORD_SCHEMA.validate(pass, { list: true }))\r\n        if (failedPassRules){\r\n            setValidPassword(false)\r\n        } else {\r\n            setValidPassword(true)\r\n        }\r\n    }\r\n\r\n    const errorPassword = !!password && !validPassword\r\n    const errorConfirmPassword = !!confirmPassword && !(confirmPassword === password)\r\n\r\n    return (\r\n        <Layout>\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={submitForm}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Sign up\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"username\"\r\n                                name=\"username\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                autoFocus\r\n                                error={usernameIsTaken}\r\n                                onChange={e => setUsername(e.target.value)}\r\n                                />\r\n                            {\r\n                                usernameIsTaken &&\r\n                                <FormHelperText id=\"username\" error={usernameIsTaken}>Username is taken</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                type=\"email\"\r\n                                error={emailIsTaken || (!!email && !emailValidator.validate(email))}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                            {\r\n                                !!email && !emailValidator.validate(email) &&\r\n                                <FormHelperText id=\"email\" error={!emailValidator.validate(email)}>Email is invalid</FormHelperText>\r\n                            }\r\n                            {\r\n                                emailIsTaken &&\r\n                                <FormHelperText id=\"email\" error={emailIsTaken}>Email is taken</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={ e => changePassword( e.target.value )}\r\n                                error={errorPassword}\r\n                                />\r\n                            {\r\n                                errorPassword &&\r\n                                <FormHelperText id=\"password\" error={errorPassword}>{parseFailedRules(failedPassRules)}</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"confirmPassword\"\r\n                                autoComplete=\"current-password\"\r\n                                onChange={ e => setConfirmPassword( e.target.value )}\r\n                                error={errorConfirmPassword}\r\n                                />\r\n                            {\r\n                                errorConfirmPassword &&\r\n                                <FormHelperText id=\"confirmPassword\" error={errorConfirmPassword}>Passwords must match</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                name=\"submit\"\r\n                                label=\"Submit\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    !(confirmPassword === password)\r\n                                    || !username || !email || !validPassword\r\n                                    || !emailValidator.validate(email)\r\n                                }\r\n                                >\r\n                                Sign Up\r\n                            </Button>\r\n                            {\r\n                                unknownError &&\r\n                                <FormHelperText error={unknownError}>Unknown Error Occurred</FormHelperText>\r\n                            }\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid item>\r\n                                <Link component={RouterLink} to=\"/login\">\r\n                                    Already have an account? Log in\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Signup\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport authContext from '../authContext';\r\n\r\nfunction Logout() {\r\n    const context = useContext(authContext);\r\n    context.logout();\r\n\r\n    return (\r\n        <Redirect to='/login' />\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useContext, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Layout from '../components/Layout';\r\nimport authContext from '../authContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport gql from 'graphql-tag'\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport { IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '50%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n// Get the familyName and joinCode back to present to the user straight away after\r\n// successful creation\r\nconst CREATE_FAMILY_MUTATION = gql`\r\nmutation FamilyCreate($familyName: String!, $about: String) {\r\n  familyCreate(input: {\r\n    familyName: $familyName\r\n    about:$about\r\n  })\r\n  {\r\n    family {\r\n      familyName\r\n      joinCode\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nexport default function CreateFamilyView (props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const context = useContext(authContext);\r\n    const username = context.user.username;\r\n\r\n    const [familyName, setFamilyName] = useState(\"\")\r\n    const [about, setAbout] = useState(\"\")\r\n    const [joinCode, setJoinCode] = useState(\"\")\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const _completed = async (data) => {\r\n        console.log(data);\r\n        const { joinCode } = data.familyCreate.family\r\n        setJoinCode(joinCode);\r\n        setOpen(true);\r\n    }\r\n\r\n    const [createFamily, { data }] = useMutation(\r\n        CREATE_FAMILY_MUTATION, {\r\n            onCompleted: _completed,\r\n        }\r\n    );\r\n\r\n    const submitForm = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Family name: \" + familyName)\r\n        console.log(\"About: \" + about)\r\n        createFamily(\r\n            { \r\n                variables:\r\n                { \r\n                    familyName: familyName, \r\n                    about: about \r\n                } \r\n            })\r\n    }\r\n    \r\n    const handleClose = (event) => {\r\n        event.preventDefault();\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <h1>Create a Family</h1>\r\n            <p>Families are how you manage your artefacts. We recognise there is often complex overlap between families.\r\n                That's why you can create and be a part of several families, so you can separate which of the artefacts\r\n                you manage belong to which family.</p>\r\n            \r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={submitForm}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Create Family\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"family-name\"\r\n                                label=\"Family name\"\r\n                                autoFocus\r\n                                onChange={e => setFamilyName(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                multiline\r\n                                rows={6}\r\n                                fullWidth\r\n                                id=\"about\"\r\n                                label=\"Tell people about your family\"\r\n                                onChange={e => setAbout(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                disabled\r\n                                defaultValue={username}\r\n                                fullWidth\r\n                                id=\"family-admin\"\r\n                                label=\"Family Admin\"\r\n                                onChange={e => console.log(\"hello\")}\r\n                            />\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                name=\"create\"\r\n                                label=\"Create\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >\r\n                                Create\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n\r\n                {data && (\r\n                    <Dialog open={open} onClose={handleClose}>\r\n                        <DialogTitle onClose={handleClose}>\r\n                            Begin adding members to '{familyName}'!\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <Typography align='center'>\r\n                                Begin getting members to join your family!\r\n                                Simply share the code below to your family members, get them to sign up and then they\r\n                                can join!<br />\r\n                                {joinCode}\r\n                            </Typography>\r\n                            \r\n                        </DialogContent>\r\n                    </Dialog>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n\r\n    );\r\n}","import React, { useContext, useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Layout from '../components/Layout';\r\nimport authContext from '../authContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport gql from 'graphql-tag'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport { IconButton } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    '@global': {\r\n        body: {\r\n            backgroundColor: theme.palette.common.white,\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '50%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n// Get the id back to allow for querying for the artefact later\r\nconst CREATE_ARTEFACT_MUTATION = gql`\r\nmutation CreateArtefactMutation($name: String!, $state: String!, $isPublic: Boolean!, $description: String,){\r\n    artefactCreate(input: {\r\n        name: $name\r\n        state: $state\r\n        description: $description\r\n        isPublic: $isPublic\r\n    })\r\n    {\r\n        artefact {\r\n            id\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nconst GET_ARTEFACT_STATES_QUERY = gql`\r\nquery ArtefactStatesQuery($name: String!){\r\n    __type(name: $name){\r\n        enumValues{\r\n            name\r\n            description\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n    const { children, classes, onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nexport default function CreateArtefactView (props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const context = useContext(authContext);\r\n    const username = context.user.username;\r\n\r\n    const [artefactName, setArtefactName] = useState(\"\")\r\n    const [about, setAbout] = useState(\"\")\r\n    const [isPublic, setIsPublic] = useState(false)\r\n    const [artefactId, setArtefactId] = useState(false)\r\n    const [open, setOpen] = useState(false)\r\n    const [artefactStates, setArtefactStates] = useState({})\r\n    const [artefactCondition, setArtefactCondition] = useState(\"\")\r\n    const [files, setFiles] = useState([])\r\n\r\n    const _completed = async (data) => {\r\n        console.log(data);\r\n        const { id } = data.artefactCreate.artefact.id\r\n        setArtefactId(id)\r\n    }\r\n\r\n    const _handleError = async (errors) => {\r\n        console.log(errors);\r\n        // TO DO\r\n    }\r\n\r\n    const [createArtefact, { data }] = useMutation(\r\n        CREATE_ARTEFACT_MUTATION, {\r\n            onCompleted: _completed,\r\n            onError: _handleError,\r\n        }\r\n    );\r\n\r\n    const _saveArtefactStates = async statesData => {\r\n        var temp = {}\r\n        var desc\r\n        var state\r\n        for (var i in statesData.__type.enumValues){\r\n            state = statesData.__type.enumValues[i]\r\n            desc = state.description\r\n            temp[desc] = state.name\r\n        }\r\n        setArtefactStates(temp)\r\n    }\r\n\r\n    const {loading, error, data: statesData} = useQuery(\r\n        GET_ARTEFACT_STATES_QUERY, {\r\n            variables: {\"name\": \"ArtefactState\"},\r\n            onCompleted: _saveArtefactStates\r\n        }\r\n    )\r\n\r\n    const submitForm = async (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Artefact name: \" + artefactName)\r\n        console.log(\"About: \" + about)\r\n        createArtefact({variables: {\r\n            name: artefactName,\r\n            description: about,\r\n            state: artefactCondition,\r\n            isPublic: isPublic\r\n        }})\r\n    }\r\n\r\n    const handleClose = (event) => {\r\n        event.preventDefault();\r\n        setOpen(false);\r\n    }\r\n\r\n    const validInputs = !artefactName || !artefactCondition;\r\n    \r\n    return (\r\n        <Layout>\r\n            <h1>Create an Artefact</h1>\r\n            <p>$$ Description of what you should enter about an artefact $$ </p>\r\n\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form className={classes.form} onSubmit={submitForm}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Create Artefact\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"artefact-name\"\r\n                                label=\"Artefact name\"\r\n                                autoFocus\r\n                                onChange={e => setArtefactName(e.target.value)}\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"state\"\r\n                                label=\"Please select the state of the artefact\"\r\n                                select\r\n                                className={classes.textField}\r\n                                value={artefactCondition}\r\n                                onChange={e => setArtefactCondition(e.target.value)}\r\n                                SelectProps={{\r\n                                    MenuProps: {\r\n                                        className: classes.menu,\r\n                                    },\r\n                                }}\r\n                                >\r\n                                {\r\n                                    Object.keys(artefactStates).map((value, index) => {\r\n                                        return <MenuItem value={artefactStates[value]} key={value}>{value}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"public\"\r\n                                label=\"Is this artefact for public viewing?\"\r\n                                select\r\n                                className={classes.textField}\r\n                                value={isPublic}\r\n                                onChange={e => setIsPublic(e.target.value)}\r\n                                SelectProps={{\r\n                                    MenuProps: {\r\n                                        className: classes.menu,\r\n                                    },\r\n                                }}\r\n                                >\r\n                                {\r\n                                    [true, false].map((value, index) => {\r\n                                        return <MenuItem value={value} key={value}>{value ? \"Public\" : \"Not Public\"}</MenuItem>\r\n                                    })\r\n                                }\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                multiline\r\n                                rows={6}\r\n                                fullWidth\r\n                                value={about}\r\n                                id=\"about\"\r\n                                label=\"Tell people about your artefact\"\r\n                                onChange={e => setAbout(e.target.value)}\r\n                                />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                disabled\r\n                                defaultValue={username}\r\n                                fullWidth\r\n                                id=\"artefact-admin\"\r\n                                label=\"Artefact Admin\"\r\n                                onChange={e => console.log(\"hello\")}\r\n                                />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <DropzoneArea onChange={file => setFiles(files.concat(file))}/>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Button\r\n                                name=\"create\"\r\n                                label=\"Create\"\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={validInputs}\r\n                                >\r\n                                Create\r\n                            </Button>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </form>\r\n\r\n                {data && (\r\n                    <Dialog open={false} onClose={handleClose}>\r\n                        <DialogTitle onClose={handleClose}>\r\n                            Here's your artefact\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <Typography align='center'>\r\n                                {artefactId}\r\n                            </Typography>\r\n\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                )}\r\n            </div>\r\n        </Layout>\r\n\r\n    );\r\n}\r\n","import React from 'react'\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nconst ARTEFACT_DETAIL = gql`\r\n    query DetailView($id: ID!) {\r\n        artefact(id: $id) {\r\n            id,\r\n            name,\r\n            description,\r\n            addedAt\r\n        }\r\n    }`\r\n\r\nexport default function DetailView(props) {\r\n    let { data, loading, errors } = useQuery(ARTEFACT_DETAIL, {\r\n        variables: { id: props.match.params.id }\r\n    })\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    } else if (errors) { return <p>ERROR!</p> }\r\n    return (\r\n        <div>\r\n            <h1>{data.artefact.name} - #{data.artefact.id}</h1>\r\n            <p>{data.artefact.addedAt}</p>\r\n            <p>{data.artefact.description}</p>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport authContext from '../authContext';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        width: '80%',\r\n        height: 450,\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)',\r\n    },\r\n}));\r\n\r\nconst tileData = [\r\n    {\r\n        img: \"https://assets.pernod-ricard.com/nz/media_images/test.jpg?hUV74FvXQrWUBk1P2.fBvzoBUmjZ1wct\",\r\n        title: 'Title1',\r\n        author: 'Author 1',\r\n    },\r\n]\r\n\r\nconst LIST_OF_FAMILIES = gql`\r\n        query {\r\n            me {\r\n                isMemberOf {\r\n                    id\r\n                    familyName\r\n                    joinCode\r\n                }\r\n            }\r\n        }`\r\n\r\n\r\n\r\nfunction UserHomeView(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const context = useContext(authContext);\r\n    const username = context.user.username;\r\n\r\n    let { data, loading } = useQuery(LIST_OF_FAMILIES)\r\n    console.log(\"The data is: \", data);\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n    const families = data.me.isMemberOf;\r\n    return (\r\n        <Layout>\r\n            <h1>Family: {families[0].familyName}</h1>\r\n            <h3>Join code: {families[0].joinCode}</h3>\r\n            <h4>Your username is: {username}</h4>\r\n            <h4>Your families:</h4>\r\n            {data.me.isMemberOf.map(family => (\r\n                <p key={family.id} id={family.id}>{family.familyName}</p>\r\n            ))}\r\n            <div className={classes.root}>\r\n                <GridList cellHeight={180} className={classes.gridList}>\r\n                    {tileData.map(tile => (\r\n                        <GridListTile key={tile.img}>\r\n                            <img src={tile.img} alt={tile.title} />\r\n                            <GridListTileBar\r\n                                title={tile.title}\r\n                                subtitle={<span>by: {tile.author}</span>}\r\n                                actionIcon={\r\n                                    <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\r\n                                        <InfoIcon />\r\n                                    </IconButton>\r\n                                }\r\n                            />\r\n                        </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default UserHomeView\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { PrivateRoute } from './components/PrivateRoute';\r\n\r\n// Views\r\nimport CreateView from './views/CreateView'\r\n\r\nimport Login from './views/LoginView'\r\nimport Signup from './views/SignupView'\r\nimport Logout from './components/Logout'\r\n// Family views\r\nimport CreateFamilyView from './views/CreateFamilyView'\r\n// Artefact Views\r\nimport CreateArtefactView from './views/CreateArtefactView'\r\nimport DetailView from './views/DetailView'\r\n\r\nimport UserHomeView from './views/UserHomeView';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        {/* This is a special protected route, since it sends to the landing page if not logged in, which \r\n                        has the same url as the userHomeView */}\r\n                        <PrivateRoute exact path=\"/\" loggedIn={UserHomeView} landingPage />\r\n                        {/* User auth routes */}\r\n                        <Route exact path=\"/login/\" component={Login} />\r\n                        <Route exact path=\"/signup/\" component={Signup} />\r\n                        <Route exact path=\"/logout/\" component={Logout} />\r\n\r\n                        {/* Artefact routes */}\r\n                        <PrivateRoute exact path=\"/artefacts/create/\" component={CreateArtefactView} />\r\n                        <PrivateRoute exact path=\"/artefacts/:id/\" component={DetailView} />\r\n\r\n                        {/* Family routes */}\r\n                        <PrivateRoute exact path=\"/family/create\" loggedIn={CreateFamilyView} />\r\n                        \r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport Auth from './components/Auth';\r\n\r\nimport App from './App';\r\nimport { AUTH_TOKEN, config } from './constants'\r\n\r\n// Depending on prod or dev, set the appropriate uri for the graphql queries\r\nconst httpLink = createHttpLink({\r\n    uri: config.uri,\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem(AUTH_TOKEN);\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `JWT ${token}` : \"\",\r\n    }\r\n  }\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n      <Auth>\r\n        <App />\r\n      </Auth>\r\n    </ApolloProvider>\r\n    , document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}