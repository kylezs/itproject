{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","components/Loading.js","views/LandingPage.js","components/PrivateRoute.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/CreateButton.js","views/artefactViews/components/Head.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/DeleteDialog.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","useStyles","makeStyles","theme","drawer","width","marginTop","spacing","require","Trianglify","height","png","drawerOpen","setDrawerOpen","classes","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Drawer","anchor","onClose","e","className","role","onClick","onKeyDown","List","name","path","icon","Home","Group","Apps","Create","Map","map","Icon","ListItem","button","key","component","RouterLink","to","style","borderRadius","ListItemIcon","ListItemText","primary","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","color","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","LoginLink","forwardRef","props","ref","innerRef","SignupLink","Button","underline","root","flexGrow","iconButton","marginRight","title","alignText","MenuAppBar","loggedIn","useTheme","dark","palette","type","setOpen","AppBar","position","elevation","Toolbar","edge","Menu","Typography","variant","noWrap","onToggleDarkTheme","Brightness7","Brightness4","LoggedInBar","username","NotLoggedInBar","lightPalette","indigo","secondary","main","teal","darkPalette","deepPurple","error","background","paper","default","lightTheme","createMuiTheme","darkTheme","localStorage","getItem","setItem","setTheme","ThemeProvider","CssBaseline","newTheme","children","textField","padding","backgroundColor","textAlign","margin","card","media","ArtefactCard","artefact","upload","description","admin","patternURI","setPatternURI","mediaURI","x_colors","light","y_colors","Card","CardMedia","image","CardContent","Grid","container","item","xs","gutterBottom","align","CardActions","size","fullWidth","popup","zIndex","minWidth","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","MapType","artefacts","openArtefactID","setOpenArtefactID","handleSetOpenArtefact","mapStyle","containerStyle","mapState","center","initPopupOpen","length","coordinates","src","alt","offset","bottom","geocodingService","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","console","log","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","DELETE_ARTEFACT_MUTATION","GetFamiliesWrapper","Child","child","childProps","rest","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","state","desc","statesLoading","variables","GetArtefactWrapper","params","fetchPolicy","artefactData","artefactLoading","marginLeft","alignItems","alignContent","justify","form","display","flexWrap","submit","justifyContent","formControl","fieldTitle","paperWrapper","editLinkButton","deleteButton","marginBottom","dropzone","minHeight","dropzoneText","fontSize","outerContainer","switch","Layout","CircularProgress","HomePageButton","linkTo","LandingPage","landingTheme","responsiveFontSizes","typing","setTyping","useEffect","href","rel","top","right","fontWeight","fontFamily","cursor","show","onTypingDone","Delay","ms","Backspace","count","delay","left","particles","number","value","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","WaitWraper","checkAuthenticated","this","setState","localToken","Component","contextType","PrivateRoute","LoggedIn","loggedOut","landingPage","Loading","render","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","history","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","Paper","onSubmit","TextField","required","label","autoFocus","onChange","target","helperText","FormHelperText","Link","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","disabled","Logout","CreateFamilyView","artefactFamilyFormUseStyles","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","_completed","familyCreate","family","createFamily","FormControl","multiline","rows","defaultValue","Dialog","DialogTitle","DialogContent","DialogActions","noErrors","states","setters","isAdmin","openDelete","create","edit","view","showEditButton","showDeleteButton","visibility","setMode","CreateButton","handleSetField","inputProps","readOnly","select","Object","keys","numFams","clearable","minDate","inputVariant","format","openTo","date","KeyboardButtonProps","FormControlLabel","control","Switch","checked","isPublic","belongsToFamiliesBools","values","filter","disablePadding","dense","Checkbox","tabIndex","initialFiles","files","acceptedFiles","filesLimit","dropzoneClass","dropzoneTextStyle","dropzoneParagraph","imageStyle","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","keyCode","document","getElementById","click","Popover","queryResults","undefined","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","action","close","deleteArtefact","maxWidth","aria-labelledby","DialogContentText","ArtefactView","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","deleteOpen","setDeleteOpen","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","pushHomeURL","handleCreationCompleted","artefactCreate","updateCompleted","deleteCompleted","handleCreationError","handleUpdateError","handleDeleteError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","input","saveChange","artefactInput","dataLoading","componentProps","addressProps","newLocationState","components","comp","Name","State","Admin","Date","Description","Privacy","Families","Images","componentsViewMode","regularView","Head","widthProps","FieldWrapper","Address","SuccessSnackbar","DeleteDialog","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","artefactAdministratorOf","edges","node","Error404View","overflow","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","selectedFamily","profileId","formJoinCode","setFormJoinCode","copied","setCopied","refetchQueries","joinFamilyMutation","home_data","selectFamily","profile","hasArtefacts","text","onCopy","newFamily","toFamily","SelectProps","autoWidth","overlay","success","green","MyDialogContent","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","helpOpen","setHelpOpen","promiseArr","all","handleChange","newCenter","coord","fam","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","VerifyToken","authToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.749400b8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\n// Component that allows for Authentication throughout the application\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        \n        // const token = localStorage.getItem(AUTH_TOKEN)\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            setAuthenticated(false)\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.error(error);\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Loading...\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        const username = data.data.verifyToken.payload.username\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        setAuthenticated(false);\n        setUser({});\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    Button,\n    makeStyles,\n    Drawer,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon\n} from '@material-ui/core'\n\nimport {\n    Home,\n    Group,\n    Create,\n    Map,\n    Apps,\n    AccountCircle\n} from '@material-ui/icons'\n\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 'auto',\n        // margin: theme.spacing(1),\n        marginTop: theme.spacing(5)\n    }\n}))\n\nconst Trianglify = require('trianglify')\nconst pattern = Trianglify({ width: 200, height: 200 })\nconst mediaURI = pattern.png()\n\nexport default ({ drawerOpen, setDrawerOpen }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Drawer\n                anchor='left'\n                open={drawerOpen}\n                onClose={e => setDrawerOpen(false)}\n            >\n                <div\n                    className={classes.drawer}\n                    role='presentation'\n                    onClick={e => setDrawerOpen(false)}\n                    onKeyDown={e => setDrawerOpen(false)}\n                >\n                    <List>\n                        {[\n                            { name: 'Home', path: '/', icon: Home },\n                            {\n                                name: 'Create Family',\n                                path: '/family/create/',\n                                icon: Group\n                            },\n                            {\n                                name: 'Manage Artefacts',\n                                path: '/artefacts/manage/',\n                                icon: Apps\n                            },\n                            {\n                                name: 'Create Artefact',\n                                path: '/artefacts/create/',\n                                icon: Create\n                            },\n                            { name: 'Artefact Map', path: '/map/', icon: Map }\n                        ].map(({ name, path, icon: Icon }) => (\n                            <ListItem\n                                button\n                                key={path}\n                                component={RouterLink}\n                                to={path}\n                                style={{ borderRadius: 10 }}\n                            >\n                                <ListItemIcon>\n                                    <Icon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={name}\n                                    // primaryTypographyProps={{variant: 'h6'}}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Toolbar,\n    AppBar,\n    Button,\n    makeStyles,\n    Grid,\n    Typography,\n    Link\n} from '@material-ui/core'\n// import MenuIcon from '@material-ui/icons/Menu'\n\nimport { Home, Menu, Brightness4, Brightness7 } from '@material-ui/icons'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    iconButton: {\n        marginRight: theme.spacing(1)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.iconButton}\n                        edge='start'\n                        color='inherit'\n                        aria-label='menu'\n                        onClick={e => setOpen(true)}\n                    >\n                        <Menu />\n                    </IconButton>\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='home'\n                        component={RouterLink}\n                        to='/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant='h6' className={classes.title} noWrap>\n                        Artefacts Register\n                    </Typography>\n\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='theme-toggle'\n                        onClick={props.onToggleDarkTheme}\n                    >\n                        {!dark ? <Brightness4 /> : <Brightness7 />}\n                    </IconButton>\n\n                    {loggedIn ? (\n                        <LoggedInBar\n                            username={username}\n                            drawerOpen={open}\n                            setDrawerOpen={setOpen}\n                        />\n                    ) : (\n                        <NotLoggedInBar />\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport {\n    teal,\n    deepPurple,\n    indigo\n} from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    // secondary: teal,\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        // light: deepPurple[100],\n        main: deepPurple['A100'],\n        // dark: deepPurple[500]\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nconst lightTheme = createMuiTheme({ palette: lightPalette, type: 'light' })\nconst darkTheme = createMuiTheme({ palette: darkPalette, type: 'dark' })\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header onToggleDarkTheme={toggleDarkTheme} />\n            {props.children}\n        </ThemeProvider>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { config } from '../constants'\n\nvar Trianglify = require('trianglify')\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        // maxWidth: 345,\n        borderRadius: 10\n        // height: '100%'\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 170\n    }\n}))\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ artefact }) {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const { upload, name, description, id, admin } = artefact\n    const [patternURI, setPatternURI] = useState('')\n\n    var mediaURI = config.mediaRoot + upload\n    if (upload === 'False' && !patternURI) {\n        // use primary colour of theme as a seed for the random colour generation\n        var pattern = Trianglify({\n            width: 500,\n            height: 500,\n            x_colors: [theme.palette.primary.dark, theme.palette.primary.light],\n            y_colors: 'random'\n        })\n        setPatternURI(pattern.png())\n    }\n\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardMedia\n                className={classes.media}\n                image={patternURI ? patternURI : mediaURI}\n                title={name}\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={9}>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Typography\n                            gutterBottom\n                            variant='overline'\n                            component='h2'\n                            noWrap\n                            align='right'\n                        >\n                            {admin.username}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Button\n                    size='small'\n                    fullWidth\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                {/* <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button> */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport './popup.css'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        zIndex: '50 !important',\n        minWidth: '300px'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const classes = useStyles()\n\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    const handleSetOpenArtefact = id => {\n        if (openArtefactID === id) {\n            setOpenArtefactID('')\n        } else {\n            setOpenArtefactID(id)\n        }\n    }\n\n    const onMapClick = () => {\n        handleSetOpenArtefact('')\n        if (props.onClick) {\n            props.onClick()\n        }\n    }\n\n    return (\n        <MapType\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={onMapClick}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, id, ...rest } = artefact\n                if (initPopupOpen) {\n                    artefact.initPopupOpen = false\n                    setOpenArtefactID(id)\n                }\n                if (!center || !center.length) {\n                    return null\n                }\n                return (\n                    <Fragment key={id}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => handleSetOpenArtefact(id)}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup && openArtefactID === id && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                                className={classes.popup}\n                            >\n                                <ArtefactCard artefact={artefact} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </MapType>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                        upload\n                        admin {\n                            username\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`\n\nexport const DELETE_ARTEFACT_MUTATION = gql`\n    mutation ArtefactDelete($id: ID!) {\n        artefactDelete(id: $id) {\n            ok\n        }\n    }\n`\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.error(error),\n        fetchPolicy: \"network-only\"\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'flex-start',\n        textAlign: 'left'\n    },\n    fieldTitle: {\n        textAlign: 'left',\n        marginLeft: theme.spacing(1)\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    editLinkButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1)\n    },\n    deleteButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.error.main\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper + '!important',\n        // minHeight: '160px',\n        minHeight: '85% !important',\n        borderRadius: 10,\n        alignItems: 'flex-start !important'\n    },\n    dropzoneText: {\n        fontSize: 'medium !important'\n        // margin: '0 !important'\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    },\n    switch: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    }\n}))\n","import React from 'react'\nimport { CircularProgress, Grid } from '@material-ui/core'\nimport { Layout } from './'\n\nexport default () => (\n    <Layout>\n        <Grid\n            container\n            alignItems='center'\n            justify='center'\n            style={{ height: '90vh' }}\n        >\n            <CircularProgress />\n        </Grid>\n    </Layout>\n)\n","import React, { useState, useEffect } from 'react'\nimport Particles from 'react-particles-js'\nimport { Button } from '@material-ui/core'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Typist from 'react-typist'\nimport { Link as RouterLink } from 'react-router-dom'\n\n/*\nThe page that users come to when they first encounter our app. It's a marketing page\n\n*/\nfunction HomePageButton(props) {\n    const { linkTo } = props\n    return (\n        <Button\n            style={{\n                color: '#f0f0f0',\n                padding: '12px',\n                margin: '4px',\n                marginTop: '8px'\n            }}\n            component={RouterLink}\n            to={linkTo}\n        >\n            {props.children}\n        </Button>\n    )\n}\n\nfunction LandingPage(props) {\n    // Help the landing page be mobile friendly\n    let landingTheme = createMuiTheme()\n    landingTheme = responsiveFontSizes(landingTheme)\n\n    // Allow for looping of the typing animation\n    const [typing, setTyping] = useState(true)\n    useEffect(() => {\n        setTyping(true)\n    }, [typing])\n\n    const typingDone = () => {\n        setTyping(false)\n    }\n\n    return (\n        <div>\n            <ThemeProvider theme={landingTheme}>\n                <link\n                    href='https://fonts.googleapis.com/css?family=Dosis&display=swap'\n                    rel='stylesheet'\n                ></link>\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: '20px',\n                        zIndex: 4\n                    }}\n                >\n                    <HomePageButton linkTo='/signup'>Sign up</HomePageButton>\n                    <HomePageButton linkTo='/login'>Login</HomePageButton>\n                </div>\n                <Typography\n                    theme={landingTheme}\n                    variant='h1'\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '10%',\n                        zIndex: 3,\n                        position: 'relative',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    Family Artefacts Register\n                </Typography>\n                <Typography\n                    variant='h2'\n                    theme={landingTheme}\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '1%',\n                        zIndex: 3,\n                        position: 'relative',\n                        top: '8rem',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    {typing ? (\n                        <Typist\n                            cursor={{ show: false }}\n                            onTypingDone={typingDone}\n                        >\n                            <Typist.Delay ms={400} />\n                            <span>Connecting you to your family</span>\n                            <span> and your familys history.</span>\n                            <Typist.Backspace count={10} delay={200} />\n                            <span>'s history.</span>\n                            <Typist.Backspace count={56} delay={5000} />\n                        </Typist>\n                    ) : (\n                        ''\n                    )}\n                </Typography>\n                <Particles\n                    style={{\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        background: 'rgb(103, 58, 183)',\n                        background:\n                            'linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)'\n                    }}\n                    params={{\n                        particles: {\n                            number: {\n                                value: 120,\n                                density: {\n                                    enable: true,\n                                    value_area: 800\n                                }\n                            },\n                            color: {\n                                value: '#ffffff'\n                            },\n                            shape: {\n                                type: 'circle',\n                                stroke: {\n                                    width: 0,\n                                    color: '#FFFFFF'\n                                },\n                                polygon: {\n                                    nb_sides: 5\n                                },\n                                image: {\n                                    src: 'img/github.svg',\n                                    width: 100,\n                                    height: 100\n                                }\n                            },\n                            opacity: {\n                                value: 0.44093831673801875,\n                                random: false,\n                                anim: {\n                                    enable: false,\n                                    speed: 1,\n                                    opacity_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            size: {\n                                value: 4.008530152163807,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 40,\n                                    size_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            line_linked: {\n                                enable: true,\n                                distance: 150,\n                                color: '#ffffff',\n                                opacity: 0.4,\n                                width: 1\n                            },\n                            move: {\n                                enable: true,\n                                speed: 6,\n                                direction: 'none',\n                                random: false,\n                                straight: false,\n                                out_mode: 'out',\n                                bounce: false,\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200\n                                }\n                            }\n                        },\n                        interactivity: {\n                            detect_on: 'canvas',\n                            events: {\n                                onhover: {\n                                    enable: true,\n                                    mode: 'grab'\n                                },\n                                onclick: {\n                                    enable: true,\n                                    mode: 'push'\n                                },\n                                resize: true\n                            },\n                            modes: {\n                                grab: {\n                                    distance: 400,\n                                    line_linked: {\n                                        opacity: 1\n                                    }\n                                },\n                                bubble: {\n                                    distance: 400,\n                                    size: 40,\n                                    duration: 2,\n                                    opacity: 8,\n                                    speed: 3\n                                },\n                                repulse: {\n                                    distance: 200,\n                                    duration: 0.4\n                                },\n                                push: {\n                                    particles_nb: 4\n                                },\n                                remove: {\n                                    particles_nb: 2\n                                }\n                            }\n                        },\n                        retina_detect: true\n                    }}\n                ></Particles>\n            </ThemeProvider>\n        </div>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout, formUseStyles } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = formUseStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='secondary'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Login {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Layout, formUseStyles } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = formUseStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='secondary'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Signup {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Grid,\n    Paper,\n    FormControl\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    // back to const once done\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    // Call the mutation on form submission\n    const submitForm = async event => {\n        event.preventDefault()\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n        props.history.push(`/`)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid container spacing={1} className={classes.outerContainer}>\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4'>Create Family</Typography>\n\n                    <Typography variant='subtitle1'>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e =>\n                                    console.error(\n                                        'The admin value was changed, how is this even possible?'\n                                    )\n                                }\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </DialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            You can now add artefacts to this family. To view\n                            them simply select '{familyName}' from the Select\n                            Family dropdown on your home dashboard.\n                            <br />\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br />\n                            <br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color='primary' autoFocus>\n                            Continue\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            )}\n        </form>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={11} md={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { Fragment } from 'react'\n\nimport { Button, FormHelperText } from '@material-ui/core'\n\nexport default ({ noErrors, ...rest }) => (\n    <Fragment>\n        <Button\n            {...rest}\n            color='secondary'\n            variant='contained'\n            type='submit'\n        >\n            Save\n        </Button>\n        {!noErrors && (\n            <FormHelperText error={!noErrors}>\n                Unknown Error Occurred\n            </FormHelperText>\n        )}\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\nimport { Grid, Typography, Button } from '@material-ui/core'\nimport CreateButton from './CreateButton'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    isAdmin,\n    openDelete,\n    noErrors\n}) => {\n    const { create, edit, view } = states.mode\n    const showEditButton = view && isAdmin\n    const showDeleteButton = edit && isAdmin\n\n    return (\n        <Fragment>\n            {(showEditButton || showDeleteButton || create) && (\n                <div\n                    className={classes.editLinkButton}\n                    style={{\n                        marginRight: 'auto',\n                        // width: '65px',\n                        height: '20px',\n                        visibility: 'hidden'\n                    }}\n                />\n            )}\n            <Typography variant='h4' align='center'>\n                {create && 'Create'} {edit && 'Edit'} {view && 'View'} Artefact\n            </Typography>\n            {showEditButton && (\n                <Button\n                    color='secondary'\n                    variant='contained'\n                    onClick={e => setters.setMode({ edit: true })}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                >\n                    Edit\n                </Button>\n            )}\n            {showDeleteButton && (\n                <Button\n                    color='default'\n                    variant='contained'\n                    onClick={openDelete}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                >\n                    Delete\n                </Button>\n            )}\n\n            {create && (\n                <CreateButton\n                    noErrors={noErrors}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                />\n            )}\n            {create && (\n                <Grid item xs={12}>\n                    <Typography variant='subtitle1' align='center'>\n                        Artefacts are belongings of the family, enter as much or\n                        as little detail as you like\n                    </Typography>\n                </Grid>\n            )}\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            // style={{ height: '100%' }}\n            // InputProps={{ style: {height: '100%'} }}\n            id='artefact-name'\n            label='Artefact name'\n            variant='outlined'\n            autoFocus={!view}\n            required\n            fullWidth\n            value={state.name || ''}\n            inputProps={{ readOnly: view }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField, MenuItem } from '@material-ui/core'\n\nexport default ({ states, setters, artefactStates, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='state'\n            label='Artefact State'\n            variant='outlined'\n            required\n            fullWidth\n            value={state.state || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            select\n            disabled={disabled}\n        >\n            {Object.keys(artefactStates).map(value => {\n                return (\n                    <MenuItem value={artefactStates[value]} key={value}>\n                        {value}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, numFams }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    return (\n        <TextField\n            id='description'\n            label='Description'\n            variant='outlined'\n            required\n            fullWidth\n            multiline\n            value={state.description || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, username }) => {\n    var { view } = states.mode\n    var { state } = states\n    return (\n        <TextField\n            id='artefact-admin'\n            label='Artefact Admin'\n            variant='outlined'\n            required\n            fullWidth\n            value={\n                state.admin && Object.keys(state.admin).length !== 0\n                    ? state.admin.username\n                    : username\n            }\n            inputProps={{\n                readOnly: true\n            }}\n            onChange={e => console.log('admin field was changed')}\n        />\n    )\n}\n","import React from 'react'\n\nimport 'date-fns'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <KeyboardDatePicker\n            disabled={view || disabled}\n            clearable\n            minDate={'1500-01-01'}\n            // variant='inline'\n            inputVariant='outlined'\n            format='dd/MM/yyyy'\n            openTo='year'\n            label='Date'\n            value={state.date}\n            onChange={date => handleSetField(name, date)}\n            KeyboardButtonProps={{\n                'aria-label': 'change date'\n            }}\n        />\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    Switch,\n    FormHelperText,\n    Typography,\n    FormControlLabel\n} from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, classes }) => {\n    var { create, edit } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (create || edit) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    Privacy\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.isPublic || false}\n                            onChange={e =>\n                                handleSetField(name, e.target.checked)\n                            }\n                            // edge='end'\n                            disabled={disabled}\n                        />\n                    }\n                    style={{ marginLeft: 3 }}\n                    label='Public'\n                />\n                <FormHelperText className={classes.fieldTitle}>\n                    {state.isPublic\n                        ? 'Viewable by anyone'\n                        : 'Viewable by family members only'}\n                </FormHelperText>\n            </Fragment>\n        )\n    } else {\n        return null\n    }\n}\n","import React, { Fragment } from 'react'\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Typography\n} from '@material-ui/core'\n\nexport default ({ states, setters, families, disabled, name, classes }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (\n        view &&\n        state.belongsToFamiliesBools &&\n        Object.values(state.belongsToFamiliesBools).filter(value => value)\n            .length === 0\n    ) {\n        return (\n            <Typography variant='h6' className={classes.fieldTitle}>\n                This artefact doesn't belong to any of your families\n            </Typography>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                {!view\n                    ? 'Families the artefact belongs to'\n                    : 'Belongs to your families'}\n            </Typography>\n            <List disablePadding>\n                {families.map(family => {\n                    if (\n                        state.belongsToFamiliesBools &&\n                        (!view || state.belongsToFamiliesBools[family.id])\n                    ) {\n                        return (\n                            <ListItem key={family.id} dense disabled={disabled}>\n                                {!view && (\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge='start'\n                                            checked={\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] || false\n                                            }\n                                            onClick={e =>\n                                                handleSetField(name, {\n                                                    ...state.belongsToFamiliesBools,\n                                                    [family.id]:\n                                                        e.target.checked\n                                                })\n                                            }\n                                            tabIndex={-1}\n                                        />\n                                    </ListItemIcon>\n                                )}\n                                <ListItemText primary={family.familyName} />\n                            </ListItem>\n                        )\n                    }\n                    return null\n                })}\n            </List>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport Image from 'material-ui-image'\nimport { useTheme } from '@material-ui/styles'\n\nimport { config } from '../../../constants'\n\nexport default ({ classes, states, setters, name }) => {\n    const theme = useTheme()\n    var { edit, create, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                Images\n            </Typography>\n            {edit && (\n                <Typography variant='caption' className={classes.fieldTitle}>\n                    Editing coming soon...\n                </Typography>\n            )}\n\n            {create && (\n                <DropzoneArea\n                    initialFiles={state.files || []}\n                    acceptedFiles={['image/*']}\n                    dropzoneText=''\n                    filesLimit={1}\n                    onChange={files => handleSetField(name, files)}\n                    dropzoneClass={classes.dropzone}\n                    classes={{\n                        dropzoneTextStyle: classes.fieldTitle,\n                        dropzoneParagraph: classes.fieldTitle\n                    }}\n                />\n            )}\n            {(view || edit) && state.upload !== 'False' && (\n                <Image\n                    src={config.mediaRoot + state.upload}\n                    loading={<CircularProgress />}\n                    color={theme.palette.background.paper}\n                    imageStyle={{ borderRadius: 10 }}\n                />\n            )}\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    TextField,\n    Grid,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Map } from '../../../components'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    name,\n    handleGeocodeQuery,\n    disabled\n}) => {\n    var { view } = states.mode\n    var {\n        handleSetField,\n        setAddressIsSearchResult,\n        setLocationState,\n        handleSetLocationResult\n    } = setters\n    var { locationState, state } = states\n\n    const theme = useTheme()\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    return (\n        <Fragment>\n            <TextField\n                id='address'\n                label='Address'\n                variant='outlined'\n                fullWidth\n                disabled={disabled}\n                value={state.address || ''}\n                inputProps={{\n                    readOnly: view\n                }}\n                onChange={e => {\n                    handleSetField(name, e.target.value)\n                    if (e.target.value) {\n                        setAddressIsSearchResult(false)\n                    } else {\n                        // allow blank address\n                        setAddressIsSearchResult(true)\n                    }\n                }}\n                error={!!locationState.error}\n                InputProps={{\n                    endAdornment: !view && (\n                        <IconButton\n                            className={classes.iconButton}\n                            aria-label='search'\n                            id='search'\n                            onClick={e =>\n                                handleGeocodeQuery({\n                                    query: state.address,\n                                    initial: false\n                                })\n                            }\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    ),\n                    style: { marginBottom: 3 }\n                }}\n                onKeyDown={e => {\n                    if (e.keyCode === 13 && !view) {\n                        e.preventDefault()\n                        document.getElementById('search').click()\n                    }\n                }}\n                helperText={locationState.error}\n            />\n            <Popover\n                id={locationState.queryResults.length ? 'results' : undefined}\n                open={!!locationState.queryResults.length}\n                anchorEl={document.getElementById('address')}\n                onClose={e =>\n                    setLocationState({\n                        ...locationState,\n                        queryResults: []\n                    })\n                }\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <List component='div' disablePadding>\n                    {locationState.queryResults.map(result => (\n                        <ListItem\n                            key={result.placeName}\n                            button\n                            className={classes.nested}\n                            onClick={e => handleSetLocationResult(result)}\n                        >\n                            <ListItemText primary={result.placeName} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Popover>\n\n            <Grid container style={{ marginTop: 1 }}>\n                <Map\n                    interactive={false}\n                    className={classes.map}\n                    mapState={locationState.mapState}\n                    mapStyle={mapStyle}\n                    containerStyle={{\n                        height: '60vh',\n                        width: '100vw',\n                        borderRadius: 20,\n                        marginTop: 5\n                    }}\n                    artefacts={[\n                        {\n                            center: locationState.mapState.center,\n                            id: -1\n                        }\n                    ]}\n                />\n            </Grid>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\n\nexport default ({ save, cancel, updateErrors, classes }) => {\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            justify='space-evenly'\n            alignItems='center'\n            spacing={1}\n            style={{ marginTop: 1 }}\n        >\n            <Grid item xs={6}>\n                <MyButton onClick={save} name='Save' color='primary' />\n            </Grid>\n            <Grid item xs={6}>\n                <MyButton\n                    onClick={cancel}\n                    name='Cancel'\n                    color='secondary'\n                />\n            </Grid>\n\n            {updateErrors && (\n                <Grid item xs={12}>\n                    <FormHelperText error>\n                        Error Updating Artefact\n                    </FormHelperText>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid, FormControl, Paper } from '@material-ui/core'\nimport EditButtons from './EditButtons'\n\nexport default ({\n    child: Child,\n    childProps,\n    name,\n    classes,\n    editButtonProps,\n    ...rest\n}) => {\n    var { beingEdited, states } = childProps\n    var { edit } = states.mode\n    var thisBeingEdited = beingEdited === name\n    var someBeingEdited = edit && !!beingEdited\n    return (\n        <Paper className={classes.paperWrapper} elevation={3}>\n            <FormControl className={classes.formControl} fullWidth>\n                <Child\n                    {...childProps}\n                    disabled={someBeingEdited && !thisBeingEdited}\n                    name={name}\n                    classes={classes}\n                    {...rest}\n                />\n\n                {thisBeingEdited && <EditButtons {...editButtonProps} />}\n            </FormControl>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport {\n    Button,\n    Snackbar,\n    IconButton,\n    ClickAwayListener\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id='message-id'>Edit successful</span>}\n                action={[\n                    <Button\n                        key='view'\n                        color='secondary'\n                        size='small'\n                        onClick={e => viewArtefact(id)}\n                    >\n                        VIEW\n                    </Button>,\n                    <IconButton\n                        key='close'\n                        aria-label='close'\n                        color='inherit'\n                        onClick={() => setOpen(false)}\n                        className={classes.close}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </ClickAwayListener>\n    )\n}\n","import React from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button\n} from '@material-ui/core'\n\nexport default ({ open, setOpen, deleteArtefact, artefact }) => {\n    return (\n        <Dialog\n            fullWidth\n            maxWidth='sm'\n            open={open}\n            onClose={() => setOpen(false)}\n            aria-labelledby='help-title'\n        >\n            <DialogTitle>Delete Artefact</DialogTitle>\n            <DialogContent>\n                <DialogContentText>This cannot be undone</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color='secondary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() =>\n                        deleteArtefact({ variables: { id: artefact.id } })\n                    }\n                    color='primary'\n                >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useContext, useState, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { CssBaseline, Grid, CircularProgress } from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { geocodeQuery, artefactFamilyFormUseStyles } from '../../components'\n\nimport {\n    Head,\n    Name,\n    State,\n    Description,\n    Admin,\n    Date,\n    Privacy,\n    Families,\n    Images,\n    FieldWrapper,\n    Address,\n    SuccessSnackbar,\n    DeleteDialog,\n    CreateButton\n} from './components'\nimport authContext from '../../authContext'\n\nimport { Layout } from '../../components'\n\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION,\n    DELETE_ARTEFACT_MUTATION\n} from '../../gqlQueriesMutations'\n\nimport { AUTH_TOKEN, config } from '../../constants'\nimport axios from 'axios'\n\nfunction ArtefactView(props) {\n    // get the mode\n    // var { create, edit, view } = props\n    // var mode = { create: create, edit: edit, view: view }\n    const [mode, setMode] = useState({\n        create: props.create,\n        edit: props.edit,\n        view: props.view\n    })\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    var { artefactStates, families } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors\n\n    if (!mode.create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && mode.edit) {\n        setMode({ view: true })\n    }\n\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [deleteOpen, setDeleteOpen] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (mode.edit || mode.view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families\n    ) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n        console.log(artefact)\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (mode.create && families && !state.belongsToFamiliesBools) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null, state: 'OKY' })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (mode.edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n        setMode({ view: true })\n    }\n\n    // send user to home\n    const pushHomeURL = () => {\n        const { history } = props\n        if (history) {\n            history.push(`/`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        console.log(\"here's the data\")\n        console.log(data)\n        var id = data.data.artefactCreate.artefact.id\n        pushViewArtefactURL(id)\n    }\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const deleteCompleted = async data => {\n        pushHomeURL()\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n    const handleDeleteError = async errors => {\n        console.error('Deletion errors occured: ', errors)\n    }\n\n    const createArtefact = async (\n        variables,\n        successCallback,\n        errorCallback\n    ) => {\n        console.log(\"here's input from call\")\n        console.log(variables)\n        // const input = \"hello\"\n        let form_data = new FormData()\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0])\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\n        form_data.append('variables', JSON.stringify(variables))\n        let url = config.uri\n        axios\n            .post(url, form_data, {\n                headers: {\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Transfer-Encoding': 'multipart/form-data'\n                }\n            })\n            .then(res => {\n                successCallback(res.data)\n            })\n            .catch(err => {\n                // console.error(err);\n                errorCallback(err)\n            })\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const [deleteArtefact, { error: deleteErrors }] = useMutation(\n        DELETE_ARTEFACT_MUTATION,\n        {\n            onCompleted: deleteCompleted,\n            onError: handleDeleteError\n        }\n    )\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n        createArtefact(input, handleCreationCompleted, handleCreationError)\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (mode.edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        mode.create ? submitForm(e) : saveChange(e)\n    }\n\n    if ((mode.edit || mode.view) && dataLoading) {\n        return <CircularProgress />\n    }\n\n    const editButtonProps = {\n        save: saveChange,\n        cancel: cancelEditing,\n        updateErrors: updateErrors,\n        classes: classes\n    }\n\n    const componentProps = {\n        classes: classes,\n        beingEdited: beingEdited,\n        artefactStates: artefactStates,\n        username: context.user.username,\n        families: families,\n        states: {\n            state: state,\n            locationState: locationState,\n            mode: mode\n        },\n        setters: {\n            handleSetField: handleSetField,\n            setMode\n        }\n    }\n\n    const addressProps = {\n        ...componentProps,\n        handleGeocodeQuery: handleGeocodeQuery,\n        setters: {\n            ...componentProps.setters,\n            setLocationState: setLocationState,\n            setAddressIsSearchResult: setAddressIsSearchResult,\n            handleSetLocationResult: handleSetLocationResult\n        }\n    }\n\n    const components = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: mode.view ? null : Privacy, name: 'isPublic' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        {\n            comp: mode.view && state.upload === 'False' ? null : Images,\n            name: 'files'\n        }\n    ]\n\n    const componentsViewMode = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: Families, name: 'belongsToFamiliesBools' }\n    ]\n    const regularView = !mode.view || state.upload === 'False'\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <Grid container className={classes.outerContainer} spacing={1}>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={1}\n                >\n                    <Head\n                        isAdmin={isAdmin}\n                        openDelete={() => setDeleteOpen(true)}\n                        noErrors={noErrors}\n                        {...componentProps}\n                    />\n                </Grid>\n\n                {regularView &&\n                    components.map(({ comp, name, widthProps }) => {\n                        if (comp === null) return null\n                        if (!widthProps) widthProps = { xs: 6, sm: 6 }\n                        return (\n                            <Grid\n                                container\n                                item\n                                {...widthProps}\n                                key={name}\n                                // alignItems='flex-start'\n                                alignContent='stretch'\n                            >\n                                <FieldWrapper\n                                    key={comp}\n                                    child={comp}\n                                    name={name}\n                                    childProps={componentProps}\n                                    editButtonProps={editButtonProps}\n                                    classes={classes}\n                                />\n                            </Grid>\n                        )\n                    })}\n\n                {!regularView && (\n                    <Fragment>\n                        <Grid\n                            container\n                            item\n                            xs={12}\n                            sm={6}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                        >\n                            <FieldWrapper\n                                child={Images}\n                                name={'files'}\n                                childProps={componentProps}\n                                editButtonProps={editButtonProps}\n                                classes={classes}\n                            />\n                        </Grid>\n\n                        <Grid\n                            container\n                            item\n                            xs={12}\n                            sm={6}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                            spacing={1}\n                        >\n                            {componentsViewMode.map(\n                                ({ comp, name, widthProps }) => {\n                                    if (comp === null) return null\n                                    if (!widthProps)\n                                        widthProps = { xs: 12 }\n                                    return (\n                                        <Grid\n                                            container\n                                            item\n                                            {...widthProps}\n                                            key={name}\n                                            // alignItems='flex-start'\n                                            alignContent='stretch'\n                                            padding={1}\n                                        >\n                                            <FieldWrapper\n                                                key={comp}\n                                                child={comp}\n                                                name={name}\n                                                childProps={componentProps}\n                                                editButtonProps={\n                                                    editButtonProps\n                                                }\n                                                classes={classes}\n                                            />\n                                        </Grid>\n                                    )\n                                }\n                            )}\n                        </Grid>\n                    </Fragment>\n                )}\n\n                {(!mode.view || state.address) && (\n                    <Grid item xs={12}>\n                        <FieldWrapper\n                            child={Address}\n                            name='address'\n                            childProps={addressProps}\n                            editButtonProps={editButtonProps}\n                            classes={classes}\n                        />\n                    </Grid>\n                )}\n\n                {mode.create && (\n                    <Grid item xs={12} md={12}>\n                        <CreateButton noErrors={noErrors} fullWidth />\n                    </Grid>\n                )}\n\n                <SuccessSnackbar\n                    open={snackbarOpen}\n                    setOpen={setSnackbarOpen}\n                    viewArtefact={pushViewArtefactURL}\n                    classes={classes}\n                    id={artefact ? artefact.id : '-1'}\n                />\n\n                <DeleteDialog\n                    open={deleteOpen}\n                    setOpen={setDeleteOpen}\n                    deleteArtefact={deleteArtefact}\n                    artefact={artefact}\n                />\n            </Grid>\n        </form>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <Layout>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid\n                    container\n                    spacing={0}\n                    alignItems='flex-start'\n                    justify='center'\n                    style={{ minHeight: '80vh' }}\n                >\n                    <Grid item xs={11} md={9}>\n                        <CssBaseline />\n                        <ArtefactView {...props} />\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Layout>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid, Typography } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading } from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(3),\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery {\n        me {\n            artefactAdministratorOf {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                        admin {\n                            username\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n    const classes = useStyles()\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        onCompleted: data =>\n            SetArtefactEdges(data.me.artefactAdministratorOf.edges),\n        onError: errors => console.log(errors),\n        fetchPolicy: 'network-only'\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <Loading />\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid\n                container\n                spacing={2}\n                justify='center'\n                className={classes.container}\n            >\n                <Grid item xs={12}>\n                    <Typography variant='h4' align='center'>\n                        Manage Artefacts\n                    </Typography>\n                    <Typography variant='subtitle1' align='center'>\n                        Here you can view all the artefacts you are an admin of\n                    </Typography>\n                </Grid>\n                {artefactEdges.map(edge => (\n                    <Grid item xs={12} sm={6} md={4} lg={3} key={edge.node.id}>\n                        <ArtefactCard artefact={edge.node} />\n                    </Grid>\n                ))}\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt='You are lost - Obi Wan'/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography,\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Link,\n    MenuItem,\n    Snackbar,\n    CssBaseline\n} from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useMutation, useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading } from '../components'\nimport { Redirect } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    },\n    outerContainer: {\n        padding: theme.spacing(2)\n    },\n    card: {\n        alignContent: 'stretch'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    button: {\n        // marginTop: theme.spacing(1)\n        // height: '100%'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n    query {\n        me {\n            isMemberOf {\n                id\n                familyName\n                joinCode\n                hasArtefacts {\n                    edges {\n                        node {\n                            id\n                            name\n                            admin {\n                                username\n                            }\n                        }\n                    }\n                }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                    about\n                    hasArtefacts {\n                        edges {\n                            node {\n                                id\n                                name\n                                description\n                                upload\n                                admin {\n                                    username\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst JOIN_FAMILY_MUTATION = gql`\n    mutation JoinFamily($joinCode: String!) {\n        familyJoin(joinCode: $joinCode) {\n            family {\n                familyName\n                familyAdmin {\n                    username\n                }\n            }\n        }\n    }\n`\n\nconst SELECT_FAMILY_MUTATION = gql`\n    mutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n        updateProfile(input: { id: $profileId, selectedFamily: $toFamily }) {\n            id\n            selectedFamily\n        }\n    }\n`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const [formJoinCode, setFormJoinCode] = useState('')\n    const [copied, setCopied] = useState(false)\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(\n        JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n        }\n    )\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error('Enter a valid joinCode')\n            return\n        }\n\n        joinFamilyMutation({ variables: { joinCode: formJoinCode } })\n    }\n\n    let { data: home_data, loading } = useQuery(\n        HOMEPAGE_INFO,\n        {\n            fetchPolicy: 'network-only'\n        }\n    )\n\n    const [selectFamily, { data: mutation_data }] = useMutation(\n        SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n        }\n    )\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value\n        console.log(\"Here's the new family\")\n        selectFamily({\n            variables: { profileId: profileId, toFamily: newFamily }\n        })\n    }\n\n    if (loading) {\n        return <Loading />\n    }\n\n    let selectedFamily;\n    let families;\n    let profileId;\n    \n    if (home_data) {\n        selectedFamily = home_data.me.profile.selectedFamily\n        families = home_data.me.isMemberOf\n        profileId = home_data.me.profile.id\n    } else {\n        // Go to logout to remove token which is normally the cause of this error\n        console.error('User data was not defined, but fetched, logging out')\n        return <Redirect to='/logout' />\n    }\n\n    let artefacts = []\n\n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges\n    }\n\n\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container justify='center'>\n                <Grid\n                    item\n                    xs={12}\n                    lg={10}\n                    container\n                    spacing={2}\n                    justify='space-between'\n                    className={classes.outerContainer}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={7}\n                        container\n                        justify='center'\n                        alignItems='stretch'\n                        spacing={1}\n                        className={classes.paper}\n                    >\n                        {selectedFamily && (\n                            <Fragment>\n                                <Grid item xs={12}>\n                                    <Typography variant='h1'>\n                                        {selectedFamily.familyName}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography variant='subtitle1'>\n                                        {selectedFamily.about}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <CopyToClipboard\n                                        text={selectedFamily.joinCode}\n                                        onCopy={() => setCopied(true)}\n                                    >\n                                        <Button variant='outlined'>\n                                            Copy family join code\n                                        </Button>\n                                    </CopyToClipboard>\n                                </Grid>\n                            </Fragment>\n                        )}\n\n                        {!selectedFamily && (\n                            <Typography variant='h2'>\n                                Join and/or Select a Family\n                            </Typography>\n                        )}\n                    </Grid>\n                    <Grid\n                        item\n                        xs={8}\n                        sm={5}\n                        md={3}\n                        container\n                        spacing={1}\n                        justify='center'\n                        alignContent='flex-start'\n                    >\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label='Select Family'\n                                variant='outlined'\n                                value={\n                                    selectedFamily ? selectedFamily.id : null\n                                }\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'age',\n                                    autoWidth: true\n                                }}\n                                disabled={families.length <= 1}\n                            >\n                                {families &&\n                                    families.map((item, key) => (\n                                        <MenuItem key={item.id} value={item.id}>\n                                            {item.familyName}\n                                        </MenuItem>\n                                    ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                id='joinCodeField'\n                                variant='outlined'\n                                label='Enter join code'\n                                value={formJoinCode}\n                                className={classes.textField}\n                                onChange={e => setFormJoinCode(e.target.value)}\n                                InputProps={{\n                                    endAdornment: (\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleJoinFamily}\n                                            className={classes.button}\n                                            size='small'\n                                        >\n                                            Join\n                                        </Button>\n                                    ),\n                                    style: {}\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        justify='center'\n                        alignItems='stretch'\n                        spacing={1}\n                        item\n                        xs={12}\n                    >\n                        {artefacts.map((artefact, key) => (\n                            <Grid item xs={12} sm={6} md={4} key={key}>\n                                <ArtefactCard\n                                    artefact={artefact.node}\n                                    className={classes.card}\n                                />\n                            </Grid>\n                        ))}\n                        {artefacts.length === 0 && (\n                            <Paper\n                                className={classes.paper}\n                                style={{ marginTop: 15 }}\n                            >\n                                This family has no artefacts, click\n                                <Link\n                                    component={RouterLink}\n                                    to='/artefacts/create'\n                                    // className={classes.root}\n                                    color='secondary'\n                                >\n                                    {' here '}\n                                </Link>\n                                to create some. Make sure to asign them to this\n                                family\n                            </Paper>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={copied}\n                autoHideDuration={2000}\n                onClose={() => setCopied(false)}\n                message={<span id='message-id'>Code copied to clipboard</span>}\n            />\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React, { useState, Fragment } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, Layout } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to show more information\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const initMapState = { zoom: [2] }\n    const [mapState, setMapState] = useState(initMapState)\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const [helpOpen, setHelpOpen] = useState(false)\n    const getArtefactMapData = data => {\n        console.log('Query resulted')\n        if (!data) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        },\n        fetchPolicy: 'network-only'\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact') {\n            if (event.target.value !== null) {\n                var newCenter = event.target.value.center\n                if (newCenter === mapState.center) {\n                    newCenter = newCenter.map(coord => 0.99999999 * coord)\n                }\n                setMapState({\n                    center: newCenter\n                })\n                event.target.value.initPopupOpen = true\n            }\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                    // onClick={e => setState({ ...state, selectedArtefact: {} })}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value} key={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {mapArtefacts.length > 0 && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Jump to'\n                                variant='outlined'\n                                value={state.selectedArtefact || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem\n                                        value={artefact}\n                                        key={artefact.id}\n                                    >\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='menu'\n                    onClick={() => setHelpOpen(true)}\n                >\n                    <HelpIcon />\n                </IconButton>\n            </Grid>\n\n            <Dialog\n                fullWidth\n                maxWidth='sm'\n                open={helpOpen}\n                onClose={() => setHelpOpen(false)}\n                aria-labelledby='help-title'\n            >\n                <MyDialogContent />\n                <DialogActions>\n                    <Button onClick={() => setHelpOpen(false)} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <GetFamiliesWrapper {...props} child={MapView} />\n    </Layout>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\nimport DetailView from './views/artefactViews/DetailView'\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                        landingPage\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}