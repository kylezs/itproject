{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/Loading.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/ArtefactFamilyFormStyling.js","components/HelpDialog.js","views/LandingPage.js","components/PrivateRoute.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/CreateButton.js","views/artefactViews/components/Head.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/DeleteDialog.js","views/artefactViews/components/HelpContent.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","useStyles","makeStyles","theme","drawer","width","marginTop","spacing","ComingSoon","style","position","marginLeft","padding","fontSize","color","backgroundColor","borderRadius","zIndex","drawerOpen","setDrawerOpen","setHelpOpen","classes","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Drawer","anchor","onClose","e","className","role","onClick","onKeyDown","List","name","path","icon","Home","Group","Apps","Create","Map","map","Icon","ListItem","button","key","component","RouterLink","to","ListItemIcon","ListItemText","primary","IconButton","edge","aria-label","Help","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","disabled","LoginLink","forwardRef","props","ref","innerRef","SignupLink","Button","underline","root","flexGrow","iconButton","marginRight","title","alignText","MenuAppBar","loggedIn","useTheme","dark","palette","type","setOpen","AppBar","elevation","Toolbar","Menu","Typography","variant","noWrap","onToggleDarkTheme","Brightness7","Brightness4","LoggedInBar","username","NotLoggedInBar","typography","fontFamily","h1","fontWeight","h2","h3","h4","h5","h6","lightPalette","indigo","secondary","main","teal","darkPalette","deepPurple","error","background","paper","default","lightTheme","createMuiTheme","responsiveFontSizes","darkTheme","localStorage","getItem","setItem","setTheme","helpOpen","children","Children","child","cloneElement","ThemeProvider","CssBaseline","newTheme","Grid","container","alignItems","justify","height","CircularProgress","Trianglify","require","textField","textAlign","margin","card","media","ArtefactCard","artefact","upload","description","admin","patternURI","setPatternURI","mediaURI","x_colors","light","y_colors","png","Card","CardMedia","image","CardContent","item","xs","gutterBottom","align","CardActions","size","fullWidth","popup","minWidth","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","MapType","artefacts","openArtefactID","setOpenArtefactID","handleSetOpenArtefact","mapStyle","containerStyle","mapState","center","initPopupOpen","length","coordinates","src","alt","offset","bottom","geocodingService","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","console","log","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","DELETE_ARTEFACT_MUTATION","GetFamiliesWrapper","Child","childProps","rest","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","state","desc","statesLoading","variables","GetArtefactWrapper","params","fetchError","artefactData","artefactLoading","justifyContent","formControl","fieldTitle","paperWrapper","editLinkButton","deleteButton","form","marginBottom","display","flexWrap","dropzone","dropzoneText","outerContainer","alignContent","switch","MyDialogContent","content","Dialog","maxWidth","aria-labelledby","DialogActions","HomePageButton","linkTo","LandingPage","landingTheme","typing","setTyping","useEffect","href","rel","top","right","cursor","show","onTypingDone","Delay","ms","Backspace","count","delay","left","particles","number","value","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","WaitWraper","checkAuthenticated","this","setState","localToken","Component","contextType","UnwrappedPrivateRoute","LoggedIn","loggedOut","landingPage","Loading","render","PrivateRoute","Layout","submit","Login","history","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","Paper","onSubmit","TextField","required","label","autoFocus","onChange","target","helperText","FormHelperText","Link","CenterWrapping","minHeight","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","Logout","HelpContent","DialogTitle","DialogContent","DialogContentText","CreateFamilyView","artefactFamilyFormUseStyles","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","copied","setCopied","_completed","familyCreate","family","createFamily","FormControl","multiline","rows","defaultValue","HelpDialog","text","onCopy","Snackbar","autoHideDuration","noErrors","withGetScreen","states","setters","isAdmin","openDelete","isMobile","create","edit","view","showEditButton","showDeleteButton","showButton","marginLeftButton","visibility","setMode","CreateButton","handleSetField","inputProps","readOnly","select","Object","keys","numFams","clearable","minDate","inputVariant","format","openTo","date","KeyboardButtonProps","FormControlLabel","control","Switch","checked","isPublic","belongsToFamiliesBools","values","filter","disablePadding","dense","Checkbox","tabIndex","initialFiles","files","acceptedFiles","filesLimit","dropzoneClass","dropzoneTextStyle","dropzoneParagraph","imageStyle","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","keyCode","document","getElementById","click","Popover","queryResults","undefined","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","ContentProps","action","close","deleteArtefact","FetchArtefactError","ArtefactView","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","deleteOpen","setDeleteOpen","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","pushManageArtefactsURL","handleCreationCompleted","artefactCreate","updateCompleted","deleteCompleted","handleCreationError","handleUpdateError","handleDeleteError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","input","saveChange","artefactInput","componentProps","addressProps","newLocationState","showPrivacy","components","comp","Name","State","Admin","Date","Description","Privacy","Families","Images","componentsViewMode","regularView","Head","widthProps","FieldWrapper","Address","SuccessSnackbar","DeleteDialog","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","artefactAdministratorOf","edges","fetchPolicy","Container","node","Error404View","overflow","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","selectedFamily","profileId","formJoinCode","setFormJoinCode","joinError","setJoinError","refetchQueries","joinFamilyMutation","home_data","home_data_loading","selectFamily","profile","hasArtefacts","newFamily","toFamily","SelectProps","autoWidth","fam","includes","overlay","success","green","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","promiseArr","all","handleChange","newCenter","coord","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","defaultOptions","watchQuery","errorPolicy","ReactDOM","setAuthenticated","setUser","VerifyToken","authToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6VAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gHChBAC,EAAcC,wBAAc,CAC9BC,eAAe,EACfC,KAAM,GACNC,cAAe,aACfC,qBAAsB,aACtBC,OAAQ,eAGGN,IACFO,EAAeP,EAAYQ,SCX3BC,GDYeT,EAAYU,SCZd,cAEbC,EAAsB,gBACtBC,EAAoB,kCACpBC,EACF,+FAiBEC,EAZA,CACTC,IAAK,YACLC,UAAW,oD,6KCLf,IAAMC,EAAwBC,IAAH,K,4RCmBrBC,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,OAAQ,CACJC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,OAI3BC,GAAa,WACf,OACQ,0BAAMC,MAAO,CACTC,SAAU,WACVJ,UAAW,OACXK,WAAY,MACZC,QAAS,MACTC,SAAU,OACVC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,MACdC,OAAQ,IATZ,gBAgBG,eAAiD,IAA9CC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACnCC,EAAUpB,KAD2C,EAE3BqB,IAAMC,SAAS,MAFY,mBAEpDC,EAFoD,KAE1CC,EAF0C,KAGrDC,EAAUC,qBAAW7C,GACrB8C,EAAOnD,QAAQ+C,GAMrB,SAASK,IACLJ,EAAY,MAOhB,OACI,6BACI,kBAACK,EAAA,EAAD,CACIC,OAAO,OACPH,KAAMV,EACNc,QAAS,SAAAC,GAAC,OAAId,GAAc,KAE5B,yBACIe,UAAWb,EAAQjB,OACnB+B,KAAK,eACLC,QAAS,SAAAH,GAAC,OAAId,GAAc,IAC5BkB,UAAW,SAAAJ,GAAC,OAAId,GAAc,KAE9B,kBAACmB,EAAA,EAAD,KACK,CACG,CAAEC,KAAM,OAAQC,KAAM,IAAKC,KAAMC,KACjC,CACIH,KAAM,gBACNC,KAAM,kBACNC,KAAME,MAEV,CACIJ,KAAM,mBACNC,KAAM,qBACNC,KAAMG,MAEV,CACIL,KAAM,kBACNC,KAAM,qBACNC,KAAMI,MAEV,CAAEN,KAAM,eAAgBC,KAAM,QAASC,KAAMK,OAC/CC,IAAI,gBAAGR,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAYQ,EAArB,EAAeP,KAAf,OACF,kBAACQ,EAAA,EAAD,CACIC,QAAM,EACNC,IAAKX,EACLY,UAAWC,IACXC,GAAId,EACJ/B,MAAO,CAAEO,aAAc,KAEvB,kBAACuC,EAAA,EAAD,KACI,kBAACP,EAAD,OAEJ,kBAACQ,EAAA,EAAD,CACIC,QAASlB,UAQjC,kBAACmB,EAAA,EAAD,CACIC,KAAK,QACL7C,MAAM,UACN8C,aAAW,OACXxB,QAAS,kBAAMhB,GAAY,KAE3B,kBAACyC,GAAA,EAAD,OAGJ,kBAACH,EAAA,EAAD,CACIE,aAAW,0BACXE,gBAAc,cACdC,gBAAc,OACd3B,QA7EZ,SAAoB4B,GAChBvC,EAAYuC,EAAMC,gBA6EVnD,MAAM,WAEN,kBAACoD,GAAA,EAAD,OAEJ,kBAAC,KAAD,CACIC,GAAG,cACH3C,SAAUA,EACV4C,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhB1C,KAAMA,EACNI,QAASH,GAET,kBAAC4C,GAAA,EAAD,CAAUrC,QAASP,EAAa6C,UAAQ,GAAxC,UAEI,kBAAC,GAAD,OAEJ,kBAACD,GAAA,EAAD,CAAUrC,QAASP,EAAa6C,UAAQ,GAAxC,WAEI,kBAAC,GAAD,OAEJ,kBAACD,GAAA,EAAD,CAAUrC,QAjGtB,WACIV,EAAQtC,WAgGA,a,UC9JVuF,GAAYrD,IAAMsD,WAAW,SAACC,EAAOC,GAAR,OAC/B,kBAAC,IAAD,eAAYC,SAAUD,EAAKxB,GAAG,UAAauB,MAGzCG,GAAa1D,IAAMsD,WAAW,SAACC,EAAOC,GAAR,OAChC,kBAAC,IAAD,eAAYC,SAAUD,EAAKxB,GAAG,WAAcuB,MAIjC,YAAAA,GACX,OACI,6BACI,kBAACI,GAAA,EAAD,CAAQnE,MAAM,UAAUoE,UAAU,OAAO9B,UAAW4B,IAApD,WACA,kBAACC,GAAA,EAAD,CAAQnE,MAAM,UAAUoE,UAAU,OAAO9B,UAAWuB,IAApD,W,UCEN1E,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCgF,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAanF,EAAMI,QAAQ,IAE/BgF,MAAO,CACHH,SAAU,EACVI,UAAW,WAIJ,SAASC,GAAWZ,GAC/B,IAAMxD,EAAUpB,KAGZyF,EADY/D,qBAAW7C,GACJE,cAGjBmB,EAAQwF,eACRC,EAAOzF,GAAgC,SAAvBA,EAAM0F,QAAQC,KARE,EAUdvE,oBAAS,GAVK,mBAU/BK,EAV+B,KAUzBmE,EAVyB,KAWtC,OACI,yBAAK7D,UAAWb,EAAQ8D,MACpB,kBAACa,EAAA,EAAD,CAAQtF,SAAS,SAASI,MAAM,UAAUmF,UAAW,GACjD,kBAACC,EAAA,EAAD,KACI,kBAACxC,EAAA,EAAD,CACIxB,UAAWb,EAAQgE,WACnB1B,KAAK,QACL7C,MAAM,UACN8C,aAAW,OACXxB,QAAS,SAAAH,GAAC,OAAI8D,GAAQ,KAEtB,kBAACI,EAAA,EAAD,OAGJ,kBAACzC,EAAA,EAAD,CACIxB,UAAWb,EAAQgE,WACnBvE,MAAM,UACN8C,aAAW,OACXR,UAAWC,IACXC,GAAG,KAEH,kBAACZ,EAAA,EAAD,OAGJ,kBAAC0D,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,UAAWb,EAAQkE,MAAOe,QAAM,GAAzD,OAKA,kBAAC5C,EAAA,EAAD,CACIxB,UAAWb,EAAQgE,WACnBvE,MAAM,UACN8C,aAAW,eACXxB,QAASyC,EAAM0B,mBAEbX,EAAyB,kBAACY,EAAA,EAAD,MAAlB,kBAACC,EAAA,EAAD,OAGZf,EACG,kBAACgB,GAAD,CACIC,SA9CT,KA+CSzF,WAAYU,EACZT,cAAe4E,EACf3E,YAAayD,EAAMzD,cAGvB,kBAACwF,GAAD,S,+DC/ElBC,GAAa,CACfC,WAAY,4BACZC,GAAI,CACAD,WAAY,qBACZE,WAAY,KAEhBC,GAAI,CACAH,WAAY,qBACZE,WAAY,KAEhBE,GAAI,CACAJ,WAAY,sBAEhBK,GAAI,CACAL,WAAY,sBAEhBM,GAAI,CACAN,WAAY,sBAEhBO,GAAI,CACAP,WAAY,uBA0BdQ,GAAe,CACjB7D,QAAS8D,KACTC,UAAW,CACPC,KAAMC,KAAK,MAEf5B,KAAM,SAGJ6B,GAAc,CAChBlE,QAAS,CACLgE,KAAMG,KAAU,MAEpBJ,UAAWE,KACXG,MAAO,CACHJ,KAAM,WAEVK,WAAY,CACRC,MAAO,UACPC,QAAS,WAEblC,KAAM,QAGNmC,GAAaC,aAAe,CAC5BrC,QAASyB,GACTxB,KAAM,QACNe,WAAYA,KAEhBoB,GAAaE,aAAoBF,IAGjC,IAAIG,GAAYF,aAAe,CAC3BrC,QAAS8B,GACT7B,KAAM,OACNe,WAAYA,KAEhBuB,GAAYD,aAAoBC,IAIjB,gBAAAvD,GAENwD,aAAaC,QLjGI,eKkGlBD,aAAaE,QLlGK,aKkGe,SAHjB,MAMMhH,mBACe,UAArC8G,aAAaC,QLtGK,cKsG6BL,GAAaG,IAP5C,mBAMbjI,EANa,KAMNqI,EANM,OAiBYjH,oBAAS,GAjBrB,mBAiBbkH,EAjBa,KAiBHrH,EAjBG,KAkBdsH,EAAWpH,IAAMqH,SAAS5F,IAAI8B,EAAM6D,SAAU,SAAAE,GAChD,OAAOtH,IAAMuH,aAAaD,EAAO,CAC7BH,SAAUA,EACVrH,YAAaA,MAIrB,OACI,kBAAC0H,GAAA,EAAD,CAAe3I,MAAOA,GAClB,kBAAC4I,EAAA,EAAD,MACA,kBAAC,GAAD,CACIxC,kBAlBY,WACpB,IAAIyC,EAAkC,UAAvB7I,EAAM0F,QAAQC,KAAmB,OAAS,QACzDuC,aAAaE,QL5GK,aK4GeS,GACjCR,EAAsB,UAAbQ,EAAuBf,GAAaG,KAgBrChH,YAAaA,IAEhBsH,I,oBC3HE,qBACX,kBAACO,GAAA,EAAD,CACIC,WAAS,EACTC,WAAW,SACXC,QAAQ,SACR3I,MAAO,CAAE4I,OAAQ,SAEjB,kBAACC,GAAA,EAAD,Q,wCCEJC,GAAaC,EAAQ,KAEnBvJ,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCsJ,UAAW,CAGP7I,QAAST,EAAMI,QAAQ,GACvBQ,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1C2B,UAAW,SACXpJ,UAAWH,EAAMI,QAAQ,IAE7BwH,MAAO,CACHzH,UAAWH,EAAMI,QAAQ,GACzBK,QAAST,EAAMI,QAAQ,GACvBQ,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1C2B,UAAW,UAEfxG,OAAQ,CACJyG,OAAQxJ,EAAMI,QAAQ,IAE1BqJ,KAAM,CACF7I,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAE1C/G,aAAc,IAGlB6I,MAAO,CACH9I,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1CsB,OAAQ,QA4FDS,OApFf,YAAqC,IAAbC,EAAY,EAAZA,SACd1I,EAAUpB,KACVE,EAAQwF,eAENqE,EAAyCD,EAAzCC,OAAQzH,EAAiCwH,EAAjCxH,KAAM0H,EAA2BF,EAA3BE,YAAa9F,EAAc4F,EAAd5F,GAAI+F,EAAUH,EAAVG,MAJP,EAKI3I,mBAAS,IALb,mBAKzB4I,EALyB,KAKbC,EALa,KAO5BC,EAAWzK,EAAOE,UAAYkK,EAYlC,MAXe,UAAXA,GAAuBG,GAQvBC,EANcb,GAAW,CACrBlJ,MAAO,IACPgJ,OAAQ,IACRiB,SAAU,CAACnK,EAAM0F,QAAQpC,QAAQmC,KAAMzF,EAAM0F,QAAQ2B,UAAU+C,OAC/DC,SAAU,WAEQC,OAItB,kBAACC,GAAA,EAAD,CAAMxI,UAAWb,EAAQuI,KAAM3D,UAAW,GACtC,kBAAC0E,GAAA,EAAD,CACIzI,UAAWb,EAAQwI,MACnBe,MAAOT,GAA0BE,EACjC9E,MAAOhD,IAEX,kBAACsI,GAAA,EAAD,KACI,kBAAC5B,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAAC3E,EAAA,EAAD,CACI4E,cAAY,EACZ3E,QAAQ,KACRjD,UAAU,KACVkD,QAAM,GAEL/D,IAGT,kBAAC0G,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAAC3E,EAAA,EAAD,CACI4E,cAAY,EACZ3E,QAAQ,WACRjD,UAAU,KACVkD,QAAM,EACN2E,MAAM,SAELf,EAAMvD,WAGf,kBAACsC,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC3E,EAAA,EAAD,CACIC,QAAQ,QACRvF,MAAM,gBACNsC,UAAU,IACVkD,QAAM,GAEL2D,MAKjB,kBAACiB,GAAA,EAAD,KACI,kBAACjG,GAAA,EAAD,CACIkG,KAAK,QACLC,WAAS,EACTtK,MAAM,UACNsC,UAAWC,IACXC,GAAE,qBAAgBa,IALtB,W,ukBCzGhB,IAAMlE,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCkL,MAAO,CACHpK,OAAQ,gBACRqK,SAAU,YAIZC,GAAW,CACbC,YAAa7L,EACb8L,oBAAoB,EACpBC,QAAS,GACTC,QAAS,GAEPC,GAASC,aAAc,GAAD,GACrBN,GADqB,CAExBO,aAAa,KAGXC,GAAoBF,aAAc,GAAD,GAChCN,GADgC,CAEnCO,aAAa,KAGF,SAAShJ,GAAI+B,GACxB,IAAMxD,EAAUpB,KAEV+L,EAAUnH,EAAMiH,YAAcC,GAAoBH,GACpDK,EAAYpH,EAAMoH,UACjBA,IAAWA,EAAY,IALG,MAOa1K,mBAAS,IAPtB,mBAOxB2K,EAPwB,KAORC,EAPQ,KASzBC,EAAwB,SAAAjI,GAEtBgI,EADAD,IAAmB/H,EACD,GAEAA,IAW1B,OACI,kBAAC6H,EAAD,eACIvL,MACIoE,EAAMwH,SACAxH,EAAMwH,SACN,kDAEVC,eAAgBzH,EAAMyH,gBAClBzH,EAAM0H,SAPd,CAQInK,QAhBW,WACfgK,EAAsB,IAClBvH,EAAMzC,SACNyC,EAAMzC,aAeL6J,EAAUlJ,IAAI,SAAAgH,GAAa,IAClByC,EAAqCzC,EAArCyC,OAAQnB,EAA6BtB,EAA7BsB,MAAOoB,EAAsB1C,EAAtB0C,cAAetI,EAAO4F,EAAP5F,GAKpC,OAJIsI,IACA1C,EAAS0C,eAAgB,EACzBN,EAAkBhI,IAEjBqI,GAAWA,EAAOE,OAInB,kBAAC,WAAD,CAAUvJ,IAAKgB,GACX,kBAAC,KAAD,CACIwI,YAAaH,EACbpK,QAAS,SAAAH,GAAC,OAAImK,EAAsBjI,KAEpC,yBACIyI,IACI,mDAEJC,IAAI,gBAGXxB,GAASa,IAAmB/H,GACzB,kBAAC,KAAD,CACIwI,YAAaH,EACbM,OAAQ,CACJ,cAAe,CAAC,IAAK,IACrBC,OAAQ,CAAC,GAAI,IACb,eAAgB,EAAE,IAAK,KAE3B7K,UAAWb,EAAQgK,OAEnB,kBAAC,GAAD,CAActB,SAAUA,MAzB7B,QCtE3B,IACMiD,GADexD,EAAQ,IACJyD,CAAa,CAAEzB,YAAa7L,IAE/CuN,GAAkB,SAAAC,GACpB,IAAIC,EAAM,GAEJC,EAAWF,EAASG,KAAKD,SAC/B,IAAKA,EAED,OADAD,EAAIG,WAAY,EACTH,EAGX,IADA,IAAII,EAAU,GACLC,EAAI,EAAGA,EAAIJ,EAASX,OAAQe,IAAK,CACtC,IAAIC,EAAUL,EAASI,GACnBE,EAAS,GAGb,GAFAA,EAAOpB,SAAW,CAAEC,OAAQkB,EAAQlB,QAEN,UAA1BkB,EAAQE,WAAW,GAAgB,CACnC,IAAMC,EAAaH,EAAQI,KAC3B,GAAID,EAAY,CACZ,IAAMC,EAAO,CACT,CAACD,EAAW,GAAIA,EAAW,IAC3B,CAACA,EAAW,GAAIA,EAAW,KAE/BF,EAAOpB,SAASwB,UAAYD,OAEC,YAA1BJ,EAAQE,WAAW,KAC1BD,EAAOpB,SAASyB,KAAO,CAAC,KAE5BL,EAAOM,UAAYP,EAAQQ,WAC3BP,EAAOQ,aAAeT,EAAQE,WAAW,GACzCJ,EAAQY,KAAKT,GAGjB,OADAP,EAAII,QAAUA,EACPJ,GAGLiB,GAAe,SAAAxG,GACjB,IAAIuF,EAAM,GAGV,OAFAkB,QAAQC,IAAI,wBACZnB,EAAIvF,MAAQA,EACLuF,GAGI,SAASoB,GAAaC,EAAOC,GACxC,IAAKD,EACD,OAAO,IAAIE,QAAQ,SAASC,EAASC,GACjCD,MAIR,IAAIE,EAAO,CACPL,MAAOA,EACPM,MAAO,GAIX,OAFIL,IAAOI,EAAKJ,MAAQA,GAEH,kBAAVD,EACAzB,GACFgC,eAAeF,GACfG,OACAC,KACG,SAAA/B,GAAQ,OAAID,GAAgBC,IAC5B,SAAAtF,GAAK,OAAIwG,GAAaxG,KAEN,kBAAV4G,EACPzB,GACFmC,eAAeL,GACfG,OACAC,KACG,SAAA/B,GAAQ,OAAID,GAAgBC,IAC5B,SAAAtF,GAAK,OAAIwG,GAAaxG,UAN3B,EAWJ,SAASuH,GAAqBrF,GACjC,OAAOyE,GAAazE,EAASsF,SAASH,KAAK,SAAA/B,GACvC,MAAO,CAAEpD,SAAUA,EAAUoD,SAAUA,K,6wHC7EPnN,IAAH,MAA9B,IA4BMsP,GAA4B,0oBA4B5BC,GAA4BvP,IAAH,MAWzBwP,GAAqBxP,IAAH,MAmBlByP,IARkBzP,IAAH,MAQGA,IAAH,OAuBf0P,GAA2B1P,IAAH,MAaxB2P,GAAiB3P,IAAH,MAQd4P,GAAuB5P,IAAH,MAqBpB6P,GAAkB7P,IAAH,MAkBf8P,GAAyB9P,IAAH,MAWtB+P,GAA2B/P,IAAH,M,6NChLtB,SAASgQ,GAAT,GAIX,IAHOC,EAGR,EAHCrH,MACAsH,EAED,EAFCA,WACGC,EACJ,wCAEiC5O,mBAAS,IAF1C,mBAEQ6O,EAFR,KAEkBC,EAFlB,KASKC,E,uVAAc,IACXJ,EADW,CAEdE,SAAUA,EACVG,gBARgBC,YAAShB,GAAoB,CAC7CiB,YAAa,SAAAC,GAAI,OAAIL,EAAYK,EAAKC,GAAGC,aACzCC,QAAS,SAAAhJ,GAAK,OAAIyG,QAAQC,IAAI1G,MAF1BiJ,UAWR,OAAO,kBAACb,EAAD,iBAAWE,EAAUG,I,6NCrBjB,SAASS,GAAT,GAIX,IAHOd,EAGR,EAHCrH,MACAsH,EAED,EAFCA,WACGC,EACJ,wCAE6C5O,mBAAS,IAFtD,mBAEQyP,EAFR,KAEwBC,EAFxB,KAGOC,EAAmB,sCAAG,WAAMC,GAAN,qBAAAC,EAAA,qDAIxB,IAAS3D,KAHL4D,EAAO,GAGGF,EAAWG,OAAOC,WAC5BC,EAAQL,EAAWG,OAAOC,WAAW9D,GACrCgE,EAAOD,EAAMvH,YACboH,EAAKI,GAAQD,EAAMjP,KAEvB0O,EAAkBI,GATM,yCAAH,sDAmBrBf,E,uVAAc,IACXJ,EADW,CAEdc,eAAgBA,EAChBU,cAXgBlB,YAASjB,GAA2B,CACpDoC,UAAW,CACPpP,KAAM,iBAEVkO,YAAaS,EACbL,QAAS,SAAAhJ,GAAK,OAAIyG,QAAQC,IAAI1G,MAL1BiJ,UAcR,OAAO,kBAACb,EAAD,iBAAWE,EAAUG,I,6NCjCjB,SAASsB,GAAT,GAIX,IAHO3B,EAGR,EAHCrH,MACAsH,EAED,EAFCA,WACGC,EACJ,wCAE4CK,YAASf,GAAiB,CACjEoB,QAAS,SAAAhJ,GAAK,OAAIyG,QAAQzG,MAAM,4BAA6BA,IAC7D8J,UAAW,CACPxN,GAAIgM,EAAKtR,MAAMgT,OAAO1N,MAHvB2M,EAFR,EAEQA,QAAegB,EAFvB,EAEiBjK,MAOZyI,E,uVAAc,IACXJ,EADW,CAEd6B,aAXL,EAEmCrB,KAU9BsB,gBAAiBlB,EACjBgB,WAAYA,IAGhB,OAAO,kBAAC7B,EAAD,iBAAWE,EAAUG,ICtBjBpQ,mBAAW,SAAAC,GAAK,MAAK,CAChCgF,KAAM,CACF9E,MAAO,OACPgJ,OAAQ,OACRtI,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1CkK,eAAgB,UAEpBC,YAAa,CACT7I,OAAQ,OACR4I,eAAgB,aAChBvI,UAAW,QAEfyI,WAAY,CACRzI,UAAW,OACX/I,WAAYR,EAAMI,QAAQ,IAE9BwH,MAAO,CACHnH,QAAST,EAAMI,QAAQ,GAEvBQ,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,OAE9CqK,aAAc,CACVxR,QAAST,EAAMI,QAAQ,GACvBQ,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1C1H,MAAO,OACPW,aAAc,IAElBkC,OAAQ,CACJmG,OAAQ,QAEZgJ,eAAgB,CACZhS,MAAO,OACPgJ,OAAQ,OACRM,OAAQxJ,EAAMI,QAAQ,IAE1B+R,aAAc,CACVjS,MAAO,OACPgJ,OAAQ,OACRM,OAAQxJ,EAAMI,QAAQ,GACtBQ,gBAAiBZ,EAAM0F,QAAQgC,MAAMJ,MAEzC1E,IAAK,CACDsG,OAAQ,QACRvD,KAAM3F,EAAM0F,QAAQC,MAExByM,KAAM,CACFC,aAAcrS,EAAMI,QAAQ,IAC5BD,UAAWH,EAAMI,QAAQ,GACzBkS,QAAS,OACTC,SAAU,OACVhJ,UAAW,UAEfrE,WAAY,CACRzE,QAAS,IAEb+R,SAAU,CACN5R,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAAQ,aAClDsB,OAAQ,OACRrI,aAAc,GACdmI,WAAY,yBAEhByJ,aAAc,CACV/R,SAAU,qBAGdgS,eAAgB,CACZtS,QAASJ,EAAMI,QAAQ,GACvB4I,WAAY,UACZ2J,aAAc,UACdb,eAAgB,UAEpBc,OAAQ,CACJd,eAAgB,SAChBvI,UAAW,a,oBCxEJ,mBAAG9H,EAAH,EAAGA,KAAMmE,EAAT,EAASA,QAAkBiN,EAA3B,EAAkBC,QAA6B9C,EAA/C,mDACX,kBAAC+C,GAAA,EAAD,CACI9H,WAAS,EACT+H,SAAS,KACTvR,KAAMA,EACNI,QAAS,kBAAM+D,GAAQ,IACvBqN,kBAAgB,cAEhB,kBAACJ,EAAoB7C,GACrB,kBAACkD,GAAA,EAAD,KACI,kBAACpO,GAAA,EAAD,CAAQ7C,QAAS,kBAAM2D,GAAQ,IAAQjF,MAAM,WAA7C,Y,yCCAZ,SAASwS,GAAezO,GAAQ,IACpB0O,EAAW1O,EAAX0O,OACR,OACI,kBAACtO,GAAA,EAAD,CACIxE,MAAO,CACHK,MAAO,UACPF,QAAS,OACT+I,OAAQ,MACRrJ,UAAW,OAEf8C,UAAWC,IACXC,GAAIiQ,GAEH1O,EAAM6D,UAgNJ8K,OA3Mf,SAAqB3O,GAEjB,IAAI4O,EAAevL,eACnBuL,EAAetL,aAAoBsL,GAHX,MAMIlS,oBAAS,GANb,mBAMjBmS,EANiB,KAMTC,EANS,KAexB,OARAC,oBAAU,WACND,GAAU,IACX,CAACD,IAOA,6BACI,kBAAC5K,GAAA,EAAD,CAAe3I,MAAOsT,GAClB,0BACII,KAAK,6DACLC,IAAI,eAER,yBACIrT,MAAO,CACHC,SAAU,WACVqT,IAAK,EACLC,MAAO,OACP/S,OAAQ,IAGZ,kBAACqS,GAAD,CAAgBC,OAAO,WAAvB,WACA,kBAACD,GAAD,CAAgBC,OAAO,UAAvB,UAEJ,kBAACnN,EAAA,EAAD,CACIjG,MAAOsT,EACPpN,QAAQ,KACR5F,MAAO,CACHE,WAAY,KACZ2E,YAAa,KACbhF,UAAW,MACXW,OAAQ,EACRP,SAAU,WACVsG,WAAY,UACZF,WAAY,QACZhG,MAAO,YAXf,8BAgBA,kBAACsF,EAAA,EAAD,CACIC,QAAQ,KACRlG,MAAOsT,EACPhT,MAAO,CACHE,WAAY,KACZ2E,YAAa,KACbhF,UAAW,KACXW,OAAQ,EACRP,SAAU,WACVqT,IAAK,OACL/M,WAAY,UACZF,WAAY,QACZhG,MAAO,YAGV4S,EACG,kBAAC,KAAD,CACIO,OAAQ,CAAEC,MAAM,GAChBC,aAxDL,WACfR,GAAU,KAyDU,kBAAC,KAAOS,MAAR,CAAcC,GAAI,MAClB,+DACA,4DACA,kBAAC,KAAOC,UAAR,CAAkBC,MAAO,GAAIC,MAAO,MACpC,6CACA,kBAAC,KAAOF,UAAR,CAAkBC,MAAO,GAAIC,MAAO,OAGxC,IAGR,kBAAC,KAAD,CACI/T,MAAO,CACHC,SAAU,QACV+T,KAAM,EACNV,IAAK,EACLjM,WACI,6GAER+J,OAAQ,CACJ6C,UAAW,CACPC,OAAQ,CACJC,MAAO,IACPC,QAAS,CACLC,QAAQ,EACRC,WAAY,MAGpBjU,MAAO,CACH8T,MAAO,WAEXI,MAAO,CACHlP,KAAM,SACNmP,OAAQ,CACJ5U,MAAO,EACPS,MAAO,WAEXoU,QAAS,CACLC,SAAU,GAEdvK,MAAO,CACHgC,IAAK,iBACLvM,MAAO,IACPgJ,OAAQ,MAGhB+L,QAAS,CACLR,MAAO,mBACPS,QAAQ,EACRC,KAAM,CACFR,QAAQ,EACRS,MAAO,EACPC,YAAa,GACbC,MAAM,IAGdtK,KAAM,CACFyJ,MAAO,kBACPS,QAAQ,EACRC,KAAM,CACFR,QAAQ,EACRS,MAAO,GACPG,SAAU,GACVD,MAAM,IAGdE,YAAa,CACTb,QAAQ,EACRc,SAAU,IACV9U,MAAO,UACPsU,QAAS,GACT/U,MAAO,GAEXwV,KAAM,CACFf,QAAQ,EACRS,MAAO,EACPO,UAAW,OACXT,QAAQ,EACRU,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACLpB,QAAQ,EACRqB,QAAS,IACTC,QAAS,QAIrBC,cAAe,CACXC,UAAW,SACXC,OAAQ,CACJC,QAAS,CACL1B,QAAQ,EACR2B,KAAM,QAEVC,QAAS,CACL5B,QAAQ,EACR2B,KAAM,QAEVE,QAAQ,GAEZC,MAAO,CACHC,KAAM,CACFjB,SAAU,IACVD,YAAa,CACTP,QAAS,IAGjB0B,OAAQ,CACJlB,SAAU,IACVzK,KAAM,GACN4L,SAAU,EACV3B,QAAS,EACTG,MAAO,GAEXyB,QAAS,CACLpB,SAAU,IACVmB,SAAU,IAEd3I,KAAM,CACF6I,aAAc,GAElBC,OAAQ,CACJD,aAAc,KAI1BE,eAAe,QC5NjCC,G,2MACF5F,MAAQ,CAAE6F,oBAAoB,G,mFAGT,IAAD,OACZC,KAAK5V,QAAQ1C,eACbsY,KAAKC,SAAS,CAAEF,oBAAoB,IAExC,IAAMG,EAAanP,aAAaC,QAAQ/I,IAEnC+X,KAAK5V,QAAQ1C,eAAiBwY,EAC/BF,KAAK5V,QAAQvC,qBAAqBqY,EAAY,WAC1C,EAAKD,SAAS,CAAEF,oBAAoB,MAGxCC,KAAKC,SAAS,CAAEF,oBAAoB,M,+BAMxC,OAAOC,KAAKzS,MAAM6D,SAAS4O,KAAK9F,MAAM6F,wB,GArBrBI,aAAnBL,GAEKM,YAAc5Y,EAuBzB,IAAM6Y,GAAwB,SAAC,GAMxB,IALOC,EAKR,EALFlS,SACAmS,EAIE,EAJFA,UAEAC,GAEE,EAHFtV,KAGE,EAFFsV,aACG3H,EACD,6DAEInR,EADU2C,qBAAW7C,GACGE,cAO9B,OALK6Y,IACDA,EAAY,UAGhBvJ,QAAQC,IAAI,kBAAmBvP,GAE3B,kBAAC,GAAD,KACK,SAAAqY,GAAkB,OACQ,IAAvBA,EACI,kBAACU,GAAD,MAEA,kBAAC,IAAD,iBACQ5H,EADR,CAEI6H,OAAQ,SAAAnT,GACJ,OAAI7F,EACO,kBAAC4Y,EAAD,iBAAc/S,EAAWsL,KACxBnR,GAAiB8Y,EAClB,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAUxU,GAAIuU,WAUxCI,GAAe,SAAApT,GAAK,OAC7B,kBAACqT,GAAD,KACI,kBAAC,GAA0BrT,K,uCCnD7B5E,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCgF,KAAM,CACFxE,WAAYR,EAAMI,QAAQ,GAC1B+E,YAAanF,EAAMI,QAAQ,GAC3BoJ,OAAQxJ,EAAMI,QAAQ,GACtBS,aAAc,IAElB+G,MAAO,CACHnH,QAAST,EAAMI,QAAQ,GACvBQ,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1CoB,WAAY,SACZ2J,aAAc,UACd1J,QAAS,SACTpI,aAAc,IAElBuR,KAAM,CACFE,QAAS,OACTC,SAAU,QAEdyF,OAAQ,CACJxO,OAAQxJ,EAAMI,QAAQ,EAAG,EAAG,OAIpC,SAAS6X,GAAT,GAA6B,IAAZC,EAAW,EAAXA,QACP3W,EAAUC,qBAAW7C,GACrBuC,EAAUpB,KAFQ,EAIQsB,mBAAS,IAJjB,mBAIjBoF,EAJiB,KAIP2R,EAJO,OAKQ/W,mBAAS,IALjB,mBAKjBgX,EALiB,KAKPC,EALO,OAMcjX,oBAAS,GANvB,mBAMjBkX,EANiB,KAMJC,EANI,OAOgBnX,oBAAS,GAPzB,mBAOjBoX,EAPiB,KAOHC,EAPG,KASlBC,EAAQ,sCAAG,WAAMnI,GAAN,eAAAU,EAAA,qDACL0H,EAAUpI,EAAKqI,UAAfD,MACRpX,EAAQvC,qBAAqB2Z,GAC7BzQ,aAAaE,QAAQhJ,EAAYuZ,GACjCT,EAAQjK,KAAR,KAJa,yCAAH,sDAORC,EAAY,sCAAG,WAAM2K,GAAN,eAAA5H,EAAA,qDACjB9C,QAAQC,IAAI,oBACRyK,EAAOC,gBACDC,EAAaF,EAAOC,cAAc,GAAGE,QAAQC,UAAU,EAAG,IAC5D1Z,EAAqB2Z,WAAWH,IAChCR,GAAe,GACfpK,QAAQC,IAAI,yBAEZD,QAAQC,IAAI,sBACZD,QAAQC,IAAIyK,GACZJ,GAAgB,KAVP,yCAAH,sDAhBM,EA+BRU,YAAY3J,GAAgB,CACxCc,YAAaoI,EACbhI,QAASxC,IAFNkL,EA/BiB,oBAoClBC,EAAU,sCAAG,WAAMxV,GAAN,SAAAoN,EAAA,qDACfmI,EAAM,CAAE5H,UAAW,CAAEhL,SAAUA,EAAU4R,SAAUA,KACnDvU,EAAMyV,iBAFS,yCAAH,sDAKhB,OACI,kBAACC,GAAA,EAAD,CAAOxX,UAAWb,EAAQ0G,MAAO9B,UAAW,GACxC,0BAAM0T,SAAUH,EAAYtX,UAAWb,EAAQkR,MAC3C,kBAACnM,EAAA,EAAD,CACIhD,UAAU,KACViD,QAAQ,KACRnE,UAAWb,EAAQ8D,MAHvB,UAOA,kBAACyU,GAAA,EAAD,CACI1X,UAAWb,EAAQ8D,KACnBkB,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACTjH,GAAG,WACH2V,MAAM,WACNC,WAAS,EACTC,SAAU,SAAA/X,GAAC,OAAIqW,EAAYrW,EAAEgY,OAAOrF,QACpC/M,MAAO4Q,IAEX,kBAACmB,GAAA,EAAD,CACI1X,UAAWb,EAAQ8D,KACnBkB,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACT0O,MAAM,WACNhU,KAAK,WACL3B,GAAG,WACH6V,SAAU,SAAA/X,GAAC,OAAIuW,EAAYvW,EAAEgY,OAAOrF,QACpC/M,MAAO4Q,EACPyB,WACIzB,EAAc,iCAAmC,KAIzD,kBAACxP,GAAA,EAAD,CACIC,WAAS,EACTE,QAAQ,SACRD,WAAW,SACX5I,QAAS,GAET,kBAAC0I,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAAC9F,GAAA,EAAD,CACI/C,UAAWb,EAAQ8D,KACnB5C,KAAK,SACLuX,MAAM,SACNhU,KAAK,SACLO,QAAQ,YACRvF,MAAM,UACNsK,WAAS,GAPb,UAYCuN,GACG,kBAACwB,GAAA,EAAD,CACItS,MAAO8Q,EACPzW,UAAWb,EAAQ8D,MAFvB,2BASR,kBAAC8D,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAACqP,GAAA,EAAD,CACIhX,UAAWC,IACXC,GAAG,UACHpB,UAAWb,EAAQ8D,KACnBrE,MAAM,aAJV,gCAexB,IAAMuZ,GAAiB,SAAAxV,GAAK,OACxB,kBAACoE,GAAA,EAAD,CACIC,WAAS,EACT3I,QAAS,EACTuV,UAAU,SACV3M,WAAW,SACXC,QAAQ,SACR3I,MAAO,CAAE6Z,UAAW,SAEpB,kBAACrR,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAIwP,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACrC,GAAUvT,MAKR,YAAAA,GAAK,OAChB,kBAACqT,GAAD,KACI,kBAAC,GAAmBrT,KCtLjB6V,GAAkB,IAHLlR,EAAQ,MAShCkR,GACKC,KAAKC,IALM,GAMXD,KAAKE,IALM,KAMXC,MAAMC,YACND,MAAME,SACNL,KAAKM,MAAMC,MAAM,CAAC,WAAY,gBAI5B,IAAMC,GAAmB,SAACC,GAE7B,IADA,IAAIC,EAAS,GACJ5N,EAAE,EAAGA,EAAI2N,EAAM1O,OAAQe,IAAI,CAC5BA,GAAI,IAAG4N,GAAU,OAErB,IAAIC,EAAOF,EAAM3N,GACJ,QAAT6N,IACAD,GAAM,oCApBF,EAoBE,qBAEG,QAATC,IACAD,GAAM,mCAtBF,IAsBE,qBAEG,cAATC,IACAD,GAAM,0CAEG,WAATC,IACAD,GAAM,8BAEG,UAATC,IACAD,GAAM,0BAGd,OAAOA,GCfLpb,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCgF,KAAM,CACFxE,WAAYR,EAAMI,QAAQ,GAC1B+E,YAAanF,EAAMI,QAAQ,GAC3BoJ,OAAQxJ,EAAMI,QAAQ,GACtBS,aAAc,IAElB+G,MAAO,CACHnH,QAAST,EAAMI,QAAQ,GACvBQ,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,MAC1CoB,WAAY,SACZ2J,aAAc,UACd1J,QAAS,SACTpI,aAAc,IAElBuR,KAAM,CACFE,QAAS,OACTC,SAAU,QAEdyF,OAAQ,CACJxO,OAAQxJ,EAAMI,QAAQ,EAAG,EAAG,OAIpC,SAASgb,GAAO1W,GAAQ,IAAD,EACatD,mBAAS,IADtB,mBACZoF,EADY,KACF2R,EADE,OAEO/W,mBAAS,IAFhB,mBAEZia,EAFY,KAELC,EAFK,OAGala,mBAAS,IAHtB,mBAGZgX,EAHY,KAGFC,EAHE,OAI2BjX,mBAAS,IAJpC,mBAIZma,EAJY,KAIKC,EAJL,OAK2Bpa,oBAAS,GALpC,mBAKZqa,EALY,KAKKC,EALL,OAMqBta,oBAAS,GAN9B,mBAMZua,EANY,aAOuBva,oBAAS,IAPhC,mBAOZwa,EAPY,KAOGC,EAPH,OAQ2Bza,mBAAS,IARpC,mBAQZ0a,EARY,KAQKC,EARL,OASqB3a,oBAAS,GAT9B,mBASZoX,EATY,KASEC,EATF,KAWfuD,EAAiB3S,EAAQ,KAEvBnI,EAAUpB,KACV4Y,EAAQ,sCAAG,WAAMnI,GAAN,SAAAU,EAAA,qDAEbvM,EAAMwT,QAAQjK,KAAd,UAFa,yCAAH,sDAKRC,EAAY,sCAAG,WAAM2K,GAAN,eAAA5H,EAAA,qDACjB9C,QAAQC,IAAI,oBACRyK,EAAOC,gBACDC,EAAaF,EAAOC,cAAc,GAAGE,QAAQC,UAAU,EAAG,IAC5D3Z,EAAuB4Z,WAAWH,GAClC2C,GAAmB,IAEnBvN,QAAQC,IAAI,sBACZD,QAAQC,IAAIyK,GACZJ,GAAgB,KATP,yCAAH,sDAnBC,EAiCFU,YAAYzJ,GAAiB,CAC1CY,YAAaoI,EACbhI,QAASxC,IAFN+N,EAjCY,oBAsCb5C,EAAU,sCAAG,WAAMxV,GAAN,SAAAoN,EAAA,qDACfpN,EAAMyV,iBACNnL,QAAQC,IAAI,kBACZ6N,EAAO,CACHzK,UAAW,CAAEhL,SAAUA,EAAU6U,MAAOA,EAAOjD,SAAUA,KAJ9C,yCAAH,sDAQV8D,EAAc,sCAAG,WAAMC,GAAN,eAAAlL,EAAA,qDACnBoH,EAAY8D,GAGRC,EAAc7B,GAAgB8B,SAASF,EAAM,CAAEG,MAAM,IACzDP,EAAmBK,GACQ,IAAvBA,EAAY7P,OACZsP,GAAiB,GAEjBA,GAAiB,GATF,yCAAH,sDAadU,KAAkBnE,IAAawD,EAC/BY,KACAjB,KAAqBA,IAAoBnD,GAEzCqE,KACCrE,MAAemD,IAAoBnD,KAAcwD,MACjDP,IAAUW,EAAeK,SAAShB,GAEnCqB,KAAiBrB,IAAUW,EAAeK,SAAShB,GACnDsB,GAAahB,GAAgBe,GAC/BE,GAAc,GAOlB,OANIF,GACAE,GAAc,mBACPjB,IACPiB,GAAc,kBAId,kBAACrD,GAAA,EAAD,CAAOxX,UAAWb,EAAQ0G,MAAO9B,UAAW,GACxC,0BAAM/D,UAAWb,EAAQkR,KAAMoH,SAAUH,GACrC,kBAACpT,EAAA,EAAD,CACIhD,UAAU,KACViD,QAAQ,KACRnE,UAAWb,EAAQ8D,MAHvB,WAQA,kBAACyU,GAAA,EAAD,CACI1X,UAAWb,EAAQ8D,KACnB6U,SAAU,SAAA/X,GAAC,OAAIqW,EAAYrW,EAAEgY,OAAOrF,QACpCvO,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACT4R,aAAa,WACblD,MAAM,WACNhU,KAAK,WACLiU,WAAS,EACTlS,MAAO+T,EACP1B,WAAY0B,EAAkB,oBAAsB,KAGxD,kBAAChC,GAAA,EAAD,CACI1X,UAAWb,EAAQ8D,KACnBkB,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACT4R,aAAa,QACblD,MAAM,QACNhU,KAAK,QACLkU,SAAU,SAAA/X,GAAC,OAAIwZ,EAASxZ,EAAEgY,OAAOrF,QACjC/M,MAAOiV,GACP5C,WAAY6C,KAGhB,kBAACnD,GAAA,EAAD,CACI1X,UAAWb,EAAQ8D,KACnBkB,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACT4R,aAAa,WACblD,MAAM,WACNhU,KAAK,WACLkU,SAAU,SAAA/X,GAAC,OAAIoa,EAAepa,EAAEgY,OAAOrF,QACvC/M,MAAO6U,GACPxC,WACIwC,GAAgBvB,GAAiBc,GAAmB,KAI5D,kBAACrC,GAAA,EAAD,CACI1X,UAAWb,EAAQ8D,KACnBkB,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACT0O,MAAM,mBACNhU,KAAK,WACLkU,SAAU,SAAA/X,GAAC,OAAI0Z,EAAmB1Z,EAAEgY,OAAOrF,QAC3C/M,MAAO8U,GACPzC,WACIyC,GAAuB,uBAAyB,KAIxD,kBAAC1T,GAAA,EAAD,CACIC,WAAS,EACTE,QAAQ,SACRD,WAAW,SACX5I,QAAS,GAET,kBAAC0I,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAAC9F,GAAA,EAAD,CACI/C,UAAWb,EAAQ8D,KACnBiG,WAAS,EACT0O,MAAM,SACNhU,KAAK,SACLO,QAAQ,YACRvF,MAAM,UACN4D,SAAUkY,IAPd,WAWCjE,GACG,kBAACwB,GAAA,EAAD,CACItS,MAAO8Q,KAKnB,kBAAC1P,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAACqP,GAAA,EAAD,CACIlY,UAAWb,EAAQ8D,KACnB/B,UAAWC,IACXC,GAAG,SACHxC,MAAM,aAJV,uCAexB,IAAMuZ,GAAiB,SAAAxV,GAAK,OACxB,kBAACoE,GAAA,EAAD,CACIC,WAAS,EACT3I,QAAS,EACTuV,UAAU,SACV3M,WAAW,SACXC,QAAQ,SACR3I,MAAO,CAAE6Z,UAAW,SAEpB,kBAACrR,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAIwP,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,kBAACc,GAAW1W,MAKT,YAAAA,GAAK,OAChB,kBAACqT,GAAD,KACI,kBAAC,GAAmBrT,KC7OboY,OATf,WAII,OAHgBtb,qBAAW7C,GACnBM,SAGJ,kBAAC,IAAD,CAAUkE,GAAG,Y,2DCgBf4Z,GAAc,kBAChB,kBAAC,WAAD,KACI,kBAACC,GAAA,EAAD,CAAahZ,GAAG,cAAhB,QACA,kBAACiZ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,sEAGA,kBAACA,GAAA,EAAD,oGAQZ,SAASC,GAAiBzY,GACtB,IAAMxD,EAAUkc,KAGV5W,EADUhF,qBAAW7C,GACFG,KAAK0H,SAJD,EAMOpF,mBAAS,IANhB,mBAMtBic,EANsB,KAMVC,EANU,OAOHlc,mBAAS,IAPN,mBAOtBmc,EAPsB,KAOfC,EAPe,OAQGpc,mBAAS,IARZ,mBAQtBqc,EARsB,KAQZC,EARY,OASLtc,oBAAS,GATJ,mBAStBK,EATsB,KAShBmE,EATgB,OAUDxE,oBAAS,GAVR,mBAUtBuc,EAVsB,KAUdC,EAVc,KAYvBC,EAAU,sCAAG,WAAMtN,GAAN,eAAAU,EAAA,qDACPwM,EAAalN,EAAKuN,aAAaC,OAA/BN,SACRC,EAAYD,GACZ7X,GAAQ,GAHO,yCAAH,sDAZa,EAmBIuT,YAAYxJ,GAAwB,CACjEW,YAAauN,IApBY,mBAmBtBG,EAnBsB,KAwBvB3E,GAxBuB,KAmBN9I,KAKP,sCAAG,WAAM1M,GAAN,SAAAoN,EAAA,qDACfpN,EAAMyV,iBACN0E,EAAa,CACTxM,UAAW,CACP6L,WAAYA,EACZE,MAAOA,KALA,yCAAH,uDAUV7b,EAAc,SAAAmC,GAChBA,EAAMyV,iBACN1T,GAAQ,GACRlB,EAAMwT,QAAQjK,KAAd,MAGJ,OACI,0BAAMlM,UAAWb,EAAQkR,KAAMoH,SAAUH,GACrC,kBAACvQ,GAAA,EAAD,CAAMC,WAAS,EAAC3I,QAAS,EAAG2B,UAAWb,EAAQwR,gBAC3C,kBAAC5J,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAI7B,WAAS,EAACE,QAAQ,UACjC,kBAAChD,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBAEA,kBAACD,EAAA,EAAD,CAAYC,QAAQ,aAApB,yPASJ,kBAAC4C,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC2O,GAAA,EAAD,CAAOxX,UAAWb,EAAQ+Q,aAAcnM,UAAW,GAC/C,kBAACmY,GAAA,EAAD,CAAalc,UAAWb,EAAQ6Q,YAAa9G,WAAS,GAClD,kBAACwO,GAAA,EAAD,CACIvT,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACTjH,GAAG,cACH2V,MAAM,cACNC,WAAS,EACTC,SAAU,SAAA/X,GAAC,OAAIwb,EAAcxb,EAAEgY,OAAOrF,aAKtD,kBAAC3L,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC2O,GAAA,EAAD,CAAOxX,UAAWb,EAAQ+Q,aAAcnM,UAAW,GAC/C,kBAACmY,GAAA,EAAD,CAAalc,UAAWb,EAAQ6Q,YAAa9G,WAAS,GAClD,kBAACwO,GAAA,EAAD,CACIvT,QAAQ,WACRgY,WAAS,EACTC,KAAM,EACNlT,WAAS,EACTjH,GAAG,QACH2V,MAAM,gCACNE,SAAU,SAAA/X,GAAC,OAAI0b,EAAS1b,EAAEgY,OAAOrF,aAMjD,kBAAC3L,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC2O,GAAA,EAAD,CAAOxX,UAAWb,EAAQ+Q,aAAcnM,UAAW,GAC/C,kBAACmY,GAAA,EAAD,CAAalc,UAAWb,EAAQ6Q,YAAa9G,WAAS,GAClD,kBAACwO,GAAA,EAAD,CACIvT,QAAQ,WACR3B,UAAQ,EACR6Z,aAAc5X,EACdyE,WAAS,EACTjH,GAAG,eACH2V,MAAM,eACNE,SAAU,SAAA/X,GAAC,OACPqM,QAAQzG,MACJ,iEAQxB,kBAACoB,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC9F,GAAA,EAAD,CACI1C,KAAK,SACLuX,MAAM,SACNhU,KAAK,SACLsF,WAAS,EACT/E,QAAQ,YACRvF,MAAM,aANV,YAaR,kBAAC0d,GAAD,CACI5c,KAAMiD,EAAM4D,SACZ1C,QAASlB,EAAMzD,YACf6R,QAASiK,KAGb,kBAAChK,GAAA,EAAD,CAAQtR,KAAMA,EAAMI,QAASH,GACzB,kBAACsb,GAAA,EAAD,CAAanb,QAASH,GAAtB,4BAC8B2b,EAD9B,MAGA,kBAACJ,GAAA,EAAD,KACI,kBAAChX,EAAA,EAAD,CAAY6E,MAAM,QAAlB,yEAEoBuS,EAFpB,4DAII,6BAJJ,6IAQI,6BACA,6BACCI,EAVL,QAWI,kBAAC,mBAAD,CACIa,KAAMb,EACNc,OAAQ,kBAAMX,GAAU,KAExB,kBAAC9Y,GAAA,EAAD,CAAQoB,QAAQ,YAAhB,SAEJ,6BACA,6BAlBJ,wDAsBJ,kBAACgN,GAAA,EAAD,KACI,kBAACpO,GAAA,EAAD,CAAQ7C,QAASP,EAAaf,MAAM,UAAUiZ,WAAS,GAAvD,cAKR,kBAAC4E,GAAA,EAAD,CACIva,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1C,KAAMkc,EACNc,iBAAkB,IAClB5c,QAAS,kBAAM+b,GAAU,IACzB5E,QACI,0BAAMhV,GAAG,cAAT,gCAEI,6BACCyZ,MAQV,gBAAA/Y,GAAK,OAChB,kBAAC,WAAD,KACI,kBAACkE,EAAA,EAAD,MACA,kBAACE,GAAA,EAAD,CACIC,WAAS,EACT3I,QAAS,EACTuV,UAAU,SACV3M,WAAW,SACXC,QAAQ,SACR3I,MAAO,CAAE6Z,UAAW,SAEpB,kBAACrR,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAIyP,GAAI,GACnB,kBAAC8C,GAAqBzY,O,mBCnOvB,mBAAGga,EAAH,EAAGA,SAAa1O,EAAhB,mCACX,kBAAC,WAAD,KACI,kBAAClL,GAAA,EAAD,iBACQkL,EADR,CAEIrP,MAAM,YACNuF,QAAQ,YACRP,KAAK,WAJT,SAQE+Y,GACE,kBAAC1E,GAAA,EAAD,CAAgBtS,OAAQgX,GAAxB,4B,UCVGC,4BACX,YAA4E,IAAzEC,EAAwE,EAAxEA,OAAQC,EAAgE,EAAhEA,QAAS3d,EAAuD,EAAvDA,QAAS4d,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,WAAYL,EAAyB,EAAzBA,SAAUM,EAAe,EAAfA,SAAe,EACxCJ,EAAOtI,KAA9B2I,EAD+D,EAC/DA,OAAQC,EADuD,EACvDA,KAAMC,EADiD,EACjDA,KAChBC,EAAiBD,GAAQL,EACzBO,EAAmBH,GAAQJ,EAC3BQ,EAAaF,GAAkBC,GAAoBJ,EACnDM,EAAmBP,IAAa,GAAK,OAE3C,OACI,kBAAC,WAAD,MACOM,IAAeN,MAAgBM,IAC9B,kBAACxW,GAAA,EAAD,CAAM6B,MAAI,GACN,yBACI5I,UAAWb,EAAQgR,eACnB5R,MAAO,CACH6E,YAAa,OAEb+D,OAAQ,OACRsW,WAAY,aAK5B,kBAAC1W,GAAA,EAAD,CAAM6B,MAAI,GACN,kBAAC1E,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,MAAM,UAC1BmU,GAAU,SADf,IAC0BC,GAAQ,OADlC,IAC2CC,GAAQ,OAAQ,IAD3D,cAKFG,GACE,kBAACxW,GAAA,EAAD,CAAM6B,MAAI,GACN,yBACI5I,UAAWb,EAAQgR,eACnB5R,MAAO,CACHE,WAAY,OAEZ0I,OAAQ,OACRsW,WAAY,aAK3BF,GACG,kBAACxW,GAAA,EAAD,CAAM6B,MAAI,GACLyU,GACG,kBAACta,GAAA,EAAD,CACInE,MAAM,YACNuF,QAAQ,YACRjE,QAAS,SAAAH,GAAC,OAAI+c,EAAQY,QAAQ,CAAEP,MAAM,KACtCnd,UAAWb,EAAQgR,eACnB5R,MAAO,CAAEE,WAAY+e,IALzB,QAUHF,GACG,kBAACva,GAAA,EAAD,CACInE,MAAM,UACNuF,QAAQ,YACRjE,QAAS8c,EACThd,UAAWb,EAAQgR,eACnB5R,MAAO,CAAEE,WAAY+e,IALzB,UAWHN,GACG,kBAACS,GAAD,CACIhB,SAAUA,EACV3c,UAAWb,EAAQgR,eACnB5R,MAAO,CAAEE,WAAY+e,MAKpCN,GACG,kBAACnW,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC3E,EAAA,EAAD,CACIC,QAAQ,YACR4E,MAAOkU,IAAa,OAAS,UAFjC,6FChFT,eAA0C,IAAvCJ,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASta,EAAqB,EAArBA,SAAUnC,EAAW,EAAXA,KACnC+c,EAASP,EAAOtI,KAAhB6I,KACA9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eACN,OACI,kBAAClG,GAAA,EAAD,CAGIzV,GAAG,gBACH2V,MAAM,gBACNzT,QAAQ,WACR0T,WAAYuF,EACZzF,UAAQ,EACRzO,WAAS,EACTwJ,MAAOpD,EAAMjP,MAAQ,GACrBwd,WAAY,CAAEC,SAAUV,GACxBtF,SAAU,SAAA/X,GAAC,OAAI6d,EAAevd,EAAMN,EAAEgY,OAAOrF,QAC7ClQ,SAAUA,KCjBP,eAA0D,IAAvDqa,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,QAAShO,EAAqC,EAArCA,eAAgBtM,EAAqB,EAArBA,SAAUnC,EAAW,EAAXA,KACnD+c,EAASP,EAAOtI,KAAhB6I,KACA9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eACN,OACI,kBAAClG,GAAA,EAAD,CACIzV,GAAG,QACH2V,MAAM,qBACNzT,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACTwJ,MAAOpD,EAAMA,OAAS,GACtBuO,WAAY,CACRC,SAAUV,GAEdtF,SAAU,SAAA/X,GAAC,OAAI6d,EAAevd,EAAMN,EAAEgY,OAAOrF,QAC7CqL,QAAM,EACNvb,SAAUA,GAETwb,OAAOC,KAAKnP,GAAgBjO,IAAI,SAAA6R,GAC7B,OACI,kBAACnQ,GAAA,EAAD,CAAUmQ,MAAO5D,EAAe4D,GAAQzR,IAAKyR,GACxCA,OCtBV,eAAmD,IAAhDmK,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,QAASta,EAA8B,EAA9BA,SAAUnC,EAAoB,EAApBA,KACnC+c,GADuD,EAAdc,QAChCrB,EAAOtI,KAAhB6I,MACA9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eAEN,OACI,kBAAClG,GAAA,EAAD,CACIzV,GAAG,cACH2V,MAAM,cACNzT,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACTiT,WAAS,EACTzJ,MAAOpD,EAAMvH,aAAe,GAC5B8V,WAAY,CACRC,SAAUV,GAEdtF,SAAU,SAAA/X,GAAC,OAAI6d,EAAevd,EAAMN,EAAEgY,OAAOrF,QAC7ClQ,SAAUA,KClBP,eAA2B,IAAxBqa,EAAuB,EAAvBA,OAAQpY,EAAe,EAAfA,SAChB6K,EAAUuN,EAAVvN,MACN,OACI,kBAACoI,GAAA,EAAD,CACIzV,GAAG,iBACH2V,MAAM,iBACNzT,QAAQ,WACRwT,UAAQ,EACRzO,WAAS,EACTwJ,MACIpD,EAAMtH,OAA6C,IAApCgW,OAAOC,KAAK3O,EAAMtH,OAAOwC,OAClC8E,EAAMtH,MAAMvD,SACZA,EAEVoZ,WAAY,CACRC,UAAU,GAEdhG,SAAU,SAAA/X,GAAC,OAAIqM,QAAQC,IAAI,+B,UCfxB,eAA0C,IAAvCwQ,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAASta,EAAqB,EAArBA,SAAUnC,EAAW,EAAXA,KACnC+c,EAASP,EAAOtI,KAAhB6I,KACA9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eACN,OACI,kBAAC,KAAD,CACIpb,SAAU4a,GAAQ5a,EAClB2b,WAAS,EACTC,QAAS,aAETC,aAAa,WACbC,OAAO,aACPC,OAAO,OACP3G,MAAM,oBACNlF,MAAOpD,EAAMkP,KACb1G,SAAU,SAAA0G,GAAI,OAAIZ,EAAevd,EAAMme,IACvCC,oBAAqB,CACjB,aAAc,kB,oBCZf,eAAmD,IAAhD5B,EAA+C,EAA/CA,OAAQC,EAAuC,EAAvCA,QAASta,EAA8B,EAA9BA,SAAUnC,EAAoB,EAApBA,KAAMlB,EAAc,EAAdA,QAAc,EAChC0d,EAAOtI,KAA9B2I,EADuD,EACvDA,OAAQC,EAD+C,EAC/CA,KAAMC,EADyC,EACzCA,KACd9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eAEN,OAAIV,GAAUC,EAEN,kBAAC,WAAD,KACI,kBAACjZ,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,UAAWb,EAAQ8Q,YAA5C,WAGA,kBAACyO,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIC,QAASvP,EAAMwP,WAAY,EAC3BhH,SAAU,SAAA/X,GAAC,OACP6d,EAAevd,EAAMN,EAAEgY,OAAO8G,UAGlCrc,SAAUA,IAGlBjE,MAAO,CAAEE,WAAY,GACrBmZ,MAAM,WAEV,kBAACK,GAAA,EAAD,CAAgBjY,UAAWb,EAAQ8Q,YAC9BX,EAAMwP,SACD,qBACA,oCAIX1B,GAAQ9N,EAAMwP,SAEjB,kBAAC,WAAD,KACI,kBAAC5a,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,UAAWb,EAAQ8Q,YAA5C,+CAGA,kBAAC,mBAAD,CAAiBsM,KAAM/f,OAAOC,SAASkV,MACnC,kBAAC5O,GAAA,EAAD,CAAQoB,QAAQ,YAAhB,eAKL,M,uOCvCA,mBAA6D,IAA1D0Y,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,QAAS5O,EAAwC,EAAxCA,SAAU1L,EAA8B,EAA9BA,SAAUnC,EAAoB,EAApBA,KAAMlB,EAAc,EAAdA,QACnDie,EAASP,EAAOtI,KAAhB6I,KACA9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eAEN,OACIR,GACA9N,EAAMyP,wBAEU,IADhBf,OAAOgB,OAAO1P,EAAMyP,wBAAwBE,OAAO,SAAAvM,GAAK,OAAIA,IACvDlI,OAGD,kBAACtG,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,UAAWb,EAAQ8Q,YAA5C,wDAOJ,kBAAC,WAAD,KACI,kBAAC/L,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,UAAWb,EAAQ8Q,YACtCmN,EAEI,2BADA,oCAGV,kBAAChd,EAAA,EAAD,CAAM8e,gBAAc,GACfhR,EAASrN,IAAI,SAAAmb,GACV,OACI1M,EAAMyP,wBACJ3B,IAAQ9N,EAAMyP,uBAAuB/C,EAAO/Z,IA4B3C,KAzBC,kBAAClB,EAAA,EAAD,CAAUE,IAAK+a,EAAO/Z,GAAIkd,OAAK,EAAC3c,SAAUA,IACpC4a,GACE,kBAAC/b,EAAA,EAAD,KACI,kBAAC+d,GAAA,EAAD,CACI3d,KAAK,QACLod,QACIvP,EAAMyP,uBACF/C,EAAO/Z,MACN,EAET/B,QAAS,SAAAH,GAAC,OACN6d,EAAevd,E,uVAAD,IACPiP,EAAMyP,uBADC,eAET/C,EAAO/Z,GACJlC,EAAEgY,OAAO8G,YAGrBQ,UAAW,KAIvB,kBAAC/d,EAAA,EAAD,CAAcC,QAASya,EAAOV,mB,+BC5D/C,eAAyC,IAAtCnc,EAAqC,EAArCA,QAAS0d,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,QAASzc,EAAW,EAAXA,KAClCpC,EAAQwF,eADqC,EAEtBoZ,EAAOtI,KAA9B4I,EAF6C,EAE7CA,KAAMD,EAFuC,EAEvCA,OAAQE,EAF+B,EAE/BA,KACd9N,EAAUuN,EAAVvN,MACAsO,EAAmBd,EAAnBc,eACN,OACI,kBAAC,WAAD,KACI,kBAAC1Z,EAAA,EAAD,CAAYC,QAAQ,KAAKnE,UAAWb,EAAQ8Q,YAA5C,UAGCkN,GACG,kBAACjZ,EAAA,EAAD,CAAYC,QAAQ,UAAUnE,UAAWb,EAAQ8Q,YAAjD,0BAKHiN,GACG,kBAAC,KAAD,CACIoC,aAAchQ,EAAMiQ,OAAS,GAC7BC,cAAe,CAAC,WAChB9O,aAAa,GACb+O,WAAY,EACZ3H,SAAU,SAAAyH,GAAK,OAAI3B,EAAevd,EAAMkf,IACxCG,cAAevgB,EAAQsR,SACvBtR,QAAS,CACLwgB,kBAAmBxgB,EAAQ8Q,WAC3B2P,kBAAmBzgB,EAAQ8Q,eAIrCmN,GAAQD,IAA0B,UAAjB7N,EAAMxH,QACrB,kBAAC,KAAD,CACI4C,IAAKhN,EAAOE,UAAY0R,EAAMxH,OAC9B8G,QAAS,kBAACxH,GAAA,EAAD,MACTxI,MAAOX,EAAM0F,QAAQiC,WAAWC,MAChCga,WAAY,CAAE/gB,aAAc,Q,4PC7BjC,mBAOR,IAWCqL,EAjBJ0S,EAME,EANFA,OACAC,EAKE,EALFA,QACA3d,EAIE,EAJFA,QACAkB,EAGE,EAHFA,KACAyf,EAEE,EAFFA,mBACAtd,EACE,EADFA,SAEM4a,EAASP,EAAOtI,KAAhB6I,KAEFQ,EAIAd,EAJAc,eACAmC,EAGAjD,EAHAiD,yBACAC,EAEAlD,EAFAkD,iBACAC,EACAnD,EADAmD,wBAEEC,EAAyBrD,EAAzBqD,cAAe5Q,EAAUuN,EAAVvN,MAEfrR,EAAQwF,eAQd,OALI0G,EADAlM,GAAgC,SAAvBA,EAAM0F,QAAQC,KACZ,gDAEA,kDAIX,kBAAC,WAAD,KACI,kBAAC8T,GAAA,EAAD,CACIzV,GAAG,UACH2V,MAAM,UACNzT,QAAQ,WACR+E,WAAS,EACT1G,SAAUA,EACVkQ,MAAOpD,EAAMnC,SAAW,GACxB0Q,WAAY,CACRC,SAAUV,GAEdtF,SAAU,SAAA/X,GACN6d,EAAevd,EAAMN,EAAEgY,OAAOrF,OAC1B3S,EAAEgY,OAAOrF,MACTqN,GAAyB,GAGzBA,GAAyB,IAGjCpa,QAASua,EAAcva,MACvBwa,WAAY,CACRC,cAAehD,GACX,kBAAC5b,EAAA,EAAD,CACIxB,UAAWb,EAAQgE,WACnBzB,aAAW,SACXO,GAAG,SACH/B,QAAS,SAAAH,GAAC,OACN+f,EAAmB,CACfvT,MAAO+C,EAAMnC,QACbkT,SAAS,MAIjB,kBAAC,KAAD,OAGR9hB,MAAO,CAAE+R,aAAc,IAE3BnQ,UAAW,SAAAJ,GACW,KAAdA,EAAEugB,SAAmBlD,IACrBrd,EAAEwX,iBACFgJ,SAASC,eAAe,UAAUC,UAG1CzI,WAAYkI,EAAcva,QAE9B,kBAAC+a,GAAA,EAAD,CACIze,GAAIie,EAAcS,aAAanW,OAAS,eAAYoW,EACpDlhB,OAAQwgB,EAAcS,aAAanW,OACnClL,SAAUihB,SAASC,eAAe,WAClC1gB,QAAS,SAAAC,GAAC,OACNigB,E,uVAAiB,IACVE,EADS,CAEZS,aAAc,OAGtBze,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBE,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAGhB,kBAAChC,EAAA,EAAD,CAAMc,UAAU,MAAMge,gBAAc,GAC/BgB,EAAcS,aAAa9f,IAAI,SAAA4K,GAAM,OAClC,kBAAC1K,EAAA,EAAD,CACIE,IAAKwK,EAAOM,UACZ/K,QAAM,EACNhB,UAAWb,EAAQ0hB,OACnB3gB,QAAS,SAAAH,GAAC,OAAIkgB,EAAwBxU,KAEtC,kBAACnK,EAAA,EAAD,CAAcC,QAASkK,EAAOM,iBAM9C,kBAAChF,GAAA,EAAD,CAAMC,WAAS,EAACzI,MAAO,CAAEH,UAAW,IAChC,kBAAC,GAAD,CACIwL,aAAa,EACb5J,UAAWb,EAAQ0B,IACnBwJ,SAAU6V,EAAc7V,SACxBF,SAAUA,EACVC,eAAgB,CACZjD,OAAQ,OACRhJ,MAAO,QACPW,aAAc,GACdV,UAAW,GAEf2L,UAAW,CACP,CACIO,OAAQ4V,EAAc7V,SAASC,OAC/BrI,IAAK,SCpIlB,eAA8C,IAA3C6e,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,aAAc7hB,EAAc,EAAdA,QAC1C,SAAS8hB,EAASte,GACd,OACI,kBAACI,GAAA,EAAD,CACIoB,QAAQ,YACRvF,MAAO+D,EAAM/D,MACboB,UAAWb,EAAQ6B,OACnBd,QAASyC,EAAMzC,QACfgJ,WAAS,EACTxK,QAAS,GAERiE,EAAMtC,MAKnB,OACI,kBAAC0G,GAAA,EAAD,CACIC,WAAS,EACTE,QAAQ,eACRD,WAAW,SACX5I,QAAS,EACTE,MAAO,CAAEH,UAAW,IAEpB,kBAAC2I,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAACoY,EAAD,CAAU/gB,QAAS4gB,EAAMzgB,KAAK,OAAOzB,MAAM,aAE/C,kBAACmI,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GACX,kBAACoY,EAAD,CACI/gB,QAAS6gB,EACT1gB,KAAK,SACLzB,MAAM,eAIboiB,GACG,kBAACja,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAACoP,GAAA,EAAD,CAAgBtS,OAAK,GAArB,8BCpCL,eAOR,IANIoI,EAML,EANFrH,MACAsH,EAKE,EALFA,WACA3N,EAIE,EAJFA,KACAlB,EAGE,EAHFA,QACA+hB,EAEE,EAFFA,gBACGjT,EACD,yEACIkT,EAAwBnT,EAAxBmT,YAEFC,EAAkBD,IAAgB9gB,EAClCghB,EAH0BrT,EAAX6O,OACGtI,KAAhB4I,QAE0BgE,EAChC,OACI,kBAAC3J,GAAA,EAAD,CAAOxX,UAAWb,EAAQ+Q,aAAcnM,UAAW,GAC/C,kBAACmY,GAAA,EAAD,CAAalc,UAAWb,EAAQ6Q,YAAa9G,WAAS,GAClD,kBAAC6E,EAAD,iBACQC,EADR,CAEIxL,SAAU6e,IAAoBD,EAC9B/gB,KAAMA,EACNlB,QAASA,GACL8O,IAGPmT,GAAmB,kBAACE,GAAgBJ,M,+BClBtC,eAAmD,IAAhDxhB,EAA+C,EAA/CA,KAAMmE,EAAyC,EAAzCA,QAAS0d,EAAgC,EAAhCA,aAAcpiB,EAAkB,EAAlBA,QAAS8C,EAAS,EAATA,GACpD,OACI,kBAACuf,GAAA,EAAD,CAAmBC,YAAa,kBAAM5d,GAAQ,KAC1C,kBAAC4Y,GAAA,EAAD,CACIva,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1C,KAAMA,EACNgd,iBAAkB,IAClB5c,QAAS,kBAAM+D,GAAQ,IACvB6d,aAAc,CACV,mBAAoB,cAExBzK,QAAS,0BAAMhV,GAAG,cAAT,mBACT0f,OAAQ,CACJ,kBAAC5e,GAAA,EAAD,CACI9B,IAAI,OACJrC,MAAM,YACNqK,KAAK,QACL/I,QAAS,SAAAH,GAAC,OAAIwhB,EAAatf,KAJ/B,QAQA,kBAACT,EAAA,EAAD,CACIP,IAAI,QACJS,aAAW,QACX9C,MAAM,UACNsB,QAAS,kBAAM2D,GAAQ,IACvB7D,UAAWb,EAAQyiB,OAEnB,kBAAC,KAAD,YC9BT,eAAkD,IAA/CliB,EAA8C,EAA9CA,KAAMmE,EAAwC,EAAxCA,QAASge,EAA+B,EAA/BA,eAAgBha,EAAe,EAAfA,SAC7C,OACI,kBAACmJ,GAAA,EAAD,CACI9H,WAAS,EACT+H,SAAS,KACTvR,KAAMA,EACNI,QAAS,kBAAM+D,GAAQ,IACvBqN,kBAAgB,cAEhB,kBAAC+J,GAAA,EAAD,wBACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,+BAEJ,kBAAChK,GAAA,EAAD,KACI,kBAACpO,GAAA,EAAD,CAAQ7C,QAAS,kBAAM2D,GAAQ,IAAQjF,MAAM,aAA7C,UAGA,kBAACmE,GAAA,EAAD,CACI7C,QAAS,kBACL2hB,EAAe,CAAEpS,UAAW,CAAExN,GAAI4F,EAAS5F,OAE/CrD,MAAM,WAJV,aCpBD,eAAe,IAAZ2V,EAAW,EAAXA,KACN4I,EAAuB5I,EAAvB4I,KAAMD,EAAiB3I,EAAjB2I,OAAQE,EAAS7I,EAAT6I,KACtB,OACI,kBAAC,WAAD,KACI,kBAACnC,GAAA,EAAD,CAAahZ,GAAG,cAAhB,QACCib,GACG,kBAAChC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,wEAIA,kBAACA,GAAA,EAAD,oEAIA,kBAACA,GAAA,EAAD,wHAKA,kBAACA,GAAA,EAAD,oEAOPgC,GACG,kBAACjC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,8EAOPiC,GACG,kBAAClC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,sDAGA,kBAACA,GAAA,EAAD,4H,4kBCFpB,IAAM2G,GAAqB,WACvB,OACI,kBAAC/a,GAAA,EAAD,CACIC,WAAS,EACTE,QAAQ,SACR7I,QAAS,EACTE,MAAO,CACHH,UAAW,QAGf,yBACIG,MAAO,CACHJ,MAAO,QAEXuM,IAAI,4EACJC,IAAI,iBAGR,kBAACzG,EAAA,EAAD,CACIC,QAAQ,KACR5F,MAAO,CACHiJ,UAAW,SACX9I,QAAS,SAJjB,+BAQI,6BARJ,sHAUsD,6BAClD,kBAACwZ,GAAA,EAAD,KACI,kBAAC,IAAD,CAAY9W,GAAG,KAAf,mBAOpB,SAAS2gB,GAAapf,GAAO,IAgBrBoa,EAhBqB,EAED1d,mBAAS,CAC7B6d,OAAQva,EAAMua,OACdC,KAAMxa,EAAMwa,KACZC,KAAMza,EAAMya,OALS,mBAElB7I,EAFkB,KAEZmJ,EAFY,KASnB5N,EAAoBnN,EAApBmN,gBACAhB,EAAyCnM,EAAzCmM,eAAgBZ,EAAyBvL,EAAzBuL,SAAU0B,EAAejN,EAAfiN,WAG1BpQ,EAAUC,qBAAW7C,GACrB6H,EAAWjF,EAAQzC,KAAK0H,SAG9B,IAAK8P,EAAK2I,OAAQ,CACd,IAAIrV,EAAYiI,EAAgD,GAA9BnN,EAAMkN,aAAahI,SAErDkV,IACKjN,IAAmBjI,IACdA,EAASG,MAAMvD,WAAaA,GAKrCsY,GAAWxI,EAAK4I,MACjBO,EAAQ,CAAEN,MAAM,IAGpB,IAAMje,EAAUkc,KA/BS,EAmCahc,mBAAS,IAnCtB,mBAmClB8hB,EAnCkB,KAmCLa,EAnCK,OAqCS3iB,mBAAS,IArClB,mBAqClB4iB,EArCkB,KAqCPC,EArCO,OAuCe7iB,oBAAS,GAvCxB,mBAuClB8iB,EAvCkB,KAuCJC,EAvCI,OAwCW/iB,oBAAS,GAxCpB,mBAwClBgjB,EAxCkB,KAwCNC,EAxCM,OA2CiBjjB,mBAAS,CAC/CgL,SAAU,GACVkY,aAAc,GACd5c,MAAO,GACPgb,aAAc,KA/CO,mBA2ClBT,EA3CkB,KA2CHF,EA3CG,OAkDiC3gB,oBAAS,GAlD1C,mBAkDlBmjB,EAlDkB,KAkDKzC,EAlDL,KAwDnBD,EAAqB,SAAC,GAAwB,IAAtBvT,EAAqB,EAArBA,MAAO8T,EAAc,EAAdA,QACjC,GAAI9T,EACA,OAAOD,GAAaC,GAAOS,KAAK,SAAA/B,GAC5B,IAAIwX,EAAW,GACXxX,EAAS0R,SACT8F,EAAS9c,MAAQ,aACVsF,EAAStF,QAChB8c,EAAS9c,MACL,oDACJyG,QAAQzG,MAAMsF,EAAStF,QAGvB0a,GACAoC,EAASpY,SAAWY,EAASK,QAAQ,GAAGjB,SACxC0V,GAAyB,IAEzB0C,EAAS9B,aAAe1V,EAASK,QAErC0U,EAAiB,MACVE,EADS,GAETuC,OA5EM,EAmFCpjB,mBAAS,IAnFV,mBAmFlBiQ,EAnFkB,KAmFX+F,EAnFW,KAsFzB,IACKd,EAAK4I,MAAQ5I,EAAK6I,QAClBtN,GAC6B,IAA9BkO,OAAOC,KAAK3O,GAAO9E,QACnB0D,GACArG,EACF,CACE,IAAI6a,EAAS,GACbxU,EAASrN,IAAI,SAAA8hB,GAAG,OAAKD,EAAOC,EAAI1gB,KAAM,IACtC4F,EAAS+a,kBAAkB/hB,IAAI,SAAA8hB,GAAG,OAAKD,EAAOC,EAAI1gB,KAAM,IAExDoT,EAAS,MACFxN,EADC,CAEJkX,uBAAwB2D,KAE5B5C,EAAmB,CAAEvT,MAAO1E,EAASsF,QAASkT,SAAS,IAI3D,GAAI9L,EAAK2I,QAAUhP,IAAaoB,EAAMyP,uBAAwB,CAC1D,IAAI2D,GAAS,GACbxU,EAASrN,IAAI,SAAA8hB,GAAG,OAAKD,GAAOC,EAAI1gB,KAAM,IAEtCoT,EAAS,CAAE0J,uBAAwB2D,GAAQlE,KAAM,KAAMlP,MAAO,QAIlE,IAAMsO,GAAiB,SAACiF,EAAWnQ,GAC3B6B,EAAK4I,MAAQgE,IAAgB0B,IAC7Bb,EAAea,GACfX,EAAa5S,EAAMuT,KAEvBxN,EAAS,MACF/F,EADC,eAEHuT,EAAYnQ,MA4CfoQ,GAA8B,WAChC9C,EAAiB,MACVE,EADS,CAEZva,MAAO,iEAKTod,GAAsB,SAAA9gB,GAAO,IACvBkU,EAAYxT,EAAZwT,QACJA,GACAA,EAAQjK,KAAR,qBAA2BjK,IAE/Byb,EAAQ,CAAEN,MAAM,KAId4F,GAAyB,WAAO,IAC1B7M,EAAYxT,EAAZwT,QACJA,GACAA,EAAQjK,KAAR,sBAKF+W,GAA0B,SAAAzU,GAC5B,IAAIvM,EAAKuM,EAAKA,KAAK0U,eAAerb,SAAS5F,GAC3C8gB,GAAoB9gB,IAElBkhB,GAAe,sCAAG,WAAM3U,GAAN,SAAAU,EAAA,qDACpB8S,EAAe,IACfI,GAAgB,GAFI,yCAAH,sDAIfgB,GAAe,sCAAG,WAAM5U,GAAN,SAAAU,EAAA,qDACpB8T,KADoB,yCAAH,sDAGfK,GAAmB,sCAAG,WAAMvM,GAAN,SAAA5H,EAAA,qDACxB9C,QAAQzG,MAAM,4BAA6BmR,GADnB,yCAAH,sDAGnBwM,GAAiB,sCAAG,WAAMxM,GAAN,SAAA5H,EAAA,qDACtB9C,QAAQzG,MAAM,0BAA2BmR,GADnB,yCAAH,sDAGjByM,GAAiB,sCAAG,WAAMzM,GAAN,SAAA5H,EAAA,qDACtB9C,QAAQzG,MAAM,4BAA6BmR,GADrB,yCAAH,sDAIjB0M,GAAc,sCAAG,WACnB/T,EACAgU,EACAC,GAHmB,iBAAAxU,EAAA,qDAKfyU,EAAY,IAAIC,SAEhBtU,EAAMiQ,OAASjQ,EAAMiQ,MAAM/U,QAC3BmZ,EAAUE,OAAO,YAAavU,EAAMiQ,MAAM,IAE9CoE,EAAUE,OAAO,QAASzW,IAC1BuW,EAAUE,OAAO,YAAaC,KAAKC,UAAUtU,IACzCuU,EAAMtmB,EAAOC,IACjBsmB,KACKC,KAAKF,EAAKL,EAAW,CAClBQ,QAAS,CACLC,cAAe,OAASje,aAAaC,QAAQ/I,GAC7C,eAAgB,oCAChB,4BAA6B,yBAGpC2P,KAAK,SAAAqX,GACFZ,EAAgBY,EAAI7V,QAEvB8V,MAAM,SAAAC,GACHb,EAAca,KAzBH,yCAAH,0DAlNK,GA+OyBnN,YAC9C5J,GACA,CACIe,YAAa4U,GACbxU,QAAS2U,KAnPQ,qBA+OlBkB,GA/OkB,MA+OOxD,GA/OP,MA+OArb,MA/OA,GAuPAyR,YACrBvJ,GACA,CACIU,YAAa6U,GACbzU,QAAS4U,KAJV1B,GAvPkB,qBA+PnB4C,GAAY,SAAAjG,GACd,OAAOA,EAAOA,EAAKkG,cAAcC,MAAM,GAAI,GAAK,MAI9CrN,GAAU,sCAAG,WAAMxV,GAAN,iBAAAoN,EAAA,wDACVsT,EADU,uBAEXM,KAFW,0BAMX8B,EAAS,GACTtV,EAAMyP,yBACN6F,EAAS5G,OAAOC,KAAK3O,EAAMyP,wBAAwBE,OAC/C,SAAAhd,GAAE,OAAIqN,EAAMyP,uBAAuB9c,MAKvC4iB,EAAQ,CACRxkB,KAAMiP,EAAMjP,KACZ0H,YAAauH,EAAMvH,YACnBuH,MAAOA,EAAMA,MACbwP,WAAUxP,EAAMwP,UAAWxP,EAAMwP,SACjC8D,kBAAmBgC,EACnBzX,QAASmC,EAAMnC,QAAUmC,EAAMnC,QAAU,IAEzCmC,EAAMkP,OACNqG,EAAMrG,KAAOiG,GAAUnV,EAAMkP,OAEjCgF,GAAeqB,EAAO5B,GAAyBI,IAzBhC,yCAAH,sDA6BVyB,GAAU,sCAAG,WAAMhjB,GAAN,eAAAoN,EAAA,yDACXqF,EAAK4I,KADM,oBAEP0H,EAAQ,GACPrC,EAHM,uBAIPM,KAJO,0BAMgB,2BAAhB3B,EACP0D,EAAK,kBAAwB7G,OAAOC,KAChC3O,EAAMyP,wBACRE,OAAO,SAAAhd,GAAE,OAAIqN,EAAMyP,uBAAuB9c,KAE5C4iB,EAAM1D,GADiB,SAAhBA,EACcsD,GAAUnV,EAAM6R,IAEhB7R,EAAM6R,GAbpB,OAgBX/U,QAAQC,IAAI,sCAAuCwY,GACnDL,GAAe,CACX/U,UAAW,CACPxN,GAAI4F,EAAS5F,GACb8iB,cAAeF,KApBZ,0CAAH,sDAsCV3D,GAAkB,CACpBJ,KAAMgE,GACN/D,OA/KkB,WAClBnD,GAAeuD,EAAac,GAC5BD,EAAe,IAEK,YAAhBb,GAbJnB,EAAiB,MACVE,EADS,CAEZ7V,SAAU6V,EAAcqC,aACxB5B,aAAc,GACd4B,aAAc,OAqLlBvB,aAAcA,GACd7hB,QAASA,GAGP6lB,GAAiB,CACnB7lB,QAASA,EACTgiB,YAAaA,EACbrS,eAAgBA,EAChBrK,SAAUjF,EAAQzC,KAAK0H,SACvByJ,SAAUA,EACV2O,OAAQ,CACJvN,MAAOA,EACP4Q,cAAeA,EACf3L,KAAMA,GAEVuI,QAAS,CACLc,eAAgBA,GAChBF,YAIFuH,GAAY,MACXD,GADW,CAEdlF,mBAAoBA,EACpBhD,QAAQ,MACDkI,GAAelI,QADf,CAEHkD,iBAAkBA,EAClBD,yBAA0BA,EAC1BE,wBAzOwB,SAAAxU,GAC5B,IAAIyZ,EAAmB,CACnB7a,SAAUoB,EAAOpB,SACjB1E,MAAO,GACPgb,aAAc,IAEE,YAAhBQ,GAA8BjB,EAAcqC,eAC5C2C,EAAiB3C,aAAerC,EAAc7V,UAElDuT,GAAe,UAAWnS,EAAOM,WAEjCiU,EAAiB,MACVE,EADS,GAETgF,IAEPnF,GAAyB,QA8NvBoF,IACD5Q,EAAK6I,MAAuC,IAA9BY,OAAOC,KAAK3O,GAAO9E,QAAgB8E,EAAMwP,SACtDsG,GAAa,CACf,CAAEC,KAAMC,GAAMjlB,KAAM,QACpB,CAAEglB,KAAME,GAAOllB,KAAM,SACrB,CAAEglB,KAAMG,GAAOnlB,KAAM,SACrB,CAAEglB,KAAMI,GAAMplB,KAAM,QACpB,CAAEglB,KAAMK,GAAarlB,KAAM,eAC3B,CAAEglB,KAAMF,GAAcQ,GAAU,KAAMtlB,KAAM,YAC5C,CAAEglB,KAAMO,GAAUvlB,KAAM,0BACxB,CACIglB,KACK9Q,EAAK6I,MAAyB,UAAjB9N,EAAMxH,QACH,cAAjBwH,EAAMxH,OACA,KACA+d,GACVxlB,KAAM,UAIRylB,GAAqB,CACvB,CAAET,KAAMC,GAAMjlB,KAAM,QACpB,CAAEglB,KAAME,GAAOllB,KAAM,SACrB,CAAEglB,KAAMG,GAAOnlB,KAAM,SACrB,CAAEglB,KAAMI,GAAMplB,KAAM,QACpB,CAAEglB,KAAMK,GAAarlB,KAAM,eAC3B,CAAEglB,KAAMO,GAAUvlB,KAAM,0BACxB,CAAEglB,KAAMF,GAAcQ,GAAU,KAAMtlB,KAAM,aAE1C0lB,IAAexR,EAAK6I,MAAyB,UAAjB9N,EAAMxH,OAExC,OAAI8H,EACO,kBAAC,GAAD,OAGN2E,EAAK6I,MAAQ7I,EAAK4I,OAASrN,EACrB,kBAAC+F,GAAD,MAIP,0BAAM4B,SApFY,SAAA1X,GAClBA,EAAEwX,iBACFhD,EAAK2I,OAAS5F,GAAWvX,GAAK+kB,GAAW/kB,IAkFVC,UAAWb,EAAQkR,MAC9C,kBAACtJ,GAAA,EAAD,CAAMC,WAAS,EAAChH,UAAWb,EAAQwR,eAAgBtS,QAAS,GACxD,kBAAC0I,GAAA,EAAD,CACI6B,MAAI,EACJC,GAAI,GACJ7B,WAAS,EACTE,QAAQ,gBACRD,WAAW,SACX5I,QAAS,GAET,kBAAC2nB,GAAD,eACIjJ,QAASA,EACTC,WAAY,kBAAMsF,GAAc,IAChC3F,UApGH,GAqGOqI,MAIXe,IACGX,GAAWvkB,IAAI,YAAiC,IAA9BwkB,EAA6B,EAA7BA,KAAMhlB,EAAuB,EAAvBA,KAAM4lB,EAAiB,EAAjBA,WAC1B,OAAa,OAATZ,EAAsB,MACrBY,IAAYA,EAAa,CAAEpd,GAAI,GAAIwP,GAAI,IAExC,kBAACtR,GAAA,EAAD,eACIC,WAAS,EACT4B,MAAI,GACAqd,EAHR,CAIIhlB,IAAKZ,EACLuQ,aAAa,YAEb,kBAACsV,GAAD,CACIjlB,IAAKokB,EACL3e,MAAO2e,EACPhlB,KAAMA,EACN2N,WAAYgX,GACZ9D,gBAAiBA,GACjB/hB,QAASA,SAM3B4mB,IACE,kBAAC,WAAD,KACI,kBAAChf,GAAA,EAAD,CACIC,WAAS,EACT4B,MAAI,EACJC,GAAI,GACJwP,GAAI,EAEJzH,aAAa,WAEb,kBAACsV,GAAD,CACIxf,MAAOmf,GACPxlB,KAAM,QACN2N,WAAYgX,GACZ9D,gBAAiBA,GACjB/hB,QAASA,KAIjB,kBAAC4H,GAAA,EAAD,CACIC,WAAS,EACT4B,MAAI,EACJC,GAAI,GACJwP,GAAI,EAEJzH,aAAa,UACbvS,QAAS,GAERynB,GAAmBjlB,IAChB,YAAiC,IAA9BwkB,EAA6B,EAA7BA,KAAMhlB,EAAuB,EAAvBA,KAAM4lB,EAAiB,EAAjBA,WACX,OAAa,OAATZ,EAAsB,MACrBY,IAAYA,EAAa,CAAEpd,GAAI,KAEhC,kBAAC9B,GAAA,EAAD,eACIC,WAAS,EACT4B,MAAI,GACAqd,EAHR,CAIIhlB,IAAKZ,EAELuQ,aAAa,UACblS,QAAS,IAET,kBAACwnB,GAAD,CACIjlB,IAAKokB,EACL3e,MAAO2e,EACPhlB,KAAMA,EACN2N,WAAYgX,GACZ9D,gBACIA,GAEJ/hB,QAASA,YAUtCoV,EAAK6I,MAAQ9N,EAAMnC,UAClB,kBAACpG,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAACqd,GAAD,CACIxf,MAAOyf,GACP9lB,KAAK,UACL2N,WAAYiX,GACZ/D,gBAAiBA,GACjB/hB,QAASA,KAKpBoV,EAAK2I,QACF,kBAACnW,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAIyP,GAAI,IACnB,kBAACqF,GAAD,CAAchB,UA3MjB,EA2MqCzT,WAAS,KAInD,kBAACkd,GAAD,CACI1mB,KAAMyiB,EACNte,QAASue,EACTb,aAAcwB,GACd5jB,QAASA,EACT8C,GAAI4F,EAAWA,EAAS5F,GAAK,OAGjC,kBAACokB,GAAD,CACI3mB,KAAM2iB,EACNxe,QAASye,EACTT,eAAgBA,GAChBha,SAAUA,IAGd,kBAACyU,GAAD,CACI5c,KAAMiD,EAAM4D,SACZ1C,QAASlB,EAAMzD,YACf6R,QAASiK,GACTzG,KAAMA,MA0BX+R,mBAnBf,SAAiB3jB,GACb,OACI,kBAAC,KAAD,CAAyB4jB,MAAOC,MAC5B,kBAACzf,GAAA,EAAD,CACIC,WAAS,EACT3I,QAAS,EACT4I,WAAW,aACXC,QAAQ,SACR3I,MAAO,CAAE6Z,UAAW,SAEpB,kBAACrR,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAIyP,GAAI,GACnB,kBAACzR,EAAA,EAAD,MACA,kBAACkb,GAAiBpf,QC3nBvB,SAAS8jB,GAAmB9jB,GACvC,IAAMqL,EAAa,CACftH,MAAOgJ,GACP1B,WAAY,CACRtH,MAAOqb,IAEX7E,QAAQ,GAEZ,OACI,kBAACrO,GAAD,iBACQlM,EACAqL,EAFR,CAGItH,MAAOoH,MCZJ,SAAS4Y,GAAiB/jB,GACrC,IAAMyL,EAAiB,CACnB1H,MAAOgJ,GACP1B,WAAY,CACRtH,MAAOqb,IAEX3E,MAAM,GAEV,OACI,kBAACvO,GAAD,iBACQlM,EADR,CAEI+D,MAAOoH,GACPE,WAAYI,K,ygBCLxB,IAAMrQ,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnC+I,UAAW,CACPtI,QAAST,EAAMI,QAAQ,OAIzBsoB,GAAoB7oB,IAAH,MAoBjBkd,GAAc,kBAChB,kBAAC,WAAD,KACI,kBAACC,GAAA,EAAD,CAAahZ,GAAG,cAAhB,QACA,kBAACiZ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,0EAGA,kBAACA,GAAA,EAAD,oEAOG,SAASyL,GAAoBjkB,GACxC,IAAMxD,EAAUpB,KAD+B,EAErBsB,mBAAS,CAAEuP,SAAS,IAFC,mBAExCU,EAFwC,KAEjC+F,EAFiC,KAe/C,OAXA/G,YAASqY,GAAmB,CACxBlX,UAAW,GACXlB,YAAa,SAAAC,GAAI,OACb6G,EAAS,CACLwR,cAAerY,EAAKC,GAAGqY,wBAAwBC,MAC/CnY,SAAS,KAEjBD,QAAS,SAAAmI,GAAM,OAAI1K,QAAQC,IAAIyK,IAC/BkQ,YAAa,sBAIb,kBAACC,GAAA,EAAD,KACI,kBAACpgB,EAAA,EAAD,MACA,kBAACE,GAAA,EAAD,CACIC,WAAS,EACT3I,QAAS,EACT6I,QAAQ,SACRlH,UAAWb,EAAQ6H,WAEnB,kBAACD,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC3E,EAAA,EAAD,CAAYC,QAAQ,KAAK4E,MAAM,UAA/B,oBAGA,kBAAC7E,EAAA,EAAD,CAAYC,QAAQ,YAAY4E,MAAM,UAAtC,4DAIHuG,EAAMV,QACH,kBAACiH,GAAD,MAC+B,IAA/BvG,EAAMuX,cAAcrc,OACpB8E,EAAMuX,cAAchmB,IAAI,SAAAY,GAAI,OACxB,kBAACsF,GAAA,EAAD,CACI6B,MAAI,EACJC,GAAI,GACJwP,GAAI,EACJC,GAAI,EACJC,GAAI,EACJtX,IAAKQ,EAAKylB,KAAKjlB,IAEf,kBAAC,GAAD,CAAc4F,SAAUpG,EAAKylB,UAIrC,kBAAC1P,GAAA,EAAD,CACIxX,UAAWb,EAAQ0G,MACnBtH,MAAO,CACHH,UAAW,GACXM,QAAS,QAJjB,4CAQI,kBAACwZ,GAAA,EAAD,CACIhX,UAAWC,IACXC,GAAG,oBACHxC,MAAM,aAEL,UAbT,mBAoBR,kBAAC0d,GAAD,CACI5c,KAAMiD,EAAM4D,SACZ1C,QAASlB,EAAMzD,YACf6R,QAASiK,MCtHV,SAAS0L,GAAiB/jB,GACrC,IAAMyL,EAAiB,CACnB1H,MAAOgJ,GACP1B,WAAY,CACRtH,MAAOqb,IAEX5E,MAAM,GAGV,OACQ,kBAACtO,GAAD,iBACQlM,EADR,CAEI+D,MAAOoH,GACPE,WAAYI,KCnBb,SAAS+Y,GAAaxkB,GACjC,OACI,yBAAKpE,MAAO,CAACG,QAAQ,SACjB,wBAAIH,MAAO,CAACK,MAAO,QAAnB,sBACA,6DACA,yBAAK8L,IAAI,8DAA8DC,IAAI,2BAC3E,2BAAG,uBAAGgH,KAAK,KAAR,iB,q1DCgBf,IAAM5T,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCgF,KAAM,CACFsN,QAAS,OACTC,SAAU,OACVT,eAAgB,eAChBqX,SAAU,SACVvoB,gBAAiBZ,EAAM0F,QAAQiC,WAAWC,OAE9CtF,KAAM,CACF3B,MAAO,6BAEX+R,eAAgB,CACZjS,QAAST,EAAMI,QAAQ,IAE3BqJ,KAAM,CACFkJ,aAAc,WAElB/K,MAAO,CACHnH,QAAST,EAAMI,QAAQ,GACvBS,aAAc,OAIhBuoB,GAAgBvpB,IAAH,MA6CbwpB,GAAuBxpB,IAAH,MAapBypB,GAAyBzpB,IAAH,MAStBkd,GAAc,kBAChB,kBAAC,WAAD,KACI,kBAACC,GAAA,EAAD,CAAahZ,GAAG,cAAhB,QACA,kBAACiZ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,yEAGA,kBAACA,GAAA,EAAD,2EAIA,kBAACA,GAAA,EAAD,0FAQG,SAASqM,GAAa7kB,GACjC,IAqDI8kB,EACAvZ,EACAwZ,EAvDEvoB,EAAUpB,KADwB,EAEAsB,mBAAS,IAFT,mBAEjCsoB,EAFiC,KAEnBC,EAFmB,OAGZvoB,oBAAS,GAHG,mBAGjCuc,EAHiC,KAGzBC,EAHyB,OAINxc,mBAAS,IAJH,mBAIjCwoB,EAJiC,KAItBC,EAJsB,OAQX1Q,YAAYkQ,GAAsB,CAC3DS,eAAgB,SAAAvZ,GAAI,MAAI,CAAC,CAAEjC,MAAO8a,MAClC1Y,QAAS,SAAAmI,GAAM,OAAIgR,EAAa,4BAChCvZ,YAAa,SAAAC,GAAI,OAAIsZ,EAAa,OAH/BE,EARiC,sBA8Bc1Z,YAClD+Y,GACA,CACIL,YAAa,sBAHTiB,EA9B4B,EA8BlCzZ,KAA0B0Z,EA9BQ,EA8BjBtZ,QA9BiB,EAqCjBwI,YAAYmQ,GAAwB,CACvDQ,eAAgB,SAAAvZ,GAAI,MAAI,CAAC,CAAEjC,MAAO8a,QAD/Bc,EArCiC,oBAiDxC,GAAID,EAEA,OADA9b,QAAQC,IAAI,mCACL,kBAACwJ,GAAD,MAOX,IAAIoS,EAOA,OADA7b,QAAQzG,MAAM,uDACP,kBAAC,IAAD,CAAUvE,GAAG,YANpBqmB,EAAiBQ,EAAUxZ,GAAG2Z,QAAQX,eACtCvZ,EAAW+Z,EAAUxZ,GAAGC,WACxBgZ,EAAYO,EAAUxZ,GAAG2Z,QAAQnmB,GAOrC,IAAI8H,EAAY,GAQhB,OAJI0d,IACA1d,EAAYke,EAAUxZ,GAAG2Z,QAAQX,eAAeY,aAAatB,OAI7D,kBAAC,WAAD,KACI,kBAAClgB,EAAA,EAAD,MACA,kBAACE,GAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,UACpB,kBAACH,GAAA,EAAD,CACI6B,MAAI,EACJC,GAAI,GACJ0P,GAAI,GACJvR,WAAS,EACT3I,QAAS,EACT6I,QAAQ,gBACRlH,UAAWb,EAAQwR,gBAEnB,kBAAC5J,GAAA,EAAD,CACI6B,MAAI,EACJC,GAAI,GACJwP,GAAI,EACJrR,WAAS,EACTE,QAAQ,SACRD,WAAW,UACX5I,QAAS,EACT2B,UAAWb,EAAQ0G,OAElB4hB,GACG,kBAAC,WAAD,KACI,kBAAC1gB,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC3E,EAAA,EAAD,CAAYC,QAAQ,MACfsjB,EAAenM,aAGxB,kBAACvU,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC3E,EAAA,EAAD,CAAYC,QAAQ,aACfsjB,EAAejM,QAIxB,kBAACzU,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC,mBAAD,CACI0T,KAAMkL,EAAe/L,SACrBc,OAAQ,kBAAMX,GAAU,KAExB,kBAAC9Y,GAAA,EAAD,CAAQoB,QAAQ,YAAhB,6BAQdsjB,GACE,kBAACvjB,EAAA,EAAD,CAAYC,QAAQ,MAApB,4BAKR,kBAAC4C,GAAA,EAAD,CACI6B,MAAI,EACJC,GAAI,GACJwP,GAAI,EACJC,GAAI,EACJtR,WAAS,EACT3I,QAAS,EACT6I,QAAQ,SACR0J,aAAa,cAEb,kBAAC7J,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC6O,GAAA,EAAD,CACIxO,WAAS,EACT0O,MAAM,gBACNzT,QAAQ,WACRuO,MACI+U,EAAiBA,EAAexlB,GAAK,KAEzC8b,QAAM,EACNjG,SA7GP,SAAAhW,GACjBA,EAAMyV,iBACN,IAAM+Q,EAAYxmB,EAAMiW,OAAOrF,MAC/ByV,EAAa,CACT1Y,UAAW,CAAEiY,UAAWA,EAAWa,SAAUD,MA0GzBE,YAAa,CACTnoB,KAAM,MACNooB,WAAW,GAEfjmB,SAAU0L,EAAS1D,QAAU,GAE5B0D,GACGA,EAASrN,IAAI,SAAC+H,EAAM3H,GAAP,OACT,kBAACsB,GAAA,EAAD,CAAUtB,IAAK2H,EAAK3G,GAAIyQ,MAAO9J,EAAK3G,IAC/B2G,EAAK0S,gBAK1B,kBAACvU,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC6O,GAAA,EAAD,CACIxO,WAAS,EACTjH,GAAG,gBACHkC,QAAQ,WACRyT,MAAM,kBACNlF,MAAOiV,EACP3nB,UAAWb,EAAQoI,UACnBuQ,SAAU,SAAA/X,GACN+nB,EAAa,IACbF,EAAgB7nB,EAAEgY,OAAOrF,QAE7ByN,WAAY,CACRC,aACI,kBAACrd,GAAA,EAAD,CACIoB,QAAQ,YACRvF,MAAM,UACNsB,QAxKf,WACO,IAAxBynB,EAAand,OACb4B,QAAQzG,MAAM,0BAEdsiB,GACAA,EAAUxZ,GAAGC,WACR7N,IAAI,SAAA6nB,GAAG,OAAIA,EAAIhN,WACfiN,SAAShB,GAEdG,EAAa,4CAEbE,EAAmB,CAAEvY,UAAW,CAAEiM,SAAUiM,KAC5CC,EAAgB,MA6JgB5nB,UAAWb,EAAQ6B,OACnBiI,KAAK,SALT,QAUJ1K,MAAO,IAEXyZ,WAAY6P,EACZliB,QAASkiB,MAIrB,kBAAC9gB,GAAA,EAAD,CACIC,WAAS,EACTE,QAAQ,aACRD,WAAW,UACX5I,QAAS,EACTuK,MAAI,EACJC,GAAI,IAEHkB,EAAUlJ,IAAI,SAACgH,EAAU5G,GAAX,OACX,kBAAC8F,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,GAAIwP,GAAI,EAAGC,GAAI,EAAGrX,IAAKA,GAClC,kBAAC,GAAD,CACI4G,SAAUA,EAASqf,KACnBlnB,UAAWb,EAAQuI,UAIT,IAArBqC,EAAUS,QAAgBid,GACvB,kBAACjQ,GAAA,EAAD,CACIxX,UAAWb,EAAQ0G,MACnBtH,MAAO,CACHH,UAAW,GACXM,QAAS,QAJjB,sCAQI,kBAACwZ,GAAA,EAAD,CACIhX,UAAWC,IACXC,GAAG,oBACHxC,MAAM,aAEL,UAbT,yDAmBkB,IAArBmL,EAAUS,SAAiBid,GACxB,kBAACjQ,GAAA,EAAD,CACIxX,UAAWb,EAAQ0G,MACnBtH,MAAO,CACHH,UAAW,GACXM,QAAS,QAJjB,8CAQI,kBAACwZ,GAAA,EAAD,CACIhX,UAAWC,IACXC,GAAG,iBACHxC,MAAM,aAEL,UAbT,6DAsBf6oB,GACG,kBAAChL,GAAA,EAAD,CACIva,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1C,KAAMkc,EACNc,iBAAkB,IAClB5c,QAAS,kBAAM+b,GAAU,IACzB5E,QACI,0BAAMhV,GAAG,cAAT,gCAEI,6BACCwlB,EAAe/L,YAMhC,kBAACY,GAAD,CACI5c,KAAMiD,EAAM4D,SACZ1C,QAASlB,EAAMzD,YACf6R,QAASiK,M,ynBC/XzB,IAAMjd,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACnC2qB,QAAS,CACLpqB,SAAU,WACVqT,IAAK,OACLC,MAAO,MAEPrK,OAAQxJ,EAAMI,QAAQ,GACtB+K,SAAU,KAEdvD,MAAO,CACHnH,QAAST,EAAMI,QAAQ,GACvBoJ,OAAQxJ,EAAMI,QAAQ,GACtBS,aAAc,IAElB6G,MAAO,CACH9G,gBAAiBZ,EAAM0F,QAAQgC,MAAMjC,MAEzCmlB,QAAS,CACLhqB,gBAAiBiqB,KAAM,MAE3BvoB,KAAM,CACF2S,QAAS,GACT9P,YAAanF,EAAMI,QAAQ,GAC3BM,SAAU,IAEdsY,QAAS,CACL1G,QAAS,OACTtJ,WAAY,aAId6J,GAAkB,kBACpB,kBAAC,WAAD,KACI,kBAACmK,GAAA,EAAD,CAAahZ,GAAG,cAAhB,QACA,kBAACiZ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,yFAGA,kBAACA,GAAA,EAAD,uDAKJ,kBAACF,GAAA,EAAD,CAAahZ,GAAG,cAAhB,gBACA,kBAACiZ,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,+BACA,kBAACA,GAAA,EAAD,0DAON4N,GAAY,CACd,CAAErW,MAAO,qCAAsCrS,KAAM,WACrD,CAAEqS,MAAO,sCAAuCrS,KAAM,aACtD,CAAEqS,MAAO,mCAAoCrS,KAAM,SACnD,CAAEqS,MAAO,kCAAmCrS,KAAM,QAClD,CACIqS,MAAO,sDACPrS,KAAM,SAId,SAAS2oB,GAAQrmB,GACb,IAAM1E,EAAQwF,eACRtE,EAAUpB,KACZkrB,EAAkB,kDACK,SAAvBhrB,EAAM0F,QAAQC,OACdqlB,EAAkB,iDALF,IAQd/a,EAA8BvL,EAA9BuL,SAAUG,EAAoB1L,EAApB0L,gBARI,EAWMhP,mBAAS,CAC/B2c,OAAQ,CAAE/Z,GAAI,MACdgnB,gBAAiBA,EACjB9e,SAAU8e,EACVC,iBAAkB,KAfF,mBAWb5Z,EAXa,KAWN+F,EAXM,KAkBhB/F,EAAM2Z,kBAAoBA,IAEtB3Z,EAAMnF,WAAa8e,EACnB5T,EAAS,MACF/F,EADC,CAEJ2Z,gBAAiBA,EACjB9e,SAAU8e,KAGd5T,EAAS,MACF/F,EADC,CAEJ2Z,gBAAiBA,MA7BT,MAkCoB5pB,mBAAS,IAlC7B,mBAkCb8pB,EAlCa,KAkCCC,EAlCD,OAoCY/pB,mBADX,CAAEyM,KAAM,CAAC,KAnCV,mBAoCbzB,EApCa,KAoCHgf,EApCG,OAqCoBhqB,oBAAS,GArC7B,mBAqCb8iB,EArCa,KAqCCC,EArCD,OAsCsB/iB,mBAAS,CAAEK,MAAM,EAAO4pB,IAAK,KAtCnD,mBAsCbC,EAtCa,KAsCEC,EAtCF,KA2EpBlb,YAASZ,GAAsB,CAC3B+B,UAAW,CAAExN,GAAIqN,EAAM0M,OAAO/Z,IAC9BsM,YAtCuB,SAAAC,GAEvB,GADApC,QAAQC,IAAI,kBACPmC,GAASA,EAAKwN,OAAnB,CACAjS,EAAYyE,EAAKwN,OAAOqM,aAAatB,MAAMlmB,IAAI,SAAAY,GAAI,OAAIA,EAAKylB,OAG5D,IADA,IAAIuC,EAAa,GACRle,EAAI,EAAGA,EAAIxB,EAAUS,OAAQe,IAC9BxB,EAAUwB,GAAG4B,SACbsc,EAAWvd,KACPgB,GAAqBnD,EAAUwB,IAAIyB,KAAK,SAAAvB,GAAW,IACzCR,EAAuBQ,EAAvBR,SAAUpD,EAAa4D,EAAb5D,SAChB,IAAIoD,EAAStF,MAaT,OANe,MACRkC,EADQ,CAEXsB,OAAO,EACPmB,OAAQW,EAASK,QAAQ,GAAGjB,SAASC,OACrCC,eAAe,IAVnB6B,QAAQC,IAAIpB,EAAStF,OACrB6jB,EAAiB,CACb9pB,MAAM,EACN4pB,IAAK,+BAe7B7c,QAAQid,IAAID,GAAYzc,KAAK,SAAAvB,GACzB2d,EAAgB3d,GAChB2W,GAAgB,OAOpBzT,QAAS,SAAAhJ,GACD2J,EAAM0M,OAAO/Z,GAAK,IAClBunB,EAAiB,CAAE9pB,MAAM,EAAM4pB,IAAK,yBACpCld,QAAQC,IAAI1G,OAKxB,IAAIoE,EAAY,GAEV4f,EAAe,SAAA7nB,GACjB,GAAIA,EAAMiW,OAAOrF,QAAUpD,EAAM0M,OAAjC,CAMA,GAJ0B,WAAtBla,EAAMiW,OAAO1X,MACb+oB,EAAgB,IAGM,qBAAtBtnB,EAAMiW,OAAO1X,MACc,OAAvByB,EAAMiW,OAAOrF,MAAgB,CAC7B,IAAIkX,EAAY9nB,EAAMiW,OAAOrF,MAAMpI,OAC/Bsf,IAAcvf,EAASC,SACvBsf,EAAYA,EAAU/oB,IAAI,SAAAgpB,GAAK,MAAI,UAAaA,KAEpDR,EAAY,CACR/e,OAAQsf,IAEZ9nB,EAAMiW,OAAOrF,MAAMnI,eAAgB,EAG3C8K,EAAS,MACF/F,EADC,eAEHxN,EAAMiW,OAAO1X,KAAOyB,EAAMiW,OAAOrF,WAI1C,OACI,kBAAC8E,GAAA,EAAD,CAAOxX,UAAWb,EAAQ0G,MAAO9B,UAAW,IACxC,kBAACgD,GAAA,EAAD,CAAMC,WAAS,GACX,kBAAC,GAAD,CACI4C,aAAW,EACXO,SAAUmF,EAAMnF,SAChBE,SAAUA,EACVD,eAAgB,CACZjD,OAAQ,OACRhJ,MAAO,QACPK,SAAU,WACVO,OAAQ,EACRD,aAAc,IAElBiL,UAAWof,KAInB,kBAACpiB,GAAA,EAAD,CACIC,WAAS,EACT4B,MAAI,EACJC,GAAI,EACJwP,GAAI,EACJrY,UAAWb,EAAQypB,QACnB1hB,QAAQ,aAENmH,GACE,kBAACtH,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC2O,GAAA,EAAD,CAAOxX,UAAWb,EAAQ0G,OACtB,kBAAC6R,GAAA,EAAD,CACIxO,WAAS,EACT0O,MAAM,SACNzT,QAAQ,WACRuO,MAAOpD,EAAM0M,QAAU,GACvB+B,QAAM,EACNjG,SAAU6R,EACVnB,YAAa,CACTnoB,KAAM,SACNooB,WAAW,IAGdva,EAASrN,IAAI,SAAA6nB,GAAG,OACb,kBAACnmB,GAAA,EAAD,CAAUmQ,MAAOgW,EAAKznB,IAAKynB,EAAIzmB,IAC1BymB,EAAIpN,iBAO7B,kBAACvU,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC2O,GAAA,EAAD,CAAOxX,UAAWb,EAAQ0G,OACtB,kBAAC6R,GAAA,EAAD,CACIxO,WAAS,EACT0O,MAAM,YACNzT,QAAQ,WACRuO,MAAOpD,EAAMnF,SACb4T,QAAM,EACNjG,SAAU6R,EACVnB,YAAa,CACTnoB,KAAM,WACNooB,WAAW,IAGf,kBAAClmB,GAAA,EAAD,CAAUmQ,MAAOuW,GAAjB,WACCF,GAAUloB,IAAI,SAAAtC,GAAK,OAChB,kBAACgE,GAAA,EAAD,CAAUmQ,MAAOnU,EAAMmU,MAAOzR,IAAK1C,EAAMmU,OACpCnU,EAAM8B,WAO1B8oB,EAAa3e,OAAS,GACnB,kBAACzD,GAAA,EAAD,CAAM6B,MAAI,EAACC,GAAI,IACX,kBAAC2O,GAAA,EAAD,CAAOxX,UAAWb,EAAQ0G,OACtB,kBAAC6R,GAAA,EAAD,CACIxO,WAAS,EACT0O,MAAM,UACNzT,QAAQ,WACRuO,MAAOpD,EAAM4Z,kBAAoB,GACjCnL,QAAM,EACNjG,SAAU6R,EACVnB,YAAa,CACTnoB,KAAM,mBACNooB,WAAW,IAGdU,EAAatoB,IAAI,SAAAgH,GAAQ,OACtB,kBAACtF,GAAA,EAAD,CACImQ,MAAO7K,EACP5G,IAAK4G,EAAS5F,IAEb4F,EAASxH,YAStC,kBAACic,GAAD,CACI5c,KAAMiD,EAAM4D,SACZ1C,QAASlB,EAAMzD,YACf6R,QAASD,KAGb,kBAAC2L,GAAA,EAAD,CACIva,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1C,KAAMyiB,EACNzF,iBAAkB,IAClB5c,QAAS,SAAAC,GAAC,OAAIqiB,GAAgB,KAE9B,kBAAC0H,GAAA,EAAD,CACI9pB,UAAWb,EAAQ0pB,QACnBkB,mBAAiB,qBACjB9S,QACI,0BACIhV,GAAG,qBACHjC,UAAWb,EAAQ8X,SAEnB,kBAAC,KAAD,CAAiBjX,UAAWb,EAAQoB,OACnC4oB,EAAa3e,OALlB,wBAWZ,kBAACiS,GAAA,EAAD,CACIva,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhB1C,KAAM6pB,EAAc7pB,KACpBgd,iBAAkB,IAClB5c,QAAS,SAAAC,GAAC,OAAIypB,EAAiB,CAAE9pB,MAAM,EAAO4pB,IAAK,OAEnD,kBAACQ,GAAA,EAAD,CACI9pB,UAAWb,EAAQwG,MACnBokB,mBAAiB,iBACjB9S,QACI,0BAAMhV,GAAG,iBAAiBjC,UAAWb,EAAQ8X,SACzC,kBAAC,KAAD,CAAWjX,UAAWb,EAAQoB,OAC7BgpB,EAAcD,SAS5B,gBAAA3mB,GAAK,OAAI,kBAACmL,GAAD,iBAAwBnL,EAAxB,CAA+B+D,MAAOsiB,OCrR/CgB,OA9Df,SAAarnB,GACT,OACI,kBAAC,IAAD,KACI,kBAACkE,EAAA,EAAD,MACA,6BACI,kBAAC,IAAD,KAGI,kBAAC,GAAD,CACIojB,OAAK,EACL3pB,KAAK,IACLkD,SAAUgkB,GACV5R,aAAW,IAGf,kBAAC,IAAD,CAAOqU,OAAK,EAAC3pB,KAAK,UAAUY,UAAWgV,KACvC,kBAAC,IAAD,CAAO+T,OAAK,EAAC3pB,KAAK,WAAWY,UAAWmY,KACxC,kBAAC,IAAD,CAAO4Q,OAAK,EAAC3pB,KAAK,WAAWY,UAAW6Z,KAGxC,kBAAC,GAAD,CACIkP,OAAK,EACL3pB,KAAK,qBACLkD,SAAUijB,KAEd,kBAAC,GAAD,CACIwD,OAAK,EACL3pB,KAAK,qBACLkD,SAAUojB,KAEd,kBAAC,GAAD,CACIqD,OAAK,EACL3pB,KAAK,kBACLkD,SAAU0mB,KAEd,kBAAC,GAAD,CACID,OAAK,EACL3pB,KAAK,uBACLkD,SAAUkjB,KAId,kBAAC,GAAD,CACIuD,OAAK,EACL3pB,KAAK,kBACLkD,SAAU4X,KAId,kBAAC,GAAD,CACI6O,OAAK,EACL3pB,KAAK,QACLkD,SAAUwlB,KAGd,kBAAC,IAAD,CAAO9nB,UAAWimB,S,ujBC/DtC,IAAMgD,GAAWC,YAAe,CAC5BzsB,IAAKD,EAAOC,MAGV0sB,GAAWC,YAAW,SAACC,EAAD,GAAqB,IAAfpG,EAAc,EAAdA,QAExBvN,EAAQzQ,aAAaC,QAAQ/I,GAEnC,MAAO,CACH8mB,QAAQ,MACDA,EADA,CAEHqG,cAAe5T,EAAK,cAAUA,GAAU,QAiB9C6T,GAAS,IAAIC,IAAa,CAC5BC,KAAMN,GAASO,OAAOT,IACtBU,MAAO,IAAIC,IACXC,eAfmB,CACnBC,WAAY,CACRhE,YAAa,WACbiE,YAAa,OAEjB1e,MAAO,CACHya,YAAa,WACbiE,YAAa,UAYrBC,IAASpV,OACL,kBAAC,IAAD,CAAgB2U,OAAQA,IACpB,kB/CpCO,SAAc9nB,GAAQ,IAAD,SACUtD,oBAAS,GADnB,mBACzBvC,EADyB,KACVquB,EADU,OAER9rB,mBAAS,IAFD,mBAEzBtC,EAFyB,KAEnBquB,EAFmB,OAGShU,YAAYvZ,GAHrB,mBAGzBwtB,EAHyB,YAGX1lB,EAHW,EAGXA,MAAOiJ,EAHI,EAGJA,QAEtB3R,EAAoB,sCAAG,WAAOquB,EAAWC,GAAlB,SAAArc,EAAA,qEAInBmc,EAAY,CAAE5b,UAAW,CAAEmH,MAAO0U,KAAete,KAAK,SAACwB,GACzDgd,EAAWhd,GACP+c,GACAA,MAELjH,MAAM,SAACxN,GAEN3Q,aAAa9I,GAAc,GAC3B8tB,GAAiB,GACbI,GACAA,MAdiB,WAmBrB5lB,EAnBqB,uBAoBrByG,QAAQzG,MAAMA,GApBO,0BAwBrBiJ,GACAxC,QAAQC,IAAI,cAzBS,yCAAH,wDA8BpBmf,EAAa,SAAChd,GAEhB,IACMzR,EAAO,CACT0H,SAFa+J,EAAKA,KAAKid,YAAYC,QAAQjnB,UAI/C0mB,GAAiB,GACjBC,EAAQruB,IAaN4uB,EAAoB,CACtB7uB,gBACAC,OACAC,cAbkB,WAClB,EAAKmZ,QAAQyV,UAAU,KAAM,UAa7B3uB,qBAAsBA,EACtBC,OAXW,WACXiuB,GAAiB,GACjBC,EAAQ,IACRjlB,aAAa9I,GAAc,KAW/B,OACI,kBAACF,EAAD,CAAcuV,MAAOiZ,GAChBhpB,EAAM6D,W+C7BX,KACI,kBAAC,GAAD,QAGR+Z,SAASC,eAAe,SlDyEtB,kBAAmBqL,WACrBA,UAAUC,cAAcC,MAAM/e,KAAK,SAAAgf,GACjCA,EAAaC,iB","file":"static/js/main.2daf4556.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\n// Component that allows for Authentication throughout the application\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        \n        // const token = localStorage.getItem(AUTH_TOKEN)\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            setAuthenticated(false)\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.error(error);\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Loading...\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        const username = data.data.verifyToken.payload.username\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        setAuthenticated(false);\n        setUser({});\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    makeStyles,\n    Drawer,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon\n} from '@material-ui/core'\n\nimport {\n    Home,\n    Group,\n    Create,\n    Map,\n    Apps,\n    AccountCircle,\n    Help\n} from '@material-ui/icons'\n\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 'auto',\n        marginTop: theme.spacing(5)\n    }\n}))\n\nconst ComingSoon = () => {\n    return (\n            <span style={{\n                position: \"absolute\",\n                marginTop: \"15px\",\n                marginLeft: \"2px\",\n                padding: \"1px\",\n                fontSize: \"10px\",\n                color: \"white\",\n                backgroundColor: \"#00BCD4\",\n                borderRadius: \"4px\",\n                zIndex: 2\n            }}>\n                Coming Soon\n            </span>\n    )\n}\n\nexport default ({ drawerOpen, setDrawerOpen, setHelpOpen }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Drawer\n                anchor='left'\n                open={drawerOpen}\n                onClose={e => setDrawerOpen(false)}\n            >\n                <div\n                    className={classes.drawer}\n                    role='presentation'\n                    onClick={e => setDrawerOpen(false)}\n                    onKeyDown={e => setDrawerOpen(false)}\n                >\n                    <List>\n                        {[\n                            { name: 'Home', path: '/', icon: Home },\n                            {\n                                name: 'Create Family',\n                                path: '/family/create/',\n                                icon: Group\n                            },\n                            {\n                                name: 'Manage Artefacts',\n                                path: '/artefacts/manage/',\n                                icon: Apps\n                            },\n                            {\n                                name: 'Create Artefact',\n                                path: '/artefacts/create/',\n                                icon: Create\n                            },\n                            { name: 'Artefact Map', path: '/map/', icon: Map }\n                        ].map(({ name, path, icon: Icon }) => (\n                            <ListItem\n                                button\n                                key={path}\n                                component={RouterLink}\n                                to={path}\n                                style={{ borderRadius: 10 }}\n                            >\n                                <ListItemIcon>\n                                    <Icon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={name}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n\n            <IconButton\n                edge='start'\n                color='inherit'\n                aria-label='menu'\n                onClick={() => setHelpOpen(true)}\n            >\n                <Help />\n            </IconButton>\n\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose} disabled>\n                    Profile\n                    <ComingSoon />\n                </MenuItem>\n                <MenuItem onClick={handleClose} disabled>\n                    Settings\n                    <ComingSoon />\n                </MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Toolbar,\n    AppBar,\n    makeStyles,\n    Typography,\n} from '@material-ui/core'\n// import MenuIcon from '@material-ui/icons/Menu'\n\nimport { Home, Menu, Brightness4, Brightness7 } from '@material-ui/icons'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    iconButton: {\n        marginRight: theme.spacing(1)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.iconButton}\n                        edge='start'\n                        color='inherit'\n                        aria-label='menu'\n                        onClick={e => setOpen(true)}\n                    >\n                        <Menu />\n                    </IconButton>\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='home'\n                        component={RouterLink}\n                        to='/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant='h6' className={classes.title} noWrap>\n                        AMS\n                    </Typography>\n\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='theme-toggle'\n                        onClick={props.onToggleDarkTheme}\n                    >\n                        {!dark ? <Brightness4 /> : <Brightness7 />}\n                    </IconButton>\n\n                    {loggedIn ? (\n                        <LoggedInBar\n                            username={username}\n                            drawerOpen={open}\n                            setDrawerOpen={setOpen}\n                            setHelpOpen={props.setHelpOpen}\n                        />\n                    ) : (\n                        <NotLoggedInBar />\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { teal, deepPurple, indigo } from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst typography = {\n    fontFamily: 'Dosis, Roboto, sans-serif',\n    h1: {\n        fontFamily: 'Roboto, sans-serif',\n        fontWeight: 100,\n    },\n    h2: {\n        fontFamily: 'Roboto, sans-serif',\n        fontWeight: 100,\n    },\n    h3: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n    h4: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n    h5: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n    h6: {\n        fontFamily: 'Roboto, sans-serif'\n    }\n}\n\n// const typography = {\n//     fontFamily: 'Roboto, Dosis, sans-serif',\n//     h1: {\n//         fontFamily: 'Dosis, sans-serif'\n//     },\n//     h2: {\n//         fontFamily: 'Dosis, sans-serif'\n//     },\n//     h3: {\n//         fontFamily: 'Dosis, sans-serif'\n//     },\n//     h4: {\n//         fontFamily: 'Dosis, sans-serif'\n//     },\n//     h5: {\n//         fontFamily: 'Dosis, sans-serif'\n//     },\n//     h6: {\n//         fontFamily: 'Dosis, sans-serif'\n//     }\n// }\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        main: deepPurple['A100']\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nlet lightTheme = createMuiTheme({\n    palette: lightPalette,\n    type: 'light',\n    typography: typography\n})\nlightTheme = responsiveFontSizes(lightTheme)\n\n\nlet darkTheme = createMuiTheme({\n    palette: darkPalette,\n    type: 'dark',\n    typography: typography\n})\ndarkTheme = responsiveFontSizes(darkTheme)\n\n\n\nexport default props => {\n    // Get the user's theme from local storage. This will clear if localStorage.clear()\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    // Called on click of dark theme button\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    const [helpOpen, setHelpOpen] = useState(false)\n    const children = React.Children.map(props.children, child => {\n        return React.cloneElement(child, {\n            helpOpen: helpOpen,\n            setHelpOpen: setHelpOpen\n        })\n    })\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header\n                onToggleDarkTheme={toggleDarkTheme}\n                setHelpOpen={setHelpOpen}\n            />\n            {children}\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { CircularProgress, Grid } from '@material-ui/core'\n\n\n// So user knows the page is loading, present a nice spinny circle\nexport default () => (\n    <Grid\n        container\n        alignItems='center'\n        justify='center'\n        style={{ height: '90vh' }}\n    >\n        <CircularProgress />\n    </Grid>\n)\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { config } from '../constants'\n\nvar Trianglify = require('trianglify')\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        // maxWidth: 345,\n        borderRadius: 10\n        // height: '100%'\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 170\n    }\n}))\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ artefact }) {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const { upload, name, description, id, admin } = artefact\n    const [patternURI, setPatternURI] = useState('')\n\n    var mediaURI = config.mediaRoot + upload\n    if (upload === 'False' && !patternURI) {\n        // use primary colour of theme as a seed for the random colour generation\n        var pattern = Trianglify({\n            width: 500,\n            height: 500,\n            x_colors: [theme.palette.primary.dark, theme.palette.secondary.light],\n            y_colors: 'random'\n        })\n        setPatternURI(pattern.png())\n    }\n\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardMedia\n                className={classes.media}\n                image={patternURI ? patternURI : mediaURI}\n                title={name}\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={9}>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Typography\n                            gutterBottom\n                            variant='overline'\n                            component='h2'\n                            noWrap\n                            align='right'\n                        >\n                            {admin.username}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Button\n                    size='small'\n                    fullWidth\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                {/* <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button> */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport './popup.css'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        zIndex: '50 !important',\n        minWidth: '300px'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const classes = useStyles()\n\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    const handleSetOpenArtefact = id => {\n        if (openArtefactID === id) {\n            setOpenArtefactID('')\n        } else {\n            setOpenArtefactID(id)\n        }\n    }\n\n    const onMapClick = () => {\n        handleSetOpenArtefact('')\n        if (props.onClick) {\n            props.onClick()\n        }\n    }\n\n    return (\n        <MapType\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={onMapClick}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, id } = artefact\n                if (initPopupOpen) {\n                    artefact.initPopupOpen = false\n                    setOpenArtefactID(id)\n                }\n                if (!center || !center.length) {\n                    return null\n                }\n                return (\n                    <Fragment key={id}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => handleSetOpenArtefact(id)}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup && openArtefactID === id && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                                className={classes.popup}\n                            >\n                                <ArtefactCard artefact={artefact} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </MapType>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                        upload\n                        admin {\n                            username\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`\n\nexport const DELETE_ARTEFACT_MUTATION = gql`\n    mutation ArtefactDelete($id: ID!) {\n        artefactDelete(id: $id) {\n            ok\n        }\n    }\n`\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const {loading, error:fetchError, data } = useQuery(ARTEFACT_DETAIL, {\n        onError: error => console.error(\"Error fetching artefact: \", error),\n        variables: {\n            id: rest.match.params.id\n        },\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n        fetchError: fetchError\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'flex-start',\n        textAlign: 'left'\n    },\n    fieldTitle: {\n        textAlign: 'left',\n        marginLeft: theme.spacing(1)\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    editLinkButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1)\n    },\n    deleteButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.error.main\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper + '!important',\n        height: '100%',\n        borderRadius: 10,\n        alignItems: 'flex-start !important'\n    },\n    dropzoneText: {\n        fontSize: 'medium !important'\n        // margin: '0 !important'\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    },\n    switch: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    }\n}))\n","import React from 'react'\nimport { Button, Dialog, DialogActions } from '@material-ui/core'\n\nexport default ({ open, setOpen, content: MyDialogContent, ...rest }) => (\n    <Dialog\n        fullWidth\n        maxWidth='sm'\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby='help-title'\n    >\n        <MyDialogContent {...rest} />\n        <DialogActions>\n            <Button onClick={() => setOpen(false)} color='primary'>\n                Close\n            </Button>\n        </DialogActions>\n    </Dialog>\n)\n","import React, { useState, useEffect } from 'react'\nimport Particles from 'react-particles-js'\nimport { Button } from '@material-ui/core'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Typist from 'react-typist'\nimport { Link as RouterLink } from 'react-router-dom'\n\n/*\nThe page that users come to when they first encounter our app. It's a marketing page\n\n*/\nfunction HomePageButton(props) {\n    const { linkTo } = props\n    return (\n        <Button\n            style={{\n                color: '#f0f0f0',\n                padding: '12px',\n                margin: '4px',\n                marginTop: '8px'\n            }}\n            component={RouterLink}\n            to={linkTo}\n        >\n            {props.children}\n        </Button>\n    )\n}\n\nfunction LandingPage(props) {\n    // Help the landing page be mobile friendly\n    let landingTheme = createMuiTheme()\n    landingTheme = responsiveFontSizes(landingTheme)\n\n    // Allow for looping of the typing animation\n    const [typing, setTyping] = useState(true)\n    useEffect(() => {\n        setTyping(true)\n    }, [typing])\n\n    const typingDone = () => {\n        setTyping(false)\n    }\n\n    return (\n        <div>\n            <ThemeProvider theme={landingTheme}>\n                <link\n                    href='https://fonts.googleapis.com/css?family=Dosis&display=swap'\n                    rel='stylesheet'\n                ></link>\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: '20px',\n                        zIndex: 4\n                    }}\n                >\n                    <HomePageButton linkTo='/signup'>Sign up</HomePageButton>\n                    <HomePageButton linkTo='/login'>Login</HomePageButton>\n                </div>\n                <Typography\n                    theme={landingTheme}\n                    variant='h1'\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '10%',\n                        zIndex: 3,\n                        position: 'relative',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    Artefact Management System\n                </Typography>\n                <Typography\n                    variant='h2'\n                    theme={landingTheme}\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '1%',\n                        zIndex: 3,\n                        position: 'relative',\n                        top: '8rem',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    {typing ? (\n                        <Typist\n                            cursor={{ show: false }}\n                            onTypingDone={typingDone}\n                        >\n                            <Typist.Delay ms={400} />\n                            <span>Connecting you to your family</span>\n                            <span> and your familys history.</span>\n                            <Typist.Backspace count={10} delay={200} />\n                            <span>'s history.</span>\n                            <Typist.Backspace count={56} delay={5000} />\n                        </Typist>\n                    ) : (\n                        ''\n                    )}\n                </Typography>\n                <Particles\n                    style={{\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        background:\n                            'linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)'\n                    }}\n                    params={{\n                        particles: {\n                            number: {\n                                value: 120,\n                                density: {\n                                    enable: true,\n                                    value_area: 800\n                                }\n                            },\n                            color: {\n                                value: '#ffffff'\n                            },\n                            shape: {\n                                type: 'circle',\n                                stroke: {\n                                    width: 0,\n                                    color: '#FFFFFF'\n                                },\n                                polygon: {\n                                    nb_sides: 5\n                                },\n                                image: {\n                                    src: 'img/github.svg',\n                                    width: 100,\n                                    height: 100\n                                }\n                            },\n                            opacity: {\n                                value: 0.44093831673801875,\n                                random: false,\n                                anim: {\n                                    enable: false,\n                                    speed: 1,\n                                    opacity_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            size: {\n                                value: 4.008530152163807,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 40,\n                                    size_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            line_linked: {\n                                enable: true,\n                                distance: 150,\n                                color: '#ffffff',\n                                opacity: 0.4,\n                                width: 1\n                            },\n                            move: {\n                                enable: true,\n                                speed: 6,\n                                direction: 'none',\n                                random: false,\n                                straight: false,\n                                out_mode: 'out',\n                                bounce: false,\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200\n                                }\n                            }\n                        },\n                        interactivity: {\n                            detect_on: 'canvas',\n                            events: {\n                                onhover: {\n                                    enable: true,\n                                    mode: 'grab'\n                                },\n                                onclick: {\n                                    enable: true,\n                                    mode: 'push'\n                                },\n                                resize: true\n                            },\n                            modes: {\n                                grab: {\n                                    distance: 400,\n                                    line_linked: {\n                                        opacity: 1\n                                    }\n                                },\n                                bubble: {\n                                    distance: 400,\n                                    size: 40,\n                                    duration: 2,\n                                    opacity: 8,\n                                    speed: 3\n                                },\n                                repulse: {\n                                    distance: 200,\n                                    duration: 0.4\n                                },\n                                push: {\n                                    particles_nb: 4\n                                },\n                                remove: {\n                                    particles_nb: 2\n                                }\n                            }\n                        },\n                        retina_detect: true\n                    }}\n                ></Particles>\n            </ThemeProvider>\n        </div>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport authContext from '../authContext'\nimport { AUTH_TOKEN } from '../constants'\nimport { Loading, Layout } from './'\nimport LandingPage from '../views/LandingPage'\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({ checkAuthenticated: true })\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN)\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                this.setState({ checkAuthenticated: true })\n            })\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated)\n    }\n}\n\nconst UnwrappedPrivateRoute = ({\n    loggedIn: LoggedIn,\n    loggedOut,\n    path,\n    landingPage,\n    ...rest\n}) => {\n    const context = useContext(authContext)\n    const authenticated = context.authenticated\n\n    if (!loggedOut) {\n        loggedOut = '/login'\n    }\n\n    console.log('Authenticated: ', authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated =>\n                checkAuthenticated === false ? (\n                    <Loading />\n                ) : (\n                    <Route\n                        {...rest}\n                        render={props => {\n                            if (authenticated) {\n                                return <LoggedIn {...props} {...rest} />\n                            } else if (!authenticated && landingPage) {\n                                return <LandingPage />\n                            } else {\n                                return <Redirect to={loggedOut} />\n                            }\n                        }}\n                    />\n                )\n            }\n        </WaitWraper>\n    )\n}\n\nexport const PrivateRoute = props => (\n    <Layout>\n        <UnwrappedPrivateRoute {...props} />\n    </Layout>\n)\n","import React, { useState, useContext } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper,\n    makeStyles\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nfunction Login({ history }) {\n    const context = useContext(authContext)\n    const classes = useStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={\n                        invalidCred ? 'Please enter valid credentials' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='secondary'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nconst CenterWrapping = props => (\n    <Grid\n        container\n        spacing={0}\n        direction='column'\n        alignItems='center'\n        justify='center'\n        style={{ minHeight: '80vh' }}\n    >\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n            <Login {...props} />\n        </Grid>\n    </Grid>\n)\n\nexport default props => (\n    <Layout>\n        <CenterWrapping {...props} />\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper,\n    makeStyles\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Layout } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = useStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='secondary'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nconst CenterWrapping = props => (\n    <Grid\n        container\n        spacing={0}\n        direction='column'\n        alignItems='center'\n        justify='center'\n        style={{ minHeight: '80vh' }}\n    >\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n            <Signup {...props} />\n        </Grid>\n    </Grid>\n)\n\nexport default props => (\n    <Layout>\n        <CenterWrapping {...props} />\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState, Fragment } from 'react'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Grid,\n    Paper,\n    FormControl,\n    Snackbar\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { HelpDialog } from '../components'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nconst HelpContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Create a family by filling out the form and clicking \"create\"\n            </DialogContentText>\n            <DialogContentText>\n                On creation you will receive a join code which will allow others\n                to join your new family\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n    const [copied, setCopied] = useState(false)\n\n    const _completed = async data => {\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    // back to const once done\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    // Call the mutation on form submission\n    const submitForm = async event => {\n        event.preventDefault()\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n        props.history.push(`/`)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid container spacing={1} className={classes.outerContainer}>\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4'>Create Family</Typography>\n\n                    <Typography variant='subtitle1'>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e =>\n                                    console.error(\n                                        'The admin value was changed, how is this even possible?'\n                                    )\n                                }\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={HelpContent}\n            />\n\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle onClose={handleClose}>\n                    Begin adding members to '{familyName}'!\n                </DialogTitle>\n                <DialogContent>\n                    <Typography align='left'>\n                        You can now add artefacts to this family. To view them\n                        simply select '{familyName}' from the Select Family\n                        dropdown on your home dashboard.\n                        <br />\n                        Begin getting members to join your family! Simply share\n                        the code below to your family members, get them to sign\n                        up and then they can join!\n                        <br />\n                        <br />\n                        {joinCode} &nbsp;\n                        <CopyToClipboard\n                            text={joinCode}\n                            onCopy={() => setCopied(true)}\n                        >\n                            <Button variant='outlined'>Copy</Button>\n                        </CopyToClipboard>\n                        <br />\n                        <br />\n                        (This code will also be available on the home page)\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color='primary' autoFocus>\n                        Continue\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={copied}\n                autoHideDuration={2000}\n                onClose={() => setCopied(false)}\n                message={\n                    <span id='message-id'>\n                        Join code copied to clipboard\n                        <br />\n                        {joinCode}\n                    </span>\n                }\n            />\n        </form>\n    )\n}\n\nexport default props => (\n    <Fragment>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={11} md={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\n\nimport { Button, FormHelperText } from '@material-ui/core'\n\nexport default ({ noErrors, ...rest }) => (\n    <Fragment>\n        <Button\n            {...rest}\n            color='secondary'\n            variant='contained'\n            type='submit'\n        >\n            Save\n        </Button>\n        {!noErrors && (\n            <FormHelperText error={!noErrors}>\n                Unknown Error Occurred\n            </FormHelperText>\n        )}\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\nimport { Grid, Typography, Button } from '@material-ui/core'\nimport CreateButton from './CreateButton'\nimport { withGetScreen } from 'react-getscreen'\n\nexport default withGetScreen(\n    ({ states, setters, classes, isAdmin, openDelete, noErrors, isMobile }) => {\n        const { create, edit, view } = states.mode\n        const showEditButton = view && isAdmin\n        const showDeleteButton = edit && isAdmin\n        const showButton = showEditButton || showDeleteButton || create\n        const marginLeftButton = isMobile() ? 18 : 'auto'\n\n        return (\n            <Fragment>\n                {((showButton && !isMobile()) || !showButton) && (\n                    <Grid item>\n                        <div\n                            className={classes.editLinkButton}\n                            style={{\n                                marginRight: 'auto',\n                                // width: '65px',\n                                height: '20px',\n                                visibility: 'hidden'\n                            }}\n                        />\n                    </Grid>\n                )}\n                <Grid item>\n                    <Typography variant='h4' align='center'>\n                        {create && 'Create'} {edit && 'Edit'} {view && 'View'}{' '}\n                        Artefact\n                    </Typography>\n                </Grid>\n                {!showButton && (\n                    <Grid item>\n                        <div\n                            className={classes.editLinkButton}\n                            style={{\n                                marginLeft: 'auto',\n                                // width: '65px',\n                                height: '20px',\n                                visibility: 'hidden'\n                            }}\n                        />\n                    </Grid>\n                )}\n                {showButton && (\n                    <Grid item>\n                        {showEditButton && (\n                            <Button\n                                color='secondary'\n                                variant='contained'\n                                onClick={e => setters.setMode({ edit: true })}\n                                className={classes.editLinkButton}\n                                style={{ marginLeft: marginLeftButton }}\n                            >\n                                Edit\n                            </Button>\n                        )}\n                        {showDeleteButton && (\n                            <Button\n                                color='default'\n                                variant='contained'\n                                onClick={openDelete}\n                                className={classes.editLinkButton}\n                                style={{ marginLeft: marginLeftButton }}\n                            >\n                                Delete\n                            </Button>\n                        )}\n\n                        {create && (\n                            <CreateButton\n                                noErrors={noErrors}\n                                className={classes.editLinkButton}\n                                style={{ marginLeft: marginLeftButton }}\n                            />\n                        )}\n                    </Grid>\n                )}\n                {create && (\n                    <Grid item xs={12}>\n                        <Typography\n                            variant='subtitle1'\n                            align={isMobile() ? 'left' : 'center'}\n                        >\n                            Artefacts are belongings of the family, enter as\n                            much or as little detail as you like\n                        </Typography>\n                    </Grid>\n                )}\n            </Fragment>\n        )\n    }\n)\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            // style={{ height: '100%' }}\n            // InputProps={{ style: {height: '100%'} }}\n            id='artefact-name'\n            label='Artefact name'\n            variant='outlined'\n            autoFocus={!view}\n            required\n            fullWidth\n            value={state.name || ''}\n            inputProps={{ readOnly: view }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField, MenuItem } from '@material-ui/core'\n\nexport default ({ states, setters, artefactStates, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='state'\n            label='Artefact Condition'\n            variant='outlined'\n            required\n            fullWidth\n            value={state.state || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            select\n            disabled={disabled}\n        >\n            {Object.keys(artefactStates).map(value => {\n                return (\n                    <MenuItem value={artefactStates[value]} key={value}>\n                        {value}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, numFams }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    return (\n        <TextField\n            id='description'\n            label='Description'\n            variant='outlined'\n            required\n            fullWidth\n            multiline\n            value={state.description || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, username }) => {\n    var { state } = states\n    return (\n        <TextField\n            id='artefact-admin'\n            label='Artefact Admin'\n            variant='outlined'\n            required\n            fullWidth\n            value={\n                state.admin && Object.keys(state.admin).length !== 0\n                    ? state.admin.username\n                    : username\n            }\n            inputProps={{\n                readOnly: true\n            }}\n            onChange={e => console.log('admin field was changed')}\n        />\n    )\n}\n","import React from 'react'\n\nimport 'date-fns'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <KeyboardDatePicker\n            disabled={view || disabled}\n            clearable\n            minDate={'1500-01-01'}\n            // variant='inline'\n            inputVariant='outlined'\n            format='dd/MM/yyyy'\n            openTo='year'\n            label='Date (dd/mm/yyyy)'\n            value={state.date}\n            onChange={date => handleSetField(name, date)}\n            KeyboardButtonProps={{\n                'aria-label': 'change date'\n            }}\n        />\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    Switch,\n    FormHelperText,\n    Typography,\n    FormControlLabel,\n    Button\n} from '@material-ui/core'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nexport default ({ states, setters, disabled, name, classes }) => {\n    var { create, edit, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (create || edit) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    Privacy\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.isPublic || false}\n                            onChange={e =>\n                                handleSetField(name, e.target.checked)\n                            }\n                            // edge='end'\n                            disabled={disabled}\n                        />\n                    }\n                    style={{ marginLeft: 3 }}\n                    label='Public'\n                />\n                <FormHelperText className={classes.fieldTitle}>\n                    {state.isPublic\n                        ? 'Viewable by anyone'\n                        : 'Viewable by family members only'}\n                </FormHelperText>\n            </Fragment>\n        )\n    } else if (view && state.isPublic) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    This artefact is public, accessible by link\n                </Typography>\n                <CopyToClipboard text={window.location.href}>\n                    <Button variant='outlined'>Copy Link</Button>\n                </CopyToClipboard>\n            </Fragment>\n        )\n    } else {\n        return null\n    }\n}\n","import React, { Fragment } from 'react'\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Typography\n} from '@material-ui/core'\n\n/*\nHandles the families list as part of an artefact view\nWill only show the artefact as part of the families that you are a part of.\ni.e. Will maintain other family's privacy.\n */\nexport default ({ states, setters, families, disabled, name, classes }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (\n        view &&\n        state.belongsToFamiliesBools &&\n        Object.values(state.belongsToFamiliesBools).filter(value => value)\n            .length === 0\n    ) {\n        return (\n            <Typography variant='h6' className={classes.fieldTitle}>\n                This artefact doesn't belong to any of your families\n            </Typography>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                {!view\n                    ? 'Families the artefact belongs to'\n                    : 'Belongs to your families'}\n            </Typography>\n            <List disablePadding>\n                {families.map(family => {\n                    if (\n                        state.belongsToFamiliesBools &&\n                        (!view || state.belongsToFamiliesBools[family.id])\n                    ) {\n                        return (\n                            <ListItem key={family.id} dense disabled={disabled}>\n                                {!view && (\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge='start'\n                                            checked={\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] || false\n                                            }\n                                            onClick={e =>\n                                                handleSetField(name, {\n                                                    ...state.belongsToFamiliesBools,\n                                                    [family.id]:\n                                                        e.target.checked\n                                                })\n                                            }\n                                            tabIndex={-1}\n                                        />\n                                    </ListItemIcon>\n                                )}\n                                <ListItemText primary={family.familyName} />\n                            </ListItem>\n                        )\n                    }\n                    return null\n                })}\n            </List>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport Image from 'material-ui-image'\nimport { useTheme } from '@material-ui/styles'\n\nimport { config } from '../../../constants'\n\nexport default ({ classes, states, setters, name }) => {\n    const theme = useTheme()\n    var { edit, create, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                Images\n            </Typography>\n            {edit && (\n                <Typography variant='caption' className={classes.fieldTitle}>\n                    Editing coming soon...\n                </Typography>\n            )}\n\n            {create && (\n                <DropzoneArea\n                    initialFiles={state.files || []}\n                    acceptedFiles={['image/*']}\n                    dropzoneText=''\n                    filesLimit={1}\n                    onChange={files => handleSetField(name, files)}\n                    dropzoneClass={classes.dropzone}\n                    classes={{\n                        dropzoneTextStyle: classes.fieldTitle,\n                        dropzoneParagraph: classes.fieldTitle\n                    }}\n                />\n            )}\n            {(view || edit) && state.upload !== 'False' && (\n                <Image\n                    src={config.mediaRoot + state.upload}\n                    loading={<CircularProgress />}\n                    color={theme.palette.background.paper}\n                    imageStyle={{ borderRadius: 10 }}\n                />\n            )}\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    TextField,\n    Grid,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Map } from '../../../components'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    name,\n    handleGeocodeQuery,\n    disabled\n}) => {\n    var { view } = states.mode\n    var {\n        handleSetField,\n        setAddressIsSearchResult,\n        setLocationState,\n        handleSetLocationResult\n    } = setters\n    var { locationState, state } = states\n\n    const theme = useTheme()\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    return (\n        <Fragment>\n            <TextField\n                id='address'\n                label='Address'\n                variant='outlined'\n                fullWidth\n                disabled={disabled}\n                value={state.address || ''}\n                inputProps={{\n                    readOnly: view\n                }}\n                onChange={e => {\n                    handleSetField(name, e.target.value)\n                    if (e.target.value) {\n                        setAddressIsSearchResult(false)\n                    } else {\n                        // allow blank address\n                        setAddressIsSearchResult(true)\n                    }\n                }}\n                error={!!locationState.error}\n                InputProps={{\n                    endAdornment: !view && (\n                        <IconButton\n                            className={classes.iconButton}\n                            aria-label='search'\n                            id='search'\n                            onClick={e =>\n                                handleGeocodeQuery({\n                                    query: state.address,\n                                    initial: false\n                                })\n                            }\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    ),\n                    style: { marginBottom: 3 }\n                }}\n                onKeyDown={e => {\n                    if (e.keyCode === 13 && !view) {\n                        e.preventDefault()\n                        document.getElementById('search').click()\n                    }\n                }}\n                helperText={locationState.error}\n            />\n            <Popover\n                id={locationState.queryResults.length ? 'results' : undefined}\n                open={!!locationState.queryResults.length}\n                anchorEl={document.getElementById('address')}\n                onClose={e =>\n                    setLocationState({\n                        ...locationState,\n                        queryResults: []\n                    })\n                }\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <List component='div' disablePadding>\n                    {locationState.queryResults.map(result => (\n                        <ListItem\n                            key={result.placeName}\n                            button\n                            className={classes.nested}\n                            onClick={e => handleSetLocationResult(result)}\n                        >\n                            <ListItemText primary={result.placeName} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Popover>\n\n            <Grid container style={{ marginTop: 1 }}>\n                <Map\n                    interactive={false}\n                    className={classes.map}\n                    mapState={locationState.mapState}\n                    mapStyle={mapStyle}\n                    containerStyle={{\n                        height: '60vh',\n                        width: '100vw',\n                        borderRadius: 20,\n                        marginTop: 5\n                    }}\n                    artefacts={[\n                        {\n                            center: locationState.mapState.center,\n                            id: -1\n                        }\n                    ]}\n                />\n            </Grid>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\n\nexport default ({ save, cancel, updateErrors, classes }) => {\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            justify='space-evenly'\n            alignItems='center'\n            spacing={1}\n            style={{ marginTop: 1 }}\n        >\n            <Grid item xs={6}>\n                <MyButton onClick={save} name='Save' color='primary' />\n            </Grid>\n            <Grid item xs={6}>\n                <MyButton\n                    onClick={cancel}\n                    name='Cancel'\n                    color='secondary'\n                />\n            </Grid>\n\n            {updateErrors && (\n                <Grid item xs={12}>\n                    <FormHelperText error>\n                        Error Updating Artefact\n                    </FormHelperText>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { FormControl, Paper } from '@material-ui/core'\nimport EditButtons from './EditButtons'\n\nexport default ({\n    child: Child,\n    childProps,\n    name,\n    classes,\n    editButtonProps,\n    ...rest\n}) => {\n    var { beingEdited, states } = childProps\n    var { edit } = states.mode\n    var thisBeingEdited = beingEdited === name\n    var someBeingEdited = edit && !!beingEdited\n    return (\n        <Paper className={classes.paperWrapper} elevation={3}>\n            <FormControl className={classes.formControl} fullWidth>\n                <Child\n                    {...childProps}\n                    disabled={someBeingEdited && !thisBeingEdited}\n                    name={name}\n                    classes={classes}\n                    {...rest}\n                />\n\n                {thisBeingEdited && <EditButtons {...editButtonProps} />}\n            </FormControl>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport {\n    Button,\n    Snackbar,\n    IconButton,\n    ClickAwayListener\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id='message-id'>Edit successful</span>}\n                action={[\n                    <Button\n                        key='view'\n                        color='secondary'\n                        size='small'\n                        onClick={e => viewArtefact(id)}\n                    >\n                        VIEW\n                    </Button>,\n                    <IconButton\n                        key='close'\n                        aria-label='close'\n                        color='inherit'\n                        onClick={() => setOpen(false)}\n                        className={classes.close}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </ClickAwayListener>\n    )\n}\n","import React from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button\n} from '@material-ui/core'\n\nexport default ({ open, setOpen, deleteArtefact, artefact }) => {\n    return (\n        <Dialog\n            fullWidth\n            maxWidth='sm'\n            open={open}\n            onClose={() => setOpen(false)}\n            aria-labelledby='help-title'\n        >\n            <DialogTitle>Delete Artefact</DialogTitle>\n            <DialogContent>\n                <DialogContentText>This cannot be undone</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color='secondary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() =>\n                        deleteArtefact({ variables: { id: artefact.id } })\n                    }\n                    color='primary'\n                >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\n\nexport default ({ mode }) => {\n    const { edit, create, view } = mode\n    return (\n        <Fragment>\n            <DialogTitle id='help-title'>Help</DialogTitle>\n            {create && (\n                <DialogContent>\n                    <DialogContentText>\n                        Create an artefact by filling out the form and clicking\n                        \"save\".\n                    </DialogContentText>\n                    <DialogContentText>\n                        You can assign the artefact to any number of your\n                        families.\n                    </DialogContentText>\n                    <DialogContentText>\n                        The artefact will only be viewable by members of the\n                        selected families, unless the artefact is set to\n                        \"public\".\n                    </DialogContentText>\n                    <DialogContentText>\n                        Only you will be able to edit the artefact after\n                        creation.\n                    </DialogContentText>\n                </DialogContent>\n            )}\n\n            {edit && (\n                <DialogContent>\n                    <DialogContentText>\n                        Edit a field by clicking on it, save and cancel buttons\n                        will appear.\n                    </DialogContentText>\n                </DialogContent>\n            )}\n\n            {view && (\n                <DialogContent>\n                    <DialogContentText>\n                        Here you can view the details of an artefact.\n                    </DialogContentText>\n                    <DialogContentText>\n                        If you are the admin of the artefact, a button labelled\n                        \"edit\" in the top right corner will enable editing mode.\n                    </DialogContentText>\n                </DialogContent>\n            )}\n        </Fragment>\n    )\n}\n","import React, { useContext, useState, Fragment } from 'react'\nimport { withRouter, Link as RouterLink } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport {\n    CssBaseline,\n    Grid,\n    Typography,\n    Link\n} from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport { geocodeQuery, artefactFamilyFormUseStyles, Loading } from '../../components'\n\nimport {\n    Head,\n    Name,\n    State,\n    Description,\n    Admin,\n    Date,\n    Privacy,\n    Families,\n    Images,\n    FieldWrapper,\n    Address,\n    SuccessSnackbar,\n    DeleteDialog,\n    CreateButton,\n    HelpContent\n} from './components'\nimport authContext from '../../authContext'\n\nimport { HelpDialog } from '../../components'\n\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION,\n    DELETE_ARTEFACT_MUTATION\n} from '../../gqlQueriesMutations'\n\nimport { AUTH_TOKEN, config } from '../../constants'\nimport axios from 'axios'\n\nconst FetchArtefactError = () => {\n    return (\n        <Grid\n            container\n            justify='center'\n            spacing={1}\n            style={{\n                marginTop: '2vh'\n            }}\n        >\n            <img\n                style={{\n                    width: '200%'\n                }}\n                src='https://media.tenor.com/images/b10411f7f3a9c5df3ce39a9678eac1dd/tenor.gif'\n                alt='artefact-pic'\n            />\n\n            <Typography\n                variant='h5'\n                style={{\n                    textAlign: 'center',\n                    padding: '2rem'\n                }}\n            >\n                This artefact is not public.\n                <br />\n                You do not have access to view this artefact. Join a family that\n                this artefact is assigned to in order to view it. <br />\n                <Link>\n                    <RouterLink to='/'>Return home</RouterLink>\n                </Link>\n            </Typography>\n        </Grid>\n    )\n}\n\nfunction ArtefactView(props) {\n    // get the mode\n    const [mode, setMode] = useState({\n        create: props.create,\n        edit: props.edit,\n        view: props.view\n    })\n\n    // get families, states, and artefact data\n    var { artefactLoading } = props\n    var { artefactStates, families, fetchError } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors\n    var isAdmin\n    if (!mode.create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        // No artefact returned, e.g. if no permissions\n        isAdmin =\n            !artefactLoading && artefact\n                ? artefact.admin.username === username\n                : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && mode.edit) {\n        setMode({ view: true })\n    }\n\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [deleteOpen, setDeleteOpen] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.error(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (mode.edit || mode.view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families &&\n        artefact\n    ) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (mode.create && families && !state.belongsToFamiliesBools) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null, state: 'OKY' })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (mode.edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n        setMode({ view: true })\n    }\n\n    // send user to home\n    const pushManageArtefactsURL = () => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/manage`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        var id = data.data.artefactCreate.artefact.id\n        pushViewArtefactURL(id)\n    }\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const deleteCompleted = async data => {\n        pushManageArtefactsURL()\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n    const handleDeleteError = async errors => {\n        console.error('Deletion errors occured: ', errors)\n    }\n\n    const createArtefact = async (\n        variables,\n        successCallback,\n        errorCallback\n    ) => {\n        let form_data = new FormData()\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0])\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\n        form_data.append('variables', JSON.stringify(variables))\n        let url = config.uri\n        axios\n            .post(url, form_data, {\n                headers: {\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Transfer-Encoding': 'multipart/form-data'\n                }\n            })\n            .then(res => {\n                successCallback(res.data)\n            })\n            .catch(err => {\n                errorCallback(err)\n            })\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const [deleteArtefact] = useMutation(\n        DELETE_ARTEFACT_MUTATION,\n        {\n            onCompleted: deleteCompleted,\n            onError: handleDeleteError\n        }\n    )\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n        createArtefact(input, handleCreationCompleted, handleCreationError)\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (mode.edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    const noErrors = !creationErrors\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        mode.create ? submitForm(e) : saveChange(e)\n    }\n\n    // if ((mode.edit || mode.view) && dataLoading) {\n    //     return <CircularProgress />\n    // }\n\n    const editButtonProps = {\n        save: saveChange,\n        cancel: cancelEditing,\n        updateErrors: updateErrors,\n        classes: classes\n    }\n\n    const componentProps = {\n        classes: classes,\n        beingEdited: beingEdited,\n        artefactStates: artefactStates,\n        username: context.user.username,\n        families: families,\n        states: {\n            state: state,\n            locationState: locationState,\n            mode: mode\n        },\n        setters: {\n            handleSetField: handleSetField,\n            setMode\n        }\n    }\n\n    const addressProps = {\n        ...componentProps,\n        handleGeocodeQuery: handleGeocodeQuery,\n        setters: {\n            ...componentProps.setters,\n            setLocationState: setLocationState,\n            setAddressIsSearchResult: setAddressIsSearchResult,\n            handleSetLocationResult: handleSetLocationResult\n        }\n    }\n\n    const showPrivacy =\n        !mode.view || (Object.keys(state).length !== 0 && state.isPublic)\n    const components = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: showPrivacy ? Privacy : null, name: 'isPublic' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        {\n            comp:\n                (mode.view && state.upload === 'False') ||\n                state.upload === 'undefined'\n                    ? null\n                    : Images,\n            name: 'files'\n        }\n    ]\n\n    const componentsViewMode = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        { comp: showPrivacy ? Privacy : null, name: 'isPublic' }\n    ]\n    const regularView = !mode.view || state.upload === 'False'\n\n    if (fetchError) {\n        return <FetchArtefactError />\n    }\n\n    if ((mode.view || mode.edit) && artefactLoading) {\n        return <Loading />\n    }\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <Grid container className={classes.outerContainer} spacing={1}>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    justify='space-between'\n                    alignItems='center'\n                    spacing={1}\n                >\n                    <Head\n                        isAdmin={isAdmin}\n                        openDelete={() => setDeleteOpen(true)}\n                        noErrors={noErrors}\n                        {...componentProps}\n                    />\n                </Grid>\n\n                {regularView &&\n                    components.map(({ comp, name, widthProps }) => {\n                        if (comp === null) return null\n                        if (!widthProps) widthProps = { xs: 12, sm: 6 }\n                        return (\n                            <Grid\n                                container\n                                item\n                                {...widthProps}\n                                key={name}\n                                alignContent='stretch'\n                            >\n                                <FieldWrapper\n                                    key={comp}\n                                    child={comp}\n                                    name={name}\n                                    childProps={componentProps}\n                                    editButtonProps={editButtonProps}\n                                    classes={classes}\n                                />\n                            </Grid>\n                        )\n                    })}\n\n                {!regularView && (\n                    <Fragment>\n                        <Grid\n                            container\n                            item\n                            xs={12}\n                            sm={6}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                        >\n                            <FieldWrapper\n                                child={Images}\n                                name={'files'}\n                                childProps={componentProps}\n                                editButtonProps={editButtonProps}\n                                classes={classes}\n                            />\n                        </Grid>\n\n                        <Grid\n                            container\n                            item\n                            xs={12}\n                            sm={6}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                            spacing={1}\n                        >\n                            {componentsViewMode.map(\n                                ({ comp, name, widthProps }) => {\n                                    if (comp === null) return null\n                                    if (!widthProps) widthProps = { xs: 12 }\n                                    return (\n                                        <Grid\n                                            container\n                                            item\n                                            {...widthProps}\n                                            key={name}\n                                            // alignItems='flex-start'\n                                            alignContent='stretch'\n                                            padding={1}\n                                        >\n                                            <FieldWrapper\n                                                key={comp}\n                                                child={comp}\n                                                name={name}\n                                                childProps={componentProps}\n                                                editButtonProps={\n                                                    editButtonProps\n                                                }\n                                                classes={classes}\n                                            />\n                                        </Grid>\n                                    )\n                                }\n                            )}\n                        </Grid>\n                    </Fragment>\n                )}\n\n                {(!mode.view || state.address) && (\n                    <Grid item xs={12}>\n                        <FieldWrapper\n                            child={Address}\n                            name='address'\n                            childProps={addressProps}\n                            editButtonProps={editButtonProps}\n                            classes={classes}\n                        />\n                    </Grid>\n                )}\n\n                {mode.create && (\n                    <Grid item xs={12} md={12}>\n                        <CreateButton noErrors={noErrors} fullWidth />\n                    </Grid>\n                )}\n\n                <SuccessSnackbar\n                    open={snackbarOpen}\n                    setOpen={setSnackbarOpen}\n                    viewArtefact={pushViewArtefactURL}\n                    classes={classes}\n                    id={artefact ? artefact.id : '-1'}\n                />\n\n                <DeleteDialog\n                    open={deleteOpen}\n                    setOpen={setDeleteOpen}\n                    deleteArtefact={deleteArtefact}\n                    artefact={artefact}\n                />\n\n                <HelpDialog\n                    open={props.helpOpen}\n                    setOpen={props.setHelpOpen}\n                    content={HelpContent}\n                    mode={mode}\n                />\n            </Grid>\n        </form>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid\n                container\n                spacing={0}\n                alignItems='flex-start'\n                justify='center'\n                style={{ minHeight: '80vh' }}\n            >\n                <Grid item xs={11} md={9}>\n                    <CssBaseline />\n                    <ArtefactView {...props} />\n                </Grid>\n            </Grid>\n        </MuiPickersUtilsProvider>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState, Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid, Typography, Container } from '@material-ui/core'\nimport {\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Paper,\n    Link,\n} from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading, HelpDialog } from '../../components'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(3)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery {\n        me {\n            artefactAdministratorOf {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                        admin {\n                            username\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst HelpContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Here you can view all of the artefacts which you are an admin of.\n            </DialogContentText>\n            <DialogContentText>\n                Click view to see more about the artefact or to edit it.\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nexport default function ManageArtefactsView(props) {\n    const classes = useStyles()\n    const [state, setState] = useState({ loading: true })\n\n    useQuery(LIST_OF_ARTEFACTS, {\n        variables: {},\n        onCompleted: data =>\n            setState({\n                artefactEdges: data.me.artefactAdministratorOf.edges,\n                loading: false\n            }),\n        onError: errors => console.log(errors),\n        fetchPolicy: 'cache-and-network'\n    })\n\n    return (\n        <Container>\n            <CssBaseline />\n            <Grid\n                container\n                spacing={2}\n                justify='center'\n                className={classes.container}\n            >\n                <Grid item xs={12}>\n                    <Typography variant='h4' align='center'>\n                        Manage Artefacts\n                    </Typography>\n                    <Typography variant='subtitle1' align='center'>\n                        Here you can view all the artefacts you are an admin of\n                    </Typography>\n                </Grid>\n                {state.loading ? (\n                    <Loading />\n                ) : state.artefactEdges.length !== 0 ? (\n                    state.artefactEdges.map(edge => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={6}\n                            md={4}\n                            lg={3}\n                            key={edge.node.id}\n                        >\n                            <ArtefactCard artefact={edge.node} />\n                        </Grid>\n                    ))\n                ) : (\n                    <Paper\n                        className={classes.paper}\n                        style={{\n                            marginTop: 15,\n                            padding: '6px'\n                        }}\n                    >\n                        You are not managing any artefacts, click\n                        <Link\n                            component={RouterLink}\n                            to='/artefacts/create'\n                            color='secondary'\n                        >\n                            {' here '}\n                        </Link>\n                        to create one.\n                    </Paper>\n                )}\n            </Grid>\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={HelpContent}\n            />\n        </Container>\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt='You are lost - Obi Wan'/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useState, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography,\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Link,\n    MenuItem,\n    Snackbar,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    CssBaseline\n} from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useMutation, useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading, HelpDialog } from '../components'\nimport { Redirect } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    },\n    outerContainer: {\n        padding: theme.spacing(2)\n    },\n    card: {\n        alignContent: 'stretch'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        borderRadius: 10\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n    query {\n        me {\n            isMemberOf {\n                id\n                familyName\n                joinCode\n                hasArtefacts {\n                    edges {\n                        node {\n                            id\n                            name\n                            admin {\n                                username\n                            }\n                        }\n                    }\n                }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                    about\n                    hasArtefacts {\n                        edges {\n                            node {\n                                id\n                                name\n                                description\n                                upload\n                                admin {\n                                    username\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst JOIN_FAMILY_MUTATION = gql`\n    mutation JoinFamily($joinCode: String!) {\n        familyJoin(joinCode: $joinCode) {\n            family {\n                familyName\n                familyAdmin {\n                    username\n                }\n            }\n        }\n    }\n`\n\nconst SELECT_FAMILY_MUTATION = gql`\n    mutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n        updateProfile(input: { id: $profileId, selectedFamily: $toFamily }) {\n            id\n            selectedFamily\n        }\n    }\n`\n\nconst HelpContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts.\n            </DialogContentText>\n            <DialogContentText>\n                Enter a family's join code in the box underneath to join a\n                family.\n            </DialogContentText>\n            <DialogContentText>\n                The join code can be copied by clicking the button underneath\n                the family name.\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nexport default function UserHomeView(props) {\n    const classes = useStyles()\n    const [formJoinCode, setFormJoinCode] = useState('')\n    const [copied, setCopied] = useState(false)\n    const [joinError, setJoinError] = useState('')\n\n    // After a new family has been joined, refetch the home info to update it, so the user\n    // Can now see that family in the bar\n    const [joinFamilyMutation] = useMutation(JOIN_FAMILY_MUTATION, {\n        refetchQueries: data => [{ query: HOMEPAGE_INFO }],\n        onError: errors => setJoinError('Enter a valid join code'),\n        onCompleted: data => setJoinError('')\n    })\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error('Enter a valid joinCode')\n        } else if (\n            home_data &&\n            home_data.me.isMemberOf\n                .map(fam => fam.joinCode)\n                .includes(formJoinCode)\n        ) {\n            setJoinError('You are already a member of this family')\n        } else {\n            joinFamilyMutation({ variables: { joinCode: formJoinCode } })\n            setFormJoinCode(\"\")\n        }\n    }\n\n    let { data: home_data, loading: home_data_loading } = useQuery(\n        HOMEPAGE_INFO,\n        {\n            fetchPolicy: 'cache-and-network'\n        }\n    )\n\n    const [selectFamily] = useMutation(SELECT_FAMILY_MUTATION, {\n        refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n    })\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value\n        selectFamily({\n            variables: { profileId: profileId, toFamily: newFamily }\n        })\n    }\n\n    if (home_data_loading) {\n        console.log('home data is loading on refetch')\n        return <Loading />\n    }\n\n    let selectedFamily;\n    let families;\n    let profileId;\n    \n    if (home_data) {\n        selectedFamily = home_data.me.profile.selectedFamily\n        families = home_data.me.isMemberOf\n        profileId = home_data.me.profile.id\n    } else {\n        // Go to logout to remove token which is normally the cause of this error\n        console.error('User data was not defined, but fetched, logging out')\n        return <Redirect to='/logout' />\n    }\n\n    let artefacts = []\n\n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges\n    }\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <Grid container justify='center'>\n                <Grid\n                    item\n                    xs={12}\n                    lg={10}\n                    container\n                    spacing={3}\n                    justify='space-between'\n                    className={classes.outerContainer}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={7}\n                        container\n                        justify='center'\n                        alignItems='stretch'\n                        spacing={1}\n                        className={classes.paper}\n                    >\n                        {selectedFamily && (\n                            <Fragment>\n                                <Grid item xs={12}>\n                                    <Typography variant='h1'>\n                                        {selectedFamily.familyName}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography variant='subtitle1'>\n                                        {selectedFamily.about}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <CopyToClipboard\n                                        text={selectedFamily.joinCode}\n                                        onCopy={() => setCopied(true)}\n                                    >\n                                        <Button variant='outlined'>\n                                            Copy family join code\n                                        </Button>\n                                    </CopyToClipboard>\n                                </Grid>\n                            </Fragment>\n                        )}\n\n                        {!selectedFamily && (\n                            <Typography variant='h2'>\n                                Join or Create a Family\n                            </Typography>\n                        )}\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={5}\n                        md={3}\n                        container\n                        spacing={1}\n                        justify='center'\n                        alignContent='flex-start'\n                    >\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label='Select Family'\n                                variant='outlined'\n                                value={\n                                    selectedFamily ? selectedFamily.id : null\n                                }\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'age',\n                                    autoWidth: true\n                                }}\n                                disabled={families.length <= 1}\n                            >\n                                {families &&\n                                    families.map((item, key) => (\n                                        <MenuItem key={item.id} value={item.id}>\n                                            {item.familyName}\n                                        </MenuItem>\n                                    ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                id='joinCodeField'\n                                variant='outlined'\n                                label='Enter join code'\n                                value={formJoinCode}\n                                className={classes.textField}\n                                onChange={e => {\n                                    setJoinError('')\n                                    setFormJoinCode(e.target.value)\n                                }}\n                                InputProps={{\n                                    endAdornment: (\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleJoinFamily}\n                                            className={classes.button}\n                                            size='small'\n                                        >\n                                            Join\n                                        </Button>\n                                    ),\n                                    style: {}\n                                }}\n                                helperText={joinError}\n                                error={!!joinError}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        justify='flex-start'\n                        alignItems='stretch'\n                        spacing={1}\n                        item\n                        xs={12}\n                    >\n                        {artefacts.map((artefact, key) => (\n                            <Grid item xs={12} sm={6} md={4} key={key}>\n                                <ArtefactCard\n                                    artefact={artefact.node}\n                                    className={classes.card}\n                                />\n                            </Grid>\n                        ))}\n                        {artefacts.length === 0 && selectedFamily && (\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    marginTop: 15,\n                                    padding: '6px'\n                                }}\n                            >\n                                This family has no artefacts, click\n                                <Link\n                                    component={RouterLink}\n                                    to='/artefacts/create'\n                                    color='secondary'\n                                >\n                                    {' here '}\n                                </Link>\n                                to create one. Make sure to asign them to this\n                                family\n                            </Paper>\n                        )}\n                        {artefacts.length === 0 && !selectedFamily && (\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    marginTop: 15,\n                                    padding: '6px'\n                                }}\n                            >\n                                You are not yet a member of a family. Click\n                                <Link\n                                    component={RouterLink}\n                                    to='/family/create'\n                                    color='secondary'\n                                >\n                                    {' here '}\n                                </Link>\n                                to create one. Or join using a join code on the\n                                right.\n                            </Paper>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n            {selectedFamily && (\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    open={copied}\n                    autoHideDuration={2000}\n                    onClose={() => setCopied(false)}\n                    message={\n                        <span id='message-id'>\n                            Join code copied to clipboard\n                            <br />\n                            {selectedFamily.joinCode}\n                        </span>\n                    }\n                />\n            )}\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={HelpContent}\n            />\n        </Fragment>\n    )\n}\n","import React, { useState, Fragment } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    Snackbar,\n    SnackbarContent,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, HelpDialog } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 140\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families to view artefacts from that family as pins on the map.\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown.\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to show more information.\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const initMapState = { zoom: [2] }\n    const [mapState, setMapState] = useState(initMapState)\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const getArtefactMapData = data => {\n        console.log('Query resulted')\n        if (!data || !data.family) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        },\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact') {\n            if (event.target.value !== null) {\n                var newCenter = event.target.value.center\n                if (newCenter === mapState.center) {\n                    newCenter = newCenter.map(coord => 0.99999999 * coord)\n                }\n                setMapState({\n                    center: newCenter\n                })\n                event.target.value.initPopupOpen = true\n            }\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                    // onClick={e => setState({ ...state, selectedArtefact: {} })}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value} key={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {mapArtefacts.length > 0 && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Jump to'\n                                variant='outlined'\n                                value={state.selectedArtefact || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem\n                                        value={artefact}\n                                        key={artefact.id}\n                                    >\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n            </Grid>\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={MyDialogContent}\n            />\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => <GetFamiliesWrapper {...props} child={MapView} />\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\nimport DetailView from './views/artefactViews/DetailView'\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\nconst defaultOptions = {\n    watchQuery: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n    query: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n}\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    defaultOptions: defaultOptions\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}