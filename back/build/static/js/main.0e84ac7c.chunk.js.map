{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/Loading.js","views/LandingPage.js","components/PrivateRoute.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/Title.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/CreateButton.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","Loading","classes","makeStyles","theme","progress","margin","spacing","useStyles","CircularProgress","className","HomePageButton","props","linkTo","Button","style","color","padding","component","RouterLink","to","children","LandingPage","href","rel","Typography","variant","zIndex","position","fontWeight","fontFamily","top","left","background","params","right","WaitWraper","state","checkAuthenticated","this","context","setState","localToken","localStorage","getItem","console","log","Component","contextType","PrivateRoute","LoggedIn","loggedIn","loggedOut","landingPage","path","rest","useContext","render","React","useState","anchorEl","setAnchorEl","open","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","root","flexGrow","menuButton","marginRight","title","alignText","MenuAppBar","useTheme","dark","palette","type","AppBar","elevation","Toolbar","Grid","container","item","xs","fullWidth","justify","alignItems","onToggleDarkTheme","LoggedInBar","username","NotLoggedInBar","lightPalette","primary","indigo","secondary","main","teal","darkPalette","deepPurple","error","paper","default","lightTheme","createMuiTheme","darkTheme","setItem","setTheme","ThemeProvider","CssBaseline","newTheme","textField","backgroundColor","textAlign","marginTop","button","card","maxWidth","borderRadius","media","height","ArtefactCard","mediaURI","name","description","Card","CardActionArea","CardMedia","image","CardContent","zeroMinWidth","gutterBottom","noWrap","CardActions","size","popup","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","Map","MapType","artefacts","openArtefactID","setOpenArtefactID","mapStyle","containerStyle","mapState","e","map","artefact","center","initPopupOpen","length","artefactID","key","coordinates","src","alt","offset","bottom","geocodingService","require","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","GetFamiliesWrapper","Child","child","childProps","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","desc","statesLoading","variables","GetArtefactWrapper","artefactData","artefactLoading","marginLeft","alignContent","form","display","flexWrap","submit","width","justifyContent","formControl","paperWrapper","marginBottom","iconButton","dropzone","minHeight","outerContainer","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","history","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","Paper","onSubmit","TextField","required","label","autoFocus","onChange","target","value","helperText","FormHelperText","Link","Layout","direction","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","disabled","Logout","MyDialogTitle","artefactFamilyFormUseStyles","DialogTitle","disableTypography","closeButton","CreateFamilyView","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","setOpen","_completed","familyCreate","family","createFamily","FormControl","multiline","rows","defaultValue","Dialog","DialogContent","align","mode","create","edit","view","states","setters","handleSetField","inputProps","readOnly","select","Object","keys","admin","clearable","inputVariant","format","openTo","date","KeyboardButtonProps","List","subheader","ListSubheader","dense","ListItem","ListItemIcon","Checkbox","edge","checked","isPublic","tabIndex","ListItemText","belongsToFamiliesBools","initialFiles","files","dropzoneClass","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","onKeyDown","keyCode","document","getElementById","click","Popover","queryResults","undefined","disablePadding","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","action","close","noErrors","ArtefactView","isAdmin","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","handleCreationCompleted","artefactCreate","updateCompleted","handleCreationError","handleUpdateError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","filter","input","saveChange","artefactInput","componentProps","addressProps","newLocationState","Panes","comp","Name","State","Description","Admin","Date","Privacy","Families","Images","Title","pane","FieldWrapper","Address","CreateButton","SuccessSnackbar","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","upload","Error404View","overflow","icon","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","selectedFamily","_homepageInfoCompleted","home_data","called","selectFamily","inputLabel","useRef","profileId","hasArtefacts","GridList","cellHeight","cols","GridListTile","InputLabel","htmlFor","Select","newFamily","toFamily","overlay","minWidth","success","green","opacity","fontSize","MyDialogContent","DialogContentText","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","helpOpen","setHelpOpen","promiseArr","all","handleChange","SelectProps","autoWidth","fam","aria-labelledby","DialogActions","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e84ac7c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", \n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Loading() {\n    const useStyles = makeStyles(theme => ({\n        progress: {\n            margin: theme.spacing(2)\n        }\n    }))\n\n    const classes = useStyles()\n\n    return <CircularProgress className={classes.progress} />\n}\n\nexport default Loading\n","import React from 'react'\nimport Particles from 'react-particles-js'\nimport { Typography, Button } from '@material-ui/core'\nimport Typist from 'react-typist';\nimport { Link as RouterLink } from 'react-router-dom'\n\n/*\nThe page that users come to when they first encounter our app. It's a marketing page basically\n\n*/\n\nfunction HomePageButton(props) {\n    const {linkTo} = props;\n    return (\n        <Button style={{ \n            color: \"#f0f0f0\",\n            padding: \"12px\",\n            margin: \"5px\"\n            }}\n            component={RouterLink}\n            to={linkTo}>\n            {props.children}\n        </Button>\n    )\n}\n\nfunction LandingPage(props) {\n    return (\n        <div>\n            <link href=\"https://fonts.googleapis.com/css?family=Dosis&display=swap\" rel=\"stylesheet\"></link>\n            <Typography variant=\"h1\" \n            style={{\n                padding: \"5rem\",\n                zIndex: 3,\n                position: \"absolute\",\n                fontWeight: \"lighter\",\n                fontFamily: \"Dosis\",\n                color: \"#f0f0f0\",\n            }}>\n                Family Artefacts Register\n            </Typography>\n            <Typography variant=\"h2\"\n                style={{\n                    padding: \"5rem\",\n                    zIndex: 3,\n                    position: \"absolute\",\n                    top: \"8rem\",\n                    fontWeight: \"lighter\",\n                    fontFamily: \"Dosis\",\n                    color: \"#f0f0f0\",\n                }}>\n            <Typist>\n                Connecting you to your family <br />and your family's history.\n            </Typist>\n            </Typography>\n            <Particles\n                style = {{\n                    position: \"fixed\",\n                    left: 0,\n                    top: 0,\n                    background: \"rgb(103, 58, 183)\",\n                    background: \"linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)\"\n        }}\n                params={{\n                    \"particles\": {\n                        \"number\": {\n                            \"value\": 120,\n                            \"density\": {\n                                \"enable\": true,\n                                \"value_area\": 800\n                            }\n                        },\n                        \"color\": {\n                            \"value\": \"#ffffff\"\n                        },\n                        \"shape\": {\n                            \"type\": \"circle\",\n                            \"stroke\": {\n                                \"width\": 0,\n                                \"color\": \"#FFFFFF\"\n                            },\n                            \"polygon\": {\n                                \"nb_sides\": 5\n                            },\n                            \"image\": {\n                                \"src\": \"img/github.svg\",\n                                \"width\": 100,\n                                \"height\": 100\n                            }\n                        },\n                        \"opacity\": {\n                            \"value\": 0.44093831673801875,\n                            \"random\": false,\n                            \"anim\": {\n                                \"enable\": false,\n                                \"speed\": 1,\n                                \"opacity_min\": 0.1,\n                                \"sync\": false\n                            }\n                        },\n                        \"size\": {\n                            \"value\": 4.008530152163807,\n                            \"random\": true,\n                            \"anim\": {\n                                \"enable\": false,\n                                \"speed\": 40,\n                                \"size_min\": 0.1,\n                                \"sync\": false\n                            }\n                        },\n                        \"line_linked\": {\n                            \"enable\": true,\n                            \"distance\": 150,\n                            \"color\": \"#ffffff\",\n                            \"opacity\": 0.4,\n                            \"width\": 1\n                        },\n                        \"move\": {\n                            \"enable\": true,\n                            \"speed\": 6,\n                            \"direction\": \"none\",\n                            \"random\": false,\n                            \"straight\": false,\n                            \"out_mode\": \"out\",\n                            \"bounce\": false,\n                            \"attract\": {\n                                \"enable\": false,\n                                \"rotateX\": 600,\n                                \"rotateY\": 1200\n                            }\n                        }\n                    },\n                    \"interactivity\": {\n                        \"detect_on\": \"canvas\",\n                        \"events\": {\n                            \"onhover\": {\n                                \"enable\": true,\n                                \"mode\": \"grab\"\n                            },\n                            \"onclick\": {\n                                \"enable\": true,\n                                \"mode\": \"push\"\n                            },\n                            \"resize\": true\n                        },\n                        \"modes\": {\n                            \"grab\": {\n                                \"distance\": 400,\n                                \"line_linked\": {\n                                    \"opacity\": 1\n                                }\n                            },\n                            \"bubble\": {\n                                \"distance\": 400,\n                                \"size\": 40,\n                                \"duration\": 2,\n                                \"opacity\": 8,\n                                \"speed\": 3\n                            },\n                            \"repulse\": {\n                                \"distance\": 200,\n                                \"duration\": 0.4\n                            },\n                            \"push\": {\n                                \"particles_nb\": 4\n                            },\n                            \"remove\": {\n                                \"particles_nb\": 2\n                            }\n                        }\n                    },\n                    \"retina_detect\": true\n                }}\n            />\n            <div\n                style={{\n                    position: \"absolute\",\n                    right: 0\n                }}>\n            <HomePageButton linkTo=\"/login\">Login</HomePageButton>\n            <HomePageButton linkTo=\"/signup\">Sign up</HomePageButton>\n            </div>\n        </div>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import React, { useContext } from 'react'\nimport { IconButton, Menu, MenuItem, Button } from '@material-ui/core'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nexport default props => {\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Button component={RouterLink} to='/family/create' color='inherit'>\n                Create Family\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/manage'\n                color='inherit'\n            >\n                Manage Artefacts\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/create'\n                color='inherit'\n            >\n                Create Artefact\n            </Button>\n            <Button component={RouterLink} to='/map/' color='inherit'>\n                Artefact Map\n            </Button>\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Typography,\n    Toolbar,\n    AppBar,\n    Button,\n    makeStyles,\n    Grid\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport Brightness3Icon from '@material-ui/icons/Brightness3'\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Link } from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n            {/* <AppBar position='static' color={dark ? 'inherit' : 'primary'} elevation={6}> */}\n                <Toolbar>\n                    <Grid container>\n                        <Grid item xs={2} container>\n                            <Button\n                                fullWidth\n                                component={RouterLink}\n                                to='/'\n                                color='inherit'\n                            >\n                                Home\n                            </Button>\n                        </Grid>\n\n                        <Grid item xs={10} container justify='flex-end' alignItems='center'>\n                            <IconButton\n                                className={classes.menuButton}\n                                color='inherit'\n                                aria-label='menu'\n                                onClick={props.onToggleDarkTheme}\n                            >\n                                {!dark ? (\n                                    <Brightness3Icon />\n                                ) : (\n                                    <BrightnessHighIcon />\n                                )}\n                            </IconButton>\n\n                            {loggedIn && <LoggedInBar username={username} />}\n                            {!loggedIn && <NotLoggedInBar />}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport {\n    teal,\n    blue,\n    deepPurple,\n    lightBlue,\n    indigo\n} from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        // light: deepPurple[100],\n        main: deepPurple['A100'],\n        // dark: deepPurple[500]\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nconst lightTheme = createMuiTheme({ palette: lightPalette, type: 'light' })\nconst darkTheme = createMuiTheme({ palette: darkPalette, type: 'dark' })\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header onToggleDarkTheme={toggleDarkTheme} />\n            {props.children}\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        maxWidth: 345,\n        borderRadius: 10\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 140\n    }\n}))\n\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ mediaURI, name, description, id }) {\n    const classes = useStyles()\n\n    console.log(\"here's the mediaURI: \" + mediaURI)\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={mediaURI}\n                    title={name}\n                />\n                <CardContent>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    size='small'\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { useTheme } from '@material-ui/styles'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        // color: theme.palette.background.default,\n        // background: theme.palette.background.default,\n        // background: '#000 !important',\n        // color: '#000 !important'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    return (\n        <MapType\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={e => setOpenArtefactID('')}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, ...rest } = artefact\n                if (!center || !center.length) {\n                    return\n                }\n                var artefactID = artefact.id\n                return (\n                    <Fragment key={artefactID}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => {\n                                if (openArtefactID === artefactID) {\n                                    setOpenArtefactID('')\n                                } else {\n                                    setOpenArtefactID(artefactID)\n                                }\n                                if (artefact.initPopupOpen){\n                                    artefact.initPopupOpen = false\n                                }\n                            }}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup &&\n                            (openArtefactID === artefactID ||\n                                initPopupOpen) && (\n                                <Popup\n                                    coordinates={center}\n                                    className={classes.popup}\n                                    offset={{\n                                        'bottom-left': [12, -38],\n                                        bottom: [0, -38],\n                                        'bottom-right': [-12, -38]\n                                    }}\n                                    // style={{color: '#000000'}}\n                                >\n                                    <ArtefactCard {...rest} />\n                                </Popup>\n                            )}\n                    </Fragment>\n                )\n            })}\n        </MapType>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.error(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'center',\n        textAlign: 'left'\n    },\n    title: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        height: '100%',\n        alignItems: 'center',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '80px',\n        borderRadius: 10\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    }\n}))\n","import React, { useState, useContext } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout, formUseStyles } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = formUseStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='inherit'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Login {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Layout, formUseStyles } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = formUseStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='inherit'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Signup {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Grid,\n    Paper,\n    FormControl\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nconst MyDialogTitle = props => {\n    const classes = artefactFamilyFormUseStyles()\n    const { children, onClose } = props\n\n    return (\n        <DialogTitle disableTypography className={classes.root}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label='close'\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitle>\n    )\n}\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        console.log(data)\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('Family name: ' + familyName)\n        console.log('About: ' + about)\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid\n                container\n                spacing={1}\n                className={classes.outerContainer}\n                spacing={1}\n            >\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4' className={classes.title}>\n                        Create Family\n                    </Typography>\n\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e => console.log('hello')}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <MyDialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </MyDialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </form>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React from 'react'\nimport { Grid, Typography } from '@material-ui/core'\n\nexport default ({ mode, classes }) => {\n    var {create, edit, view} = mode\n    return (\n        <Grid item xs={12} sm={8}>\n            <Typography variant='h4' className={classes.title}>\n                {create && 'Create'} {edit && 'Edit'} {view && 'View'} Artefact\n            </Typography>\n            {!view && (\n                <Typography variant='subtitle1' className={classes.title}>\n                    {create &&\n                        'Artefacts are belongings of the family, enter as much or as little detail as you like'}\n                    {edit && 'Click to start editing'}\n                </Typography>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ mode, states, setters, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            // style={{ height: '100%' }}\n            // InputProps={{ style: {height: '100%'} }}\n            id='artefact-name'\n            label='Artefact name'\n            variant='outlined'\n            autoFocus={!view}\n            required\n            fullWidth\n            value={state.name || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField, MenuItem } from '@material-ui/core'\n\nexport default ({ mode, states, setters, artefactStates, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='state'\n            label='Artefact State'\n            variant='outlined'\n            required\n            fullWidth\n            value={state.state || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            select\n            disabled={disabled}\n        >\n            {Object.keys(artefactStates).map(value => {\n                return (\n                    <MenuItem value={artefactStates[value]} key={value}>\n                        {value}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ mode, states, setters, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='description'\n            label='Description'\n            variant='outlined'\n            required\n            fullWidth\n            multiline\n            rows={6}\n            value={state.description || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ mode, states, username }) => {\n    var { view } = mode\n    var { state } = states\n    return (\n        <TextField\n            id='artefact-admin'\n            label='Artefact Admin'\n            variant='outlined'\n            required\n            fullWidth\n            value={\n                state.admin && Object.keys(state.admin).length !== 0\n                    ? state.admin.username\n                    : username\n            }\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => console.log('admin field was changed')}\n            disabled\n        />\n    )\n}\n","import React from 'react'\n\nimport 'date-fns'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nexport default ({ mode, states, setters, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <KeyboardDatePicker\n            disabled={view || disabled}\n            clearable\n            // variant='inline'\n            inputVariant='outlined'\n            format='dd/MM/yyyy'\n            openTo='year'\n            label='Date'\n            value={state.date}\n            onChange={date => handleSetField(name, date)}\n            KeyboardButtonProps={{\n                'aria-label': 'change date'\n            }}\n        />\n    )\n}\n","import React from 'react'\nimport {\n    List,\n    ListSubheader,\n    ListItem,\n    Checkbox,\n    ListItemIcon,\n    ListItemText\n} from '@material-ui/core'\n\nexport default ({ mode, states, setters, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <List\n            subheader={<ListSubheader component='div'>Privacy</ListSubheader>}\n            dense\n        >\n            <ListItem disabled={disabled}>\n                {!view && (\n                    <ListItemIcon>\n                        <Checkbox\n                            edge='start'\n                            checked={state.isPublic || false}\n                            tabIndex={-1}\n                            onClick={e =>\n                                handleSetField(name, e.target.checked)\n                            }\n                        />\n                    </ListItemIcon>\n                )}\n                <ListItemText primary={'Public'} />\n            </ListItem>\n        </List>\n    )\n}\n","import React from 'react'\nimport {\n    List,\n    ListSubheader,\n    ListItem,\n    Checkbox,\n    ListItemIcon,\n    ListItemText\n} from '@material-ui/core'\n\nexport default ({ mode, states, setters, families, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <List\n            subheader={\n                <ListSubheader component='div'>\n                    {!view\n                        ? 'Select which of your families the artefact belongs to'\n                        : 'Belongs to'}\n                </ListSubheader>\n            }\n        >\n            {families.map(family => {\n                if (\n                    state.belongsToFamiliesBools &&\n                    (!view || state.belongsToFamiliesBools[family.id])\n                ) {\n                    return (\n                        <ListItem key={family.id} dense disabled={disabled}>\n                            {!view && (\n                                <ListItemIcon>\n                                    <Checkbox\n                                        edge='start'\n                                        checked={\n                                            state.belongsToFamiliesBools[\n                                                family.id\n                                            ] || false\n                                        }\n                                        onClick={e =>\n                                            handleSetField(name, {\n                                                ...state.belongsToFamiliesBools,\n                                                [family.id]: e.target.checked\n                                            })\n                                        }\n                                        tabIndex={-1}\n                                    />\n                                </ListItemIcon>\n                            )}\n                            <ListItemText primary={family.familyName} />\n                        </ListItem>\n                    )\n                }\n                return null\n            })}\n        </List>\n    )\n}\n","import React from 'react'\nimport { DropzoneArea } from 'material-ui-dropzone'\n\nexport default ({ mode, classes, states, setters, disabled, name }) => {\n    var { view } = mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <DropzoneArea\n            initialFiles={state.files || []}\n            onChange={files => handleSetField(name, files)}\n            dropzoneClass={classes.dropzone}\n        />\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    TextField,\n    Grid,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Map } from '../../../components'\n\nexport default ({\n    mode,\n    states,\n    setters,\n    classes,\n    name,\n    handleGeocodeQuery\n}) => {\n    var { view } = mode\n    var {\n        handleSetField,\n        setAddressIsSearchResult,\n        setLocationState,\n        handleSetLocationResult\n    } = setters\n    var { locationState, state } = states\n\n    const theme = useTheme()\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    return (\n        <Fragment>\n            <TextField\n                id='address'\n                label='Address'\n                variant='outlined'\n                fullWidth\n                value={state.address || ''}\n                inputProps={{\n                    readOnly: view\n                }}\n                onChange={e => {\n                    handleSetField(name, e.target.value)\n                    if (e.target.value) {\n                        setAddressIsSearchResult(false)\n                    } else {\n                        // allow blank address\n                        setAddressIsSearchResult(true)\n                    }\n                }}\n                error={!!locationState.error}\n                InputProps={{\n                    endAdornment: !view && (\n                        <IconButton\n                            className={classes.iconButton}\n                            aria-label='search'\n                            id='search'\n                            onClick={e =>\n                                handleGeocodeQuery({\n                                    query: state.address,\n                                    initial: false\n                                })\n                            }\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    ),\n                    style: { marginBottom: 3 }\n                }}\n                onKeyDown={e => {\n                    if (e.keyCode === 13 && !view) {\n                        e.preventDefault()\n                        document.getElementById('search').click()\n                    }\n                }}\n                helperText={locationState.error}\n            />\n            <Popover\n                id={locationState.queryResults.length ? 'results' : undefined}\n                open={!!locationState.queryResults.length}\n                anchorEl={document.getElementById('address')}\n                onClose={e =>\n                    setLocationState({\n                        ...locationState,\n                        queryResults: []\n                    })\n                }\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <List component='div' disablePadding>\n                    {locationState.queryResults.map(result => (\n                        <ListItem\n                            key={result.placeName}\n                            button\n                            className={classes.nested}\n                            onClick={e => handleSetLocationResult(result)}\n                        >\n                            <ListItemText primary={result.placeName} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Popover>\n\n            <Grid container style={{ marginTop: 1 }}>\n                <Map\n                    interactive={false}\n                    className={classes.map}\n                    mapState={locationState.mapState}\n                    mapStyle={mapStyle}\n                    containerStyle={{\n                        height: '60vh',\n                        width: '100vw',\n                        borderRadius: 20,\n                        marginTop: 5\n                    }}\n                    artefacts={[\n                        {\n                            center: locationState.mapState.center\n                        }\n                    ]}\n                />\n            </Grid>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\n\nexport default ({ save, cancel, updateErrors, classes }) => {\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            justify='space-evenly'\n            alignItems='center'\n            spacing={1}\n            style={{ marginTop: 1 }}\n        >\n            <Grid item xs={6}>\n                <MyButton onClick={save} name='Save' color='primary' />\n            </Grid>\n            <Grid item xs={6}>\n                <MyButton\n                    onClick={cancel}\n                    name='Cancel'\n                    color='secondary'\n                />\n            </Grid>\n\n            {updateErrors && (\n                <Grid item xs={12}>\n                    <FormHelperText error>\n                        Error Updating Artefact\n                    </FormHelperText>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid, FormControl, Paper } from '@material-ui/core'\nimport EditButtons from './EditButtons'\n\nexport default ({\n    child: Child,\n    childProps,\n    name,\n    classes,\n    editButtonProps\n}) => {\n    var { beingEdited, mode } = childProps\n    var { edit } = mode\n    var thisBeingEdited = beingEdited === name\n    var someBeingEdited = edit && !!beingEdited\n    return (\n        <Grid item xs={12}>\n            <Paper className={classes.paperWrapper} elevation={3}>\n                <FormControl className={classes.formControl} fullWidth>\n                    <Child\n                        {...childProps}\n                        disabled={someBeingEdited && !thisBeingEdited}\n                        name={name}\n                    />\n\n                    {thisBeingEdited && <EditButtons {...editButtonProps} />}\n                </FormControl>\n            </Paper>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport {\n    Button,\n    CssBaseline,\n    Grid,\n    Snackbar,\n    IconButton,\n    FormHelperText,\n    ClickAwayListener\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id='message-id'>Edit successful</span>}\n                action={[\n                    <Button\n                        key='view'\n                        color='secondary'\n                        size='small'\n                        onClick={e => viewArtefact(id)}\n                    >\n                        VIEW\n                    </Button>,\n                    <IconButton\n                        key='close'\n                        aria-label='close'\n                        color='inherit'\n                        onClick={() => setOpen(false)}\n                        className={classes.close}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </ClickAwayListener>\n    )\n}\n","import React, { Fragment } from 'react'\n\nimport { Button, FormHelperText } from '@material-ui/core'\n\nexport default ({ noErrors }) => (\n    <Fragment>\n        <Button\n            name='create'\n            label='Create'\n            type='submit'\n            fullWidth\n            variant='contained'\n            color='primary'\n        >\n            Create\n        </Button>\n        {!noErrors && (\n            <FormHelperText error={!noErrors}>\n                Unknown Error Occurred\n            </FormHelperText>\n        )}\n    </Fragment>\n)\n","import React, { useContext, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { CssBaseline, Grid } from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport {\n    Loading,\n    geocodeQuery,\n    artefactFamilyFormUseStyles\n} from '../../components'\n\nimport {\n    Title,\n    Name,\n    State,\n    Description,\n    Admin,\n    Date,\n    Privacy,\n    Families,\n    Images,\n    FieldWrapper,\n    Address,\n    SuccessSnackbar,\n    CreateButton\n} from './components'\nimport authContext from '../../authContext'\n\nimport { Layout } from '../../components'\n\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION\n} from '../../gqlQueriesMutations'\n\nimport { AUTH_TOKEN, config } from '../../constants'\nimport axios from 'axios'\n\nfunction ArtefactView(props) {\n    // get the mode\n    var { create, edit, view } = props\n    var mode = { create: create, edit: edit, view: view }\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    var { artefactStates, families } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors, creationLoading\n\n    if (!create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && edit) {\n        edit = false\n        view = true\n    }\n\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (edit || view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families\n    ) {\n        var belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (create && families && !state.belongsToFamiliesBools) {\n        var belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        console.log(\"here's the data\")\n        console.log(data)\n        var id = data.data.artefactCreate.artefact.id\n        pushViewArtefactURL(id)\n    }\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n\n    const createArtefact = async (\n        variables,\n        successCallback,\n        errorCallback\n    ) => {\n        console.log(\"here's input from call\")\n        console.log(variables)\n        // const input = \"hello\"\n        let form_data = new FormData()\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0])\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\n        form_data.append('variables', JSON.stringify(variables))\n        let url = config.uri\n        axios\n            .post(url, form_data, {\n                headers: {\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Transfer-Encoding': 'multipart/form-data'\n                }\n            })\n            .then(res => {\n                successCallback(res.data)\n            })\n            .catch(err => {\n                // console.error(err);\n                errorCallback(err)\n            })\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : '',\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n        createArtefact(input, handleCreationCompleted, handleCreationError)\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        create ? submitForm(e) : saveChange(e)\n    }\n\n    if ((edit || view) && dataLoading) {\n        return <Loading />\n    }\n\n    const editButtonProps = {\n        save: saveChange,\n        cancel: cancelEditing,\n        updateErrors: updateErrors,\n        classes: classes\n    }\n\n    const componentProps = {\n        beingEdited: beingEdited,\n        mode: mode,\n        classes: classes,\n        artefactStates: artefactStates,\n        username: context.user.username,\n        families: families,\n        states: {\n            state: state,\n            locationState: locationState\n        },\n        setters: {\n            handleSetField: handleSetField\n        }\n    }\n\n    const addressProps = {\n        ...componentProps,\n        handleGeocodeQuery: handleGeocodeQuery,\n        setters: {\n            ...componentProps.setters,\n            setLocationState: setLocationState,\n            setAddressIsSearchResult: setAddressIsSearchResult,\n            handleSetLocationResult: handleSetLocationResult\n        }\n    }\n\n    const LeftPaneComponents = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Description, name: 'description' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' }\n    ]\n\n    const RightPaneComponents = [\n        { comp: Privacy, name: 'isPublic' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        { comp: Images, name: 'files' }\n    ]\n\n    const Panes = [LeftPaneComponents, RightPaneComponents]\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <Grid container className={classes.outerContainer} spacing={1}>\n                <Grid item xs={12} container justify='center'>\n                    <Title mode={mode} classes={classes} />\n                </Grid>\n\n                {Panes.map(pane => (\n                    <Grid item xs={12} sm={6} container spacing={1} key={pane}>\n                        {pane.map(({ comp, name }) => {\n                            return (\n                                <FieldWrapper\n                                    key={comp}\n                                    child={comp}\n                                    name={name}\n                                    childProps={componentProps}\n                                    editButtonProps={editButtonProps}\n                                    classes={classes}\n                                />\n                            )\n                        })}\n                    </Grid>\n                ))}\n\n                <Grid item xs={12}>\n                    <FieldWrapper\n                        child={Address}\n                        name='address'\n                        childProps={addressProps}\n                        editButtonProps={editButtonProps}\n                        classes={classes}\n                    />\n                </Grid>\n\n                {create && (\n                    <Grid item xs={5}>\n                        <CreateButton noErrors={noErrors} />\n                    </Grid>\n                )}\n\n                <SuccessSnackbar\n                    open={snackbarOpen}\n                    setOpen={setSnackbarOpen}\n                    viewArtefact={pushViewArtefactURL}\n                    classes={classes}\n                    id={artefact ? artefact.id : '-1'}\n                />\n            </Grid>\n        </form>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <Layout>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid\n                    container\n                    spacing={0}\n                    direction='column'\n                    alignItems='center'\n                    justify='center'\n                    style={{ minHeight: '80vh' }}\n                >\n                    <Grid item xs={10}>\n                        <CssBaseline />\n                        <ArtefactView {...props} />\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Layout>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport ArtefactCard from '../../components/ArtefactCard'\nimport { config } from '../../constants'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    container: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery($first: Int!) {\n        me {\n            artefactAdministratorOf(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n\n    const classes = useStyles()\n    const numArtefactsFetched = 10\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        variables: {\n            first: numArtefactsFetched\n        },\n        onCompleted: data =>\n            SetArtefactEdges(data.me.artefactAdministratorOf.edges)\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={2} className={classes.container}>\n                <Grid item xs={12}>\n                    <Grid container justify='center' spacing={2}>\n                        {artefactEdges.map(edge => (\n                            <Grid item key={edge.node.id}>\n                                <ArtefactCard\n                                    mediaURI={config.mediaRoot + edge.node.upload}\n                                    name={edge.node.name}\n                                    description={edge.node.description}\n                                    id={edge.node.id}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt=''/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Typography, CssBaseline, Button, TextField, Grid,\nFormControl } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport ArtefactCard from '../components/ArtefactCard';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n        query {\n            me {\n            isMemberOf {\n            id\n            familyName\n            joinCode\n            hasArtefacts {\n                edges {\n                node {\n                    id\n                    name\n                    admin {\n                    username\n                    }\n                }\n                }\n            }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                        hasArtefacts {\n                            edges {\n                                node {\n                                    id\n                                    name\n                                    description\n                                    upload\n                                }\n                            }\n                        }\n                    }\n                }\n        }\n    }`\n\nconst JOIN_FAMILY_MUTATION = gql`\nmutation JoinFamily($joinCode: String!) {\n  familyJoin(joinCode: $joinCode) {\n    family {\n      familyName\n      familyAdmin {\n          username\n      }\n    }\n  }\n}`\n\nconst SELECT_FAMILY_MUTATION = gql`\nmutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n    updateProfile(input: {\n        id: $profileId,\n        selectedFamily: $toFamily\n    }) {\n        id\n        selectedFamily\n    }\n}`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n    const [formJoinCode, setFormJoinCode] = useState(\"\")\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error(\"Enter a valid joinCode\");\n            return;\n        }\n\n        joinFamilyMutation({variables: {joinCode: formJoinCode }})\n    }\n\n    const _homepageInfoCompleted = (data) => {\n        const selectedFamily = data.me.profile.selectedFamily\n        if (!selectedFamily) {\n            console.error(\"User has not selected a family\");\n            return;\n        }\n    }\n\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(HOMEPAGE_INFO, {\n        onCompleted: (data) => {\n            _homepageInfoCompleted(data)\n        }\n    })\n\n\n    const [selectFamily, { data: mutation_data }] = useMutation(SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const inputLabel = React.useRef(null);\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value;\n        selectFamily({ variables: { profileId: profileId, toFamily: newFamily } })\n    };\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    const selectedFamily = home_data.me.profile.selectedFamily\n    const families = home_data.me.isMemberOf;\n    const profileId = home_data.me.profile.id;\n    let artefacts = []\n    \n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges;\n    }\n    \n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    {selectedFamily && (\n                        <div>\n                        <Typography variant=\"h1\">{selectedFamily.familyName}</Typography>\n                        <Typography variant=\"h5\">Join code: {selectedFamily.joinCode}</Typography>\n                        </div>\n                    )}\n                    {!selectedFamily && (\n                        <Typography variant=\"h2\">Join and/or Select a Family</Typography>\n                    )}\n                    <h4>Your username is (temp, for testing): {username}</h4>\n                    <GridList cellHeight={\"auto\"} cols={2}>\n                        {artefacts.map((artefact, key) => (\n                            <GridListTile\n                                key={key}>\n                                <ArtefactCard\n                                    key={key}\n                                    mediaURI={artefact.node.upload}\n                                    name={artefact.node.name}\n                                    description={artefact.node.description}\n                                    id={artefact.node.id} />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={3}>\n                    <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                        Select Family\n                    </InputLabel>\n                    <Select\n                        variant='outlined'\n                        fullWidth\n                        disabled={families.length <= 1}\n                        value={selectedFamily ? selectedFamily.id : null}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-simple',\n                        }}\n                    >\n                        {families && (families.map((item, key) =>\n                            <MenuItem\n                                key={item.id}\n                                value={item.id}\n                            >\n                                {item.familyName}\n                            </MenuItem>\n                        )\n                        )}\n                    </Select>\n                    <FormControl\n                    fullWidth\n                    >\n                    <TextField \n                        id=\"joinCodeField\"\n                        label=\"Join a family\"\n                        value={formJoinCode}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        onChange={e => setFormJoinCode(e.target.value)}\n                        fullWidth\n                    />\n                    <Button\n                        variant=\"outlined\" \n                        onClick={handleJoinFamily}\n                    >\n                        Join Family\n                    </Button>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React, { useState, Fragment } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, Layout } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to open a popup\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const [mapState, setMapState] = useState({\n        zoom: [2]\n    })\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const [helpOpen, setHelpOpen] = useState(false)\n    const getArtefactMapData = data => {\n        if (!data) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        }\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact'){\n            setMapState({\n                ...mapState,\n                center: event.target.value.center\n            })\n            event.target.value.initPopupOpen = true\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {/* {mapArtefacts && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Go to artefact'\n                                variant='outlined'\n                                value={state.selectedArtefact}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                <MenuItem value={{}}>None</MenuItem>\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem value={artefact}>\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )} */}\n\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='menu'\n                    onClick={() => setHelpOpen(true)}\n                >\n                    <HelpIcon />\n                </IconButton>\n            </Grid>\n\n            <Dialog\n                fullWidth\n                maxWidth='sm'\n                open={helpOpen}\n                onClose={() => setHelpOpen(false)}\n                aria-labelledby='help-title'\n            >\n                <MyDialogContent />\n                <DialogActions>\n                    <Button onClick={() => setHelpOpen(false)} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <GetFamiliesWrapper {...props} child={MapView} />\n    </Layout>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\nimport DetailView from './views/artefactViews/DetailView'\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                        landingPage\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}