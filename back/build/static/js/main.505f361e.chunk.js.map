{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/Loading.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","views/LandingPage.js","components/PrivateRoute.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","views/ArtefactView.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/CreateArtefactView.js","views/DetailView.js","views/ManageArtefactsView.js","views/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","Loading","classes","makeStyles","theme","progress","margin","spacing","useStyles","CircularProgress","className","props","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Button","component","RouterLink","to","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","root","flexGrow","menuButton","marginRight","title","alignText","MenuAppBar","loggedIn","useTheme","dark","palette","type","AppBar","position","elevation","Toolbar","Grid","container","item","xs","fullWidth","justify","alignItems","onToggleDarkTheme","LoggedInBar","username","NotLoggedInBar","lightPalette","primary","indigo","secondary","main","teal","darkPalette","deepPurple","error","background","paper","default","lightTheme","createMuiTheme","darkTheme","localStorage","getItem","setItem","setTheme","ThemeProvider","CssBaseline","newTheme","children","LandingPage","Layout","WaitWraper","state","checkAuthenticated","this","setState","localToken","console","log","Component","contextType","PrivateRoute","LoggedIn","loggedOut","landingPage","path","rest","render","textField","padding","backgroundColor","textAlign","marginTop","button","card","maxWidth","borderRadius","media","height","ArtefactCard","mediaURI","name","description","Card","CardActionArea","CardMedia","image","CardContent","zeroMinWidth","Typography","gutterBottom","variant","noWrap","CardActions","size","popup","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","Map","MapType","artefacts","openArtefactID","setOpenArtefactID","style","mapStyle","containerStyle","mapState","e","map","artefact","center","initPopupOpen","length","artefactID","key","coordinates","src","alt","offset","bottom","geocodingService","require","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","ArtefactView","create","edit","view","statesLoading","familiesLoading","artefactLoading","artefactStates","families","artefactData","isAdmin","admin","artefactFamilyFormUseStyles","beingEdited","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","prevMapState","queryResults","locationState","setLocationState","addressIsSearchResult","setAddressIsSearchResult","handleGeocodeQuery","initial","newState","noErrors","Object","keys","belong","val","belongsToFamilies","belongsToFamiliesBools","date","handleSetField","fieldName","value","cancelEditing","handleUnselectedSearchField","pushViewArtefactURL","history","handleCreationCompleted","data","artefactCreate","updateCompleted","a","handleCreationError","errors","handleUpdateError","createArtefact","variables","successCallback","errorCallback","form_data","FormData","files","append","JSON","stringify","url","axios","post","headers","res","catch","err","useMutation","onCompleted","onError","updateArtefact","updateErrors","parseDate","toISOString","slice","submitForm","famIDs","filter","input","isPublic","saveChange","artefactInput","MyButton","EditButtons","FormHelperText","dataLoading","onSubmit","preventDefault","form","outerContainer","sm","Paper","paperWrapper","FormControl","formControl","TextField","label","autoFocus","required","inputProps","readOnly","onChange","target","disabled","select","multiline","rows","clearable","inputVariant","format","openTo","KeyboardButtonProps","alignContent","List","subheader","ListSubheader","dense","ListItem","ListItemIcon","Checkbox","edge","checked","tabIndex","ListItemText","family","familyName","initialFiles","dropzoneClass","dropzone","InputProps","endAdornment","iconButton","marginBottom","onKeyDown","keyCode","document","getElementById","click","helperText","Popover","undefined","disablePadding","nested","newLocationState","handleSetLocationResult","width","creationLoading","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","message","action","close","withRouter","utils","DateFnsUtils","direction","minHeight","GetFamiliesWrapper","Child","child","childProps","setFamilies","thisChildProps","useQuery","me","isMemberOf","loading","GetStatesWrapper","setArtefactStates","_saveArtefactStates","statesData","temp","__type","enumValues","desc","GetArtefactWrapper","params","marginLeft","display","flexWrap","submit","justifyContent","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","graphQLErrors","subMessage","substring","startsWith","login","Link","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","Logout","MyDialogTitle","DialogTitle","disableTypography","closeButton","CreateFamilyView","setFamilyName","about","setAbout","joinCode","setJoinCode","setOpen","_completed","familyCreate","createFamily","defaultValue","Dialog","DialogContent","align","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","upload","Error404View","href","overflow","icon","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","selectedFamily","_homepageInfoCompleted","home_data","called","selectFamily","inputLabel","useRef","profileId","hasArtefacts","GridList","cellHeight","cols","GridListTile","InputLabel","htmlFor","Select","newFamily","toFamily","overlay","top","right","minWidth","success","green","opacity","fontSize","MyDialogContent","DialogContentText","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","helpOpen","setHelpOpen","promiseArr","all","handleChange","zIndex","SelectProps","autoWidth","fam","aria-labelledby","DialogActions","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.505f361e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", \n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Loading() {\n    const useStyles = makeStyles(theme => ({\n        progress: {\n            margin: theme.spacing(2)\n        }\n    }))\n\n    const classes = useStyles()\n\n    return <CircularProgress className={classes.progress} />\n}\n\nexport default Loading\n","import React, { useContext } from 'react'\nimport { IconButton, Menu, MenuItem, Button } from '@material-ui/core'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nexport default props => {\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Button component={RouterLink} to='/family/create' color='inherit'>\n                Create Family\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/manage'\n                color='inherit'\n            >\n                Manage Artefacts\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/create'\n                color='inherit'\n            >\n                Create Artefact\n            </Button>\n            <Button component={RouterLink} to='/map/' color='inherit'>\n                Artefact Map\n            </Button>\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Typography,\n    Toolbar,\n    AppBar,\n    Button,\n    makeStyles,\n    Grid\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport Brightness3Icon from '@material-ui/icons/Brightness3'\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Link } from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n            {/* <AppBar position='static' color={dark ? 'inherit' : 'primary'} elevation={6}> */}\n                <Toolbar>\n                    <Grid container>\n                        <Grid item xs={2} container>\n                            <Button\n                                fullWidth\n                                component={RouterLink}\n                                to='/'\n                                color='inherit'\n                            >\n                                Home\n                            </Button>\n                        </Grid>\n\n                        <Grid item xs={10} container justify='flex-end' alignItems='center'>\n                            <IconButton\n                                className={classes.menuButton}\n                                color='inherit'\n                                aria-label='menu'\n                                onClick={props.onToggleDarkTheme}\n                            >\n                                {!dark ? (\n                                    <Brightness3Icon />\n                                ) : (\n                                    <BrightnessHighIcon />\n                                )}\n                            </IconButton>\n\n                            {loggedIn && <LoggedInBar username={username} />}\n                            {!loggedIn && <NotLoggedInBar />}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport {\n    teal,\n    blue,\n    deepPurple,\n    lightBlue,\n    indigo\n} from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        // light: deepPurple[100],\n        main: deepPurple['A100'],\n        // dark: deepPurple[500]\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nconst lightTheme = createMuiTheme({ palette: lightPalette, type: 'light' })\nconst darkTheme = createMuiTheme({ palette: darkPalette, type: 'dark' })\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header onToggleDarkTheme={toggleDarkTheme} />\n            {props.children}\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport Layout from '../components/Layout'\n\n// NB: REMOVE THE LAYOUT, THIS SHOULD NOT HAVE THE APP BAR, THIS SHOULD BE EXTRA COOL DESIGNED PAGE\nfunction LandingPage(props) {\n    return (\n        <Layout>\n            This is some cool landing page yo. Welcome!\n            <br />\n            Also, in the future, this page should not have a navigation bar,\n            it'll have cooler design stuff. It only has the nav bar for easier\n            linking to signup / login for now\n        </Layout>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        maxWidth: 345,\n        borderRadius: 10\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 140\n    }\n}))\n\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ mediaURI, name, description, id }) {\n    const classes = useStyles()\n\n    console.log(\"here's the mediaURI: \" + mediaURI)\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={mediaURI}\n                    title={name}\n                />\n                <CardContent>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    size='small'\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { useTheme } from '@material-ui/styles'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        // color: theme.palette.background.default,\n        // background: theme.palette.background.default,\n        // background: '#000 !important',\n        // color: '#000 !important'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    return (\n        <MapType\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={e => setOpenArtefactID('')}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, ...rest } = artefact\n                if (!center || !center.length) {\n                    return\n                }\n                var artefactID = artefact.id\n                return (\n                    <Fragment key={artefactID}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => {\n                                if (openArtefactID === artefactID) {\n                                    setOpenArtefactID('')\n                                } else {\n                                    setOpenArtefactID(artefactID)\n                                }\n                                if (artefact.initPopupOpen){\n                                    artefact.initPopupOpen = false\n                                }\n                            }}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup &&\n                            (openArtefactID === artefactID ||\n                                initPopupOpen) && (\n                                <Popup\n                                    coordinates={center}\n                                    className={classes.popup}\n                                    offset={{\n                                        'bottom-left': [12, -38],\n                                        bottom: [0, -38],\n                                        'bottom-right': [-12, -38]\n                                    }}\n                                    // style={{color: '#000000'}}\n                                >\n                                    <ArtefactCard {...rest} />\n                                </Popup>\n                            )}\n                    </Fragment>\n                )\n            })}\n        </MapType>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`","import React, { useContext, useState, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Grid,\n    Typography,\n    MenuItem,\n    Snackbar,\n    IconButton,\n    FormControl,\n    Popover,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListSubheader,\n    ListItemText,\n    Checkbox,\n    Paper,\n    FormHelperText,\n    ClickAwayListener,\n    Popper\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { useTheme } from '@material-ui/styles'\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker\n} from '@material-ui/pickers'\n\nimport {\n    Loading,\n    Map,\n    geocodeQuery,\n    artefactFamilyFormUseStyles\n} from '../components'\nimport authContext from '../authContext'\nimport { useMutation } from '@apollo/react-hooks'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport SearchIcon from '@material-ui/icons/Search'\nimport axios from 'axios';\n\nimport { Layout } from '../components'\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION\n} from '../gqlQueriesMutations'\nimport { AUTH_TOKEN, config } from '../constants'\n\nfunction ArtefactView(props) {\n    // get the mode\n    var { create, edit, view } = props\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    var { artefactStates, families } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors, creationLoading;\n\n    if (!create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && edit) {\n        edit = false\n        view = true\n    }\n\n    const theme = useTheme()\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (edit || view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families\n    ) {\n        var belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n        \n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (create && families && !state.belongsToFamiliesBools) {\n        var belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        console.log(\"here's the data\")\n        console.log(data)\n        var id = data.data.artefactCreate.artefact.id\n        pushViewArtefactURL(id)\n    }\n\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n\n    const createArtefact = async (variables, successCallback, errorCallback) => {\n        console.log(\"here's input from call\")\n        console.log(variables);\n        // const input = \"hello\"\n        let form_data = new FormData();\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0]);\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR);\n        form_data.append('variables', JSON.stringify(variables));\n        let url = config.uri;\n        axios.post(url, form_data, {\n            headers: {\n                'Authorization': \"JWT \" + localStorage.getItem(AUTH_TOKEN),\n                'Content-Type': 'application/x-www-form-urlencoded',\n                \"Content-Transfer-Encoding\": \"multipart/form-data\",\n            },\n        }).then(res => {\n            successCallback(res.data)\n        })\n        .catch((err) => {\n            // console.error(err);\n            errorCallback(err)\n        })\n\n    };\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        // in createArtefact\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : '',\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n\n        createArtefact(input, handleCreationCompleted, handleCreationError);\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            // TODO:\n            const variables = {\n                \"name\": \"hello\",\n                \"state\": \"OKY\",\n                \"description\": \"here's a short desc\"\n            }\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    // buttons to be rendered beneath a field when being edited\n    function EditButtons() {\n        return (\n            <Grid\n                container\n                justify='space-evenly'\n                alignItems='center'\n                spacing={1}\n                style={{ marginTop: 1 }}\n            >\n                <Grid item xs={6}>\n                    <MyButton\n                        onClick={saveChange}\n                        name='Save'\n                        color='primary'\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <MyButton\n                        onClick={cancelEditing}\n                        name='Cancel'\n                        color='secondary'\n                    />\n                </Grid>\n\n                {updateErrors && (\n                    <Grid item xs={12}>\n                        <FormHelperText error>\n                            Error Updating Artefact\n                        </FormHelperText>\n                    </Grid>\n                )}\n            </Grid>\n        )\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        create ? submitForm(e) : saveChange(e)\n    }\n\n    if ((edit || view) && dataLoading) {\n        return <Loading />\n    }\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <form onSubmit={submitHandler} className={classes.form}>\n                <Grid container className={classes.outerContainer} spacing={1}>\n                    <Grid item xs={12} container justify='center'>\n                        <Grid item xs={12} sm={8}>\n                            <Typography variant='h4' className={classes.title}>\n                                {create && 'Create'} {edit && 'Edit'}{' '}\n                                {view && 'View'} Artefact\n                            </Typography>\n                            {!view && (\n                                <Typography\n                                    variant='subtitle1'\n                                    className={classes.title}\n                                >\n                                    {create &&\n                                        'Artefacts are belongings of the family, enter as much or as little detail as you like'}\n                                    {edit && 'Click to start editing'}\n                                </Typography>\n                            )}\n                        </Grid>\n                    </Grid>\n                    {/* Left Pane */}\n                    <Grid item xs={12} sm={6} container spacing={1}>\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        // style={{ height: '100%' }}\n                                        // InputProps={{ style: {height: '100%'} }}\n                                        id='artefact-name'\n                                        label='Artefact name'\n                                        variant='outlined'\n                                        autoFocus={!view}\n                                        required\n                                        fullWidth\n                                        value={state.name || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'name',\n                                                e.target.value\n                                            )\n                                        }\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'name'\n                                        }\n                                    />\n\n                                    {edit && beingEdited === 'name' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='state'\n                                        label='Artefact State'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={state.state || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'state',\n                                                e.target.value\n                                            )\n                                        }\n                                        select\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'state'\n                                        }\n                                    >\n                                        {Object.keys(artefactStates).map(\n                                            value => {\n                                                return (\n                                                    <MenuItem\n                                                        value={\n                                                            props\n                                                                .artefactStates[\n                                                                value\n                                                            ]\n                                                        }\n                                                        key={value}\n                                                    >\n                                                        {value}\n                                                    </MenuItem>\n                                                )\n                                            }\n                                        )}\n                                    </TextField>\n\n                                    {edit && beingEdited === 'state' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        multiline\n                                        rows={6}\n                                        value={state.description || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'description',\n                                                e.target.value\n                                            )\n                                        }\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'description'\n                                        }\n                                    />\n\n                                    {edit && beingEdited === 'description' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='artefact-admin'\n                                        label='Artefact Admin'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={\n                                            state.admin &&\n                                            Object.keys(state.admin).length !==\n                                                0\n                                                ? state.admin.username\n                                                : context.user.username\n                                        }\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            console.log(\n                                                'admin field was changed'\n                                            )\n                                        }\n                                        disabled\n                                    />\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <KeyboardDatePicker\n                                        disabled={view}\n                                        clearable\n                                        // variant='inline'\n                                        inputVariant='outlined'\n                                        format='dd/MM/yyyy'\n                                        openTo='year'\n                                        label='Date'\n                                        value={state.date}\n                                        onChange={date =>\n                                            handleSetField('date', date)\n                                        }\n                                        KeyboardButtonProps={{\n                                            'aria-label': 'change date'\n                                        }}\n                                    />\n                                    {edit && beingEdited === 'date' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    {/* Right Pane */}\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        spacing={1}\n                        alignContent='stretch'\n                    >\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <List\n                                        subheader={\n                                            <ListSubheader component='div'>\n                                                Privacy\n                                            </ListSubheader>\n                                        }\n                                        dense\n                                    >\n                                        <ListItem\n                                            disabled={\n                                                edit &&\n                                                !!beingEdited &&\n                                                beingEdited !== 'isPublic'\n                                            }\n                                        >\n                                            {!view && (\n                                                <ListItemIcon>\n                                                    <Checkbox\n                                                        edge='start'\n                                                        checked={\n                                                            state.isPublic ||\n                                                            false\n                                                        }\n                                                        tabIndex={-1}\n                                                        onClick={e =>\n                                                            handleSetField(\n                                                                'isPublic',\n                                                                e.target.checked\n                                                            )\n                                                        }\n                                                    />\n                                                </ListItemIcon>\n                                            )}\n                                            <ListItemText primary={'Public'} />\n                                        </ListItem>\n                                    </List>\n\n                                    {edit && beingEdited === 'isPublic' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <List\n                                        subheader={\n                                            <ListSubheader component='div'>\n                                                {!view\n                                                    ? 'Select which of your families the artefact belongs to'\n                                                    : 'Belongs to'}\n                                            </ListSubheader>\n                                        }\n                                    >\n                                        {families.map(family => {\n                                            if (!state.belongsToFamiliesBools) {\n                                                return\n                                            }\n\n                                            if (\n                                                !view ||\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ]\n                                            ) {\n                                                return (\n                                                    <ListItem\n                                                        key={family.id}\n                                                        dense\n                                                        disabled={\n                                                            edit &&\n                                                            !!beingEdited &&\n                                                            beingEdited !==\n                                                                'belongsToFamiliesBools'\n                                                        }\n                                                    >\n                                                        {!view && (\n                                                            <ListItemIcon>\n                                                                <Checkbox\n                                                                    edge='start'\n                                                                    checked={\n                                                                        state\n                                                                            .belongsToFamiliesBools[\n                                                                            family\n                                                                                .id\n                                                                        ] ||\n                                                                        false\n                                                                    }\n                                                                    onClick={e =>\n                                                                        handleSetField(\n                                                                            'belongsToFamiliesBools',\n                                                                            {\n                                                                                ...state.belongsToFamiliesBools,\n                                                                                [family.id]:\n                                                                                    e\n                                                                                        .target\n                                                                                        .checked\n                                                                            }\n                                                                        )\n                                                                    }\n                                                                    tabIndex={\n                                                                        -1\n                                                                    }\n                                                                />\n                                                            </ListItemIcon>\n                                                        )}\n                                                        <ListItemText\n                                                            primary={\n                                                                family.familyName\n                                                            }\n                                                        />\n                                                    </ListItem>\n                                                )\n                                            }\n                                        })}\n                                    </List>\n\n                                    {edit &&\n                                        beingEdited ===\n                                            'belongsToFamiliesBools' && (\n                                            <EditButtons />\n                                        )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        {/* TO DO: show images in different way on view page */}\n                        {!view && (\n                            <Grid item xs={12}>\n                                <Paper\n                                    className={classes.paperWrapper}\n                                    elevation={3}\n                                >\n                                    <DropzoneArea\n                                        initialFiles={state.files || []}\n                                        onChange={files =>\n                                            handleSetField('files', files)\n                                        }\n                                        dropzoneClass={classes.dropzone}\n                                    />\n                                </Paper>\n                            </Grid>\n                        )}\n                    </Grid>\n\n                    <Grid container item xs={12} spacing={1}>\n                        <Grid item xs={12}>\n                            <Paper\n                                className={classes.paperWrapper}\n                                elevation={3}\n                            >\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='address'\n                                        label='Address'\n                                        variant='outlined'\n                                        fullWidth\n                                        value={state.address || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e => {\n                                            handleSetField(\n                                                'address',\n                                                e.target.value\n                                            )\n                                            if (e.target.value) {\n                                                setAddressIsSearchResult(false)\n                                            } else {\n                                                // allow blank address\n                                                setAddressIsSearchResult(true)\n                                            }\n                                        }}\n                                        error={!!locationState.error}\n                                        InputProps={{\n                                            endAdornment: !view && (\n                                                <IconButton\n                                                    className={\n                                                        classes.iconButton\n                                                    }\n                                                    aria-label='search'\n                                                    id='search'\n                                                    onClick={e =>\n                                                        handleGeocodeQuery({\n                                                            query:\n                                                                state.address,\n                                                            initial: false\n                                                        })\n                                                    }\n                                                >\n                                                    <SearchIcon />\n                                                </IconButton>\n                                            ),\n                                            style: { marginBottom: 3 }\n                                        }}\n                                        onKeyDown={e => {\n                                            if (e.keyCode === 13 && !view) {\n                                                e.preventDefault()\n                                                document\n                                                    .getElementById('search')\n                                                    .click()\n                                            }\n                                        }}\n                                        helperText={locationState.error}\n                                    />\n                                    <Popover\n                                        id={\n                                            locationState.queryResults.length\n                                                ? 'results'\n                                                : undefined\n                                        }\n                                        open={\n                                            !!locationState.queryResults.length\n                                        }\n                                        anchorEl={document.getElementById(\n                                            'address'\n                                        )}\n                                        onClose={e =>\n                                            setLocationState({\n                                                ...locationState,\n                                                queryResults: []\n                                            })\n                                        }\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'left'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'left'\n                                        }}\n                                    >\n                                        <List component='div' disablePadding>\n                                            {locationState.queryResults.map(\n                                                result => (\n                                                    <ListItem\n                                                        key={result.placeName}\n                                                        button\n                                                        className={\n                                                            classes.nested\n                                                        }\n                                                        onClick={e =>\n                                                            handleSetLocationResult(\n                                                                result\n                                                            )\n                                                        }\n                                                    >\n                                                        <ListItemText\n                                                            primary={\n                                                                result.placeName\n                                                            }\n                                                        />\n                                                    </ListItem>\n                                                )\n                                            )}\n                                        </List>\n                                    </Popover>\n\n                                    {edit && beingEdited === 'address' && (\n                                        <EditButtons />\n                                    )}\n\n                                    <Grid container style={{ marginTop: 1 }}>\n                                        <Map\n                                            interactive={false}\n                                            className={classes.map}\n                                            mapStyle={mapStyle}\n                                            mapState={locationState.mapState}\n                                            containerStyle={{\n                                                height: '60vh',\n                                                width: '100vw',\n                                                borderRadius: 20,\n                                                marginTop: 5\n                                            }}\n                                            artefacts={[\n                                                {\n                                                    center:\n                                                        locationState.mapState\n                                                            .center\n                                                }\n                                            ]}\n                                        />\n                                    </Grid>\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    {create && (\n                        <Grid item xs={5}>\n                            <Button\n                                name='create'\n                                label='Create'\n                                type='submit'\n                                fullWidth\n                                variant='contained'\n                                color='primary'\n                                disabled={creationLoading}\n                            >\n                                Create\n                            </Button>\n                            {!noErrors && (\n                                <FormHelperText error={!noErrors}>\n                                    Unknown Error Occurred\n                                </FormHelperText>\n                            )}\n                        </Grid>\n                    )}\n                </Grid>\n\n                <ClickAwayListener onClickAway={() => setSnackbarOpen(false)}>\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left'\n                        }}\n                        open={snackbarOpen}\n                        autoHideDuration={2000}\n                        onClose={() => setSnackbarOpen(false)}\n                        ContentProps={{\n                            'aria-describedby': 'message-id'\n                        }}\n                        message={<span id='message-id'>Edit successful</span>}\n                        action={[\n                            <Button\n                                key='view'\n                                color='secondary'\n                                size='small'\n                                onClick={e => pushViewArtefactURL(artefact.id)}\n                            >\n                                VIEW\n                            </Button>,\n                            <IconButton\n                                key='close'\n                                aria-label='close'\n                                color='inherit'\n                                onClick={() => setSnackbarOpen(false)}\n                                className={classes.close}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        ]}\n                    />\n                </ClickAwayListener>\n            </form>\n        </Fragment>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <Layout>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid\n                    container\n                    spacing={0}\n                    direction='column'\n                    alignItems='center'\n                    justify='center'\n                    style={{ minHeight: '80vh' }}\n                >\n                    <Grid item xs={10}>\n                        <ArtefactView {...props} />\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Layout>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React, { useState } from 'react'\nimport ArtefactView from '../views/ArtefactView'\nimport { Layout } from '.'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport ArtefactView from '../views/ArtefactView'\nimport { Layout } from '../components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState, useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\nimport authContext from '../authContext'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.error(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'center',\n        textAlign: 'left'\n    },\n    title: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        height: '100%',\n        alignItems: 'center',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '80px',\n        borderRadius: 10\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    }\n}))\n","import React, { useState, useContext, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout, formUseStyles } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = formUseStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='inherit'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Login {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport { Layout, formUseStyles } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = formUseStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='inherit'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Signup {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Grid,\n    Paper,\n    FormControl\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nconst MyDialogTitle = props => {\n    const classes = artefactFamilyFormUseStyles()\n    const { children, onClose } = props\n\n    return (\n        <DialogTitle disableTypography className={classes.root}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label='close'\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitle>\n    )\n}\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        console.log(data)\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('Family name: ' + familyName)\n        console.log('About: ' + about)\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid\n                container\n                spacing={1}\n                className={classes.outerContainer}\n                spacing={1}\n            >\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4' className={classes.title}>\n                        Create Family\n                    </Typography>\n\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e => console.log('hello')}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <MyDialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </MyDialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </form>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { config } from '../constants'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    container: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery($first: Int!) {\n        me {\n            artefactAdministratorOf(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n\n    const classes = useStyles()\n    const numArtefactsFetched = 10\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        variables: {\n            first: numArtefactsFetched\n        },\n        onCompleted: data =>\n            SetArtefactEdges(data.me.artefactAdministratorOf.edges)\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={2} className={classes.container}>\n                <Grid item xs={12}>\n                    <Grid container justify='center' spacing={2}>\n                        {artefactEdges.map(edge => (\n                            <Grid item key={edge.node.id}>\n                                <ArtefactCard\n                                    mediaURI={config.mediaRoot + edge.node.upload}\n                                    name={edge.node.name}\n                                    description={edge.node.description}\n                                    id={edge.node.id}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt=''/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Typography, CssBaseline, Button, TextField, Grid,\nFormControl } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport ArtefactCard from '../components/ArtefactCard';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n        query {\n            me {\n            isMemberOf {\n            id\n            familyName\n            joinCode\n            hasArtefacts {\n                edges {\n                node {\n                    id\n                    name\n                    admin {\n                    username\n                    }\n                }\n                }\n            }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                        hasArtefacts {\n                            edges {\n                                node {\n                                    id\n                                    name\n                                    description\n                                    upload\n                                }\n                            }\n                        }\n                    }\n                }\n        }\n    }`\n\nconst JOIN_FAMILY_MUTATION = gql`\nmutation JoinFamily($joinCode: String!) {\n  familyJoin(joinCode: $joinCode) {\n    family {\n      familyName\n      familyAdmin {\n          username\n      }\n    }\n  }\n}`\n\nconst SELECT_FAMILY_MUTATION = gql`\nmutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n    updateProfile(input: {\n        id: $profileId,\n        selectedFamily: $toFamily\n    }) {\n        id\n        selectedFamily\n    }\n}`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n    const [formJoinCode, setFormJoinCode] = useState(\"\")\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error(\"Enter a valid joinCode\");\n            return;\n        }\n\n        joinFamilyMutation({variables: {joinCode: formJoinCode }})\n    }\n\n    const _homepageInfoCompleted = (data) => {\n        const selectedFamily = data.me.profile.selectedFamily\n        if (!selectedFamily) {\n            console.error(\"User has not selected a family\");\n            return;\n        }\n    }\n\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(HOMEPAGE_INFO, {\n        onCompleted: (data) => {\n            _homepageInfoCompleted(data)\n        }\n    })\n\n\n    const [selectFamily, { data: mutation_data }] = useMutation(SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const inputLabel = React.useRef(null);\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value;\n        selectFamily({ variables: { profileId: profileId, toFamily: newFamily } })\n    };\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    const selectedFamily = home_data.me.profile.selectedFamily\n    const families = home_data.me.isMemberOf;\n    const profileId = home_data.me.profile.id;\n    let artefacts = []\n    \n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges;\n    }\n    \n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    {selectedFamily && (\n                        <div>\n                        <Typography variant=\"h1\">{selectedFamily.familyName}</Typography>\n                        <Typography variant=\"h5\">Join code: {selectedFamily.joinCode}</Typography>\n                        </div>\n                    )}\n                    {!selectedFamily && (\n                        <Typography variant=\"h2\">Join and/or Select a Family</Typography>\n                    )}\n                    <h4>Your username is (temp, for testing): {username}</h4>\n                    <GridList cellHeight={\"auto\"} cols={2}>\n                        {artefacts.map((artefact, key) => (\n                            <GridListTile\n                                key={key}>\n                                <ArtefactCard\n                                    key={key}\n                                    mediaURI={artefact.node.upload}\n                                    name={artefact.node.name}\n                                    description={artefact.node.description}\n                                    id={artefact.node.id} />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={3}>\n                    <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                        Select Family\n                    </InputLabel>\n                    <Select\n                        variant='outlined'\n                        fullWidth\n                        disabled={families.length <= 1}\n                        value={selectedFamily ? selectedFamily.id : null}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-simple',\n                        }}\n                    >\n                        {families && (families.map((item, key) =>\n                            <MenuItem\n                                key={item.id}\n                                value={item.id}\n                            >\n                                {item.familyName}\n                            </MenuItem>\n                        )\n                        )}\n                    </Select>\n                    <FormControl\n                    fullWidth\n                    >\n                    <TextField \n                        id=\"joinCodeField\"\n                        label=\"Join a family\"\n                        value={formJoinCode}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        onChange={e => setFormJoinCode(e.target.value)}\n                        fullWidth\n                    />\n                    <Button\n                        variant=\"outlined\" \n                        onClick={handleJoinFamily}\n                    >\n                        Join Family\n                    </Button>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React, { useState, Fragment, useRef } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, Layout } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to open a popup\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n    const target = useRef(null)\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const [mapState, setMapState] = useState({\n        zoom: [2]\n    })\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const [helpOpen, setHelpOpen] = useState(false)\n    const getArtefactMapData = data => {\n        if (!data) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        }\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact'){\n            setMapState({\n                ...mapState,\n                center: event.target.value.center\n            })\n            event.target.value.initPopupOpen = true\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {/* {mapArtefacts && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Go to artefact'\n                                variant='outlined'\n                                value={state.selectedArtefact}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                <MenuItem value={{}}>None</MenuItem>\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem value={artefact}>\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )} */}\n\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='menu'\n                    onClick={() => setHelpOpen(true)}\n                >\n                    <HelpIcon />\n                </IconButton>\n            </Grid>\n\n            <Dialog\n                fullWidth\n                maxWidth='sm'\n                open={helpOpen}\n                onClose={() => setHelpOpen(false)}\n                aria-labelledby='help-title'\n            >\n                <MyDialogContent />\n                <DialogActions>\n                    <Button onClick={() => setHelpOpen(false)} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <GetFamiliesWrapper {...props} child={MapView} />\n    </Layout>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\nimport Layout from './components/Layout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/CreateArtefactView'\nimport DetailView from './views/DetailView'\nimport ManageArtefactsView from './views/ManageArtefactsView'\nimport EditArtefactView from './views/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                        landingPage\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}