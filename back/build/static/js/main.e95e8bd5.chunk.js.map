{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/Loading.js","components/PrivateRoute.js","views/HomeView.js","views/CreateView.js","views/DetailView.js","views/LoginView.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","VERIFY_TOKEN_MUTATION","gql","props","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Button","component","RouterLink","to","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","MenuAppBar","classes","loggedIn","className","AppBar","position","Toolbar","edge","Typography","variant","Link","LoggedInBar","username","NotLoggedInBar","Container","style","padding","children","Loading","progress","margin","Layout","CircularProgress","WaitWraper","state","checkAuthenticated","console","log","this","setState","localToken","localStorage","getItem","Component","contextType","PrivateRoute","rest","render","HomeView","CREATE_ARTEFACT","CreateView","name","description","useMutation","createArtefact","loading","data","errors","onSubmit","e","preventDefault","variables","value","node","type","ARTEFACT_DETAIL","DetailView","useQuery","params","artefact","addedAt","LOGIN_MUTATION","body","backgroundColor","palette","common","white","paper","marginTop","display","flexDirection","alignItems","form","width","submit","Login","setUsername","password","setPassword","invalidCred","setInvalidCred","_confirm","a","token","tokenAuth","setItem","history","push","_handleError","graphQLErrors","subMessage","message","substring","startsWith","onCompleted","onError","login","submitForm","CssBaseline","Grid","container","item","xs","TextField","required","fullWidth","label","autoFocus","onChange","target","error","FormHelperText","SIGNUP_MUTATION","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","signup","autoComplete","disabled","Logout","CREATE_FAMILY_MUTATION","DialogTitle","withStyles","closeButton","right","top","grey","disableTypography","DialogContent","MuiDialogContent","CreateFamilyView","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","setOpen","_completed","familyCreate","family","createFamily","multiline","rows","defaultValue","Dialog","align","App","exact","path","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","then","setSession","catch","verifyToken","payload","authProviderValue","pushState","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e95e8bd5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", // a\n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\n\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React, { useContext } from 'react';\nimport { IconButton, Menu, MenuItem, Button } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport authContext from '../authContext';\nimport { Link as RouterLink } from 'react-router-dom'\n\nexport default props => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const context = useContext(authContext);\n    const open = Boolean(anchorEl);\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    function handleLogout() {\n        context.logout();\n    }\n\n    return (\n        <div>\n            <Button component={RouterLink} to='/family/create' color=\"inherit\">\n                Create Family\n            </Button>\n            <Button color=\"inherit\">\n                Manage Artefacts\n            </Button>\n            <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport LoggedInBar from './LoggedInBar';\nimport NotLoggedInBar from './NotLoggedInBar';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link }  from '@material-ui/core';\n\nimport authContext from '../authContext';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function MenuAppBar() {\n    const classes = useStyles();\n    const context = useContext(authContext);\n    let loggedIn = context.authenticated;\n    let username = null;\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        <Link component={RouterLink} to='/' color=\"inherit\" variant=\"inherit\" underline=\"none\">\n                            Family AR\n                        </Link>\n                    </Typography>\n            {loggedIn && (\n                <LoggedInBar username={username} />\n            )}\n            {!loggedIn && (\n                <NotLoggedInBar />\n            )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport Header from './Header';\n\nexport default props => {\n\n    const containerStyles = {\n        padding: '20px',\n    }\n\n    return (\n        <div>\n            <Header />\n            <Container style={containerStyles}>\n                {props.children}\n            </Container>\n        </div>\n    );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../components/Layout';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Loading() {\n    const useStyles = makeStyles(theme => ({\n        progress: {\n            margin: theme.spacing(2),\n        },\n    }));\n\n    const classes = useStyles();\n\n    return (\n        <Layout>\n            <CircularProgress className={classes.progress} />\n        </Layout>\n    );\n}\n\nexport default Loading;\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        console.log(\"did I mount?\");\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({component: Component, ...rest}) => {\n    console.log(\"Begin private route\");\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <Component {...props} />\n                    } else {\n                        return (\n                            <Redirect to='/login' />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}\n","import React, { useContext } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\n\nfunction HomeView(props) {\n\n    const context = useContext(authContext);\n    const loggedIn = context.authenticated;\n    const username = context.user.username;\n    return (\n        <Layout>\n            {loggedIn && (\n                <p>Hello user: {username}</p>\n            )}\n        </Layout>\n        \n    );\n}\n\nexport default HomeView\n","import React from 'react'\nimport gql from \"graphql-tag\";\nimport { useMutation } from '@apollo/react-hooks';\n\nconst CREATE_ARTEFACT = gql`\nmutation ArtefactCreate($artefactInput:ArtefactInputType!) {\n  artefactCreate(input: $artefactInput) {\n    artefact {\n      name,\n      description\n    }\n  }\n}`\n\nexport default function CreateView(props) {\n    let name, description;\n    // eslint-disable-next-line\n    const [createArtefact, { data, loading, errors }] = useMutation(CREATE_ARTEFACT);\n    if (loading) {\n        return <div>Loading...</div>;\n    } else if (errors) {\n        return <p>ERROR!</p>\n    }\n\n    return (\n        <div>\n            <h1>Create an Artefact</h1>\n            <form\n                onSubmit={e => {\n                    e.preventDefault();\n                    createArtefact({ variables: {\n                        \"artefactInput\": {\n                            \"name\": name.value,\n                            \"description\": description.value\n                        }\n                    }\n                    });\n                    name.value = '';\n                    description.value = '';\n                }}\n            >\n                <label>Name</label>\n                <input\n                    ref={node => {\n                        name = node;\n                    }}\n                />\n                <br />\n                <label>Description</label>\n                <input\n                    ref={node => {\n                        description = node;\n                    }}\n                />\n                <br />\n                <button type=\"submit\">Create</button>\n            </form>\n        </div>\n    );\n}\n","import React from 'react'\nimport gql from \"graphql-tag\";\nimport { useQuery } from '@apollo/react-hooks';\n\nconst ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id,\n            name,\n            description,\n            addedAt\n        }\n    }`\n\nexport default function DetailView(props) {\n    let { data, loading, errors } = useQuery(ARTEFACT_DETAIL, {\n        variables: { id: props.match.params.id }\n    })\n    if (loading) {\n        return <p>Loading...</p>\n    } else if (errors) { return <p>ERROR!</p> }\n    return (\n        <div>\n            <h1>{data.artefact.name} - #{data.artefact.id}</h1>\n            <p>{data.artefact.addedAt}</p>\n            <p>{data.artefact.description}</p>\n        </div>\n\n    )\n}","import React, { useState, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks';\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from \"../constants.js\"\n\n\nconst LOGIN_MUTATION = gql`\nmutation TokenAuth($username: String!, $password: String!) {\n    tokenAuth(username: $username, password: $password) {\n        token\n    }\n}\n`\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '50%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction Login(props) {\n\n    const context = useContext(authContext);\n    const classes = useStyles();\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [invalidCred, setInvalidCred] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        console.log(\"getting token first in confirm mutation\");\n        context.handleAuthentication(token);\n        localStorage.setItem(AUTH_TOKEN, token);\n        // this._saveUserData(token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log(\"_handleError run\")\n        if (errors.graphQLErrors){\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)){\n                setInvalidCred(true)\n                console.log(\"invalid credentials\")\n            } else {\n                console.log(\"unexpect error(s):\")\n                console.log(errors)\n            }\n        }\n    }\n\n    const [login, { data }] = useMutation(\n        LOGIN_MUTATION,\n        {\n            onCompleted: _confirm,\n            onError: _handleError,\n        }\n    );\n\n    const submitForm = async (event) => {\n        login({ variables: {username: username, password: password} })\n        event.preventDefault();\n    }\n\n    return (\n        <Layout>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <form className={classes.form} onSubmit={submitForm}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Log In\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                autoFocus\n                                onChange={e => setUsername(e.target.value)}\n                                error={invalidCred}\n                                />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                onChange={e => setPassword(e.target.value)}\n                                error={invalidCred}\n                                />\n                            {\n                                invalidCred &&\n                                <FormHelperText id=\"password\" error={invalidCred}>Please enter valid credentials</FormHelperText>\n                            }\n                        </Grid>\n                        \n                        <Grid item xs={12}>\n                            <Button\n                                name=\"submit\"\n                                label=\"Submit\"\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                >\n                                Log In\n                            </Button>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Grid item>\n                                <Link component={RouterLink} to=\"/signup\">\n                                    Need an account? Sign up\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Layout>\n    );\n}\n\nexport default Login\n","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../components/Layout';\n\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks';\nimport { USERNAME_TAKEN_ERR_MSG } from \"../constants.js\"\n\nconst SIGNUP_MUTATION = gql`\nmutation SignupMutation($email: String!, $password: String!, $username: String!){\n    createUser(email: $email, username: $username, password: $password) {\n        user {\n            id\n            username\n            email\n        }\n    }\n}\n`\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '50%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction Signup(props) {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n\n    const classes = useStyles();\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log(\"_handleError run\")\n        if (errors.graphQLErrors){\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)){\n                setUsernameIsTaken(true)\n            } else {\n                console.log(errors)\n            }\n        }\n    }\n\n    const [signup, { data }] = useMutation(\n        SIGNUP_MUTATION,\n        {\n            onCompleted: _confirm,\n            onError: _handleError,\n        }\n    );\n\n    const submitForm = async (event) => {\n        console.log(\"form submitted\")\n        signup({ variables: {username: username, email: email, password: password} })\n        event.preventDefault();\n    }\n\n    return (\n        <Layout>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <form className={classes.form} onSubmit={submitForm}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Sign up\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"username\"\n                                name=\"username\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"Username\"\n                                autoFocus\n                                error={usernameIsTaken}\n                                onChange={e => setUsername(e.target.value)}\n                                />\n                            {\n                                usernameIsTaken &&\n                                <FormHelperText id=\"username\" error={usernameIsTaken}>Username is taken</FormHelperText>\n                            }\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                type=\"email\"\n                                error={emailIsTaken}\n                                onChange={e => setEmail(e.target.value)}\n                                />\n                            {\n                                emailIsTaken &&\n                                <FormHelperText id=\"email\" error={emailIsTaken}>Email is taken</FormHelperText>\n                            }\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={ e => setPassword(e.target.value)}\n                                />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"confirmPassword\"\n                                label=\"Confirm Password\"\n                                type=\"password\"\n                                id=\"confirmPassword\"\n                                autoComplete=\"current-password\"\n                                onChange={ e => setConfirmPassword(e.target.value)}\n                                error={!(confirmPassword === password)}\n                                />\n                            {\n                                !(confirmPassword === password) &&\n                                <FormHelperText id=\"confirmPassword\" error={!(confirmPassword === password)}>Passwords must match</FormHelperText>\n                            }\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Button\n                                name=\"submit\"\n                                label=\"Submit\"\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={!(confirmPassword === password)}\n                                >\n                                Sign Up\n                            </Button>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Grid item>\n                                <Link component={RouterLink} to=\"/login\">\n                                    Already have an account? Log in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Layout>\n    );\n}\n\nexport default Signup\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport { IconButton } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '50%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nconst CREATE_FAMILY_MUTATION = gql`\nmutation FamilyCreate($familyName: String!, $about: String) {\n  familyCreate(input: {\n    familyName: $familyName\n    about:$about\n  })\n  {\n    family {\n      familyName\n      joinCode\n    }\n  }\n}\n`\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n    const { children, classes, onClose } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nexport default function CreateFamilyView (props) {\n\n    const classes = useStyles();\n\n    const context = useContext(authContext);\n    const username = context.user.username;\n\n    const [familyName, setFamilyName] = useState(\"\")\n    const [about, setAbout] = useState(\"\")\n    const [joinCode, setJoinCode] = useState(\"\")\n    const [open, setOpen] = useState(false)\n\n    const _completed = async (data) => {\n        console.log(data);\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode);\n        setOpen(true);\n    }\n\n    const [createFamily, { data }] = useMutation(\n        CREATE_FAMILY_MUTATION, {\n            onCompleted: _completed,\n        }\n    );\n\n    const submitForm = async (event) => {\n        event.preventDefault();\n        console.log(\"Family name: \" + familyName)\n        console.log(\"About: \" + about)\n        createFamily(\n            { \n                variables:\n                { \n                    familyName: familyName, \n                    about: about \n                } \n            })\n    }\n    \n    const handleClose = (event) => {\n        event.preventDefault();\n        setOpen(false);\n    }\n\n    return (\n        <Layout>\n            <h1>Create a Family</h1>\n            <p>Families are how you manage your artefacts. We recognise there is often complex overlap between families.\n                That's why you can create and be a part of several families, so you can separate which of the artefacts\n                you manage belong to which family.</p>\n            \n            <CssBaseline />\n            <div className={classes.paper}>\n                <form className={classes.form} onSubmit={submitForm}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Create Family\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"family-name\"\n                                label=\"Family name\"\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id=\"about\"\n                                label=\"Tell people about your family\"\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id=\"family-admin\"\n                                label=\"Family Admin\"\n                                onChange={e => console.log(\"hello\")}\n                            />\n\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Button\n                                name=\"create\"\n                                label=\"Create\"\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                            >\n                                Create\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n\n                {data && (\n                    <Dialog open={open} onClose={handleClose}>\n                        <DialogTitle onClose={handleClose}>\n                            Begin adding members to '{familyName}'!\n                        </DialogTitle>\n                        <DialogContent>\n                            <Typography align='center'>\n                                Begin getting members to join your family!\n                                Simply share the code below to your family members, get them to sign up and then they\n                                can join!<br />\n                                {joinCode}\n                            </Typography>\n                            \n                        </DialogContent>\n                    </Dialog>\n                )}\n            </div>\n        </Layout>\n\n    );\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { PrivateRoute } from './components/PrivateRoute';\n\n// Views\nimport HomeView from './views/HomeView'\nimport CreateView from './views/CreateView'\nimport DetailView from './views/DetailView'\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Switch>\n                        {/* We may want to change this later, to have a separate / display if not logged in */}\n                        <PrivateRoute exact path=\"/\" component={HomeView} />\n                        {/* User auth routes */}\n                        <Route exact path=\"/login/\" component={Login} />\n                        <Route exact path=\"/signup/\" component={Signup} />\n                        <Route exact path=\"/logout/\" component={Logout} />\n\n                        {/* Artefact routes */}\n                        <PrivateRoute exact path=\"/artefacts/create/\" component={CreateView} />\n                        <PrivateRoute exact path=\"/artefacts/:id/\" component={DetailView} />\n\n                        {/* Family routes */}\n                        <PrivateRoute exact path=\"/family/create\" component={CreateFamilyView} />\n                        \n                    </Switch>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { setContext } from 'apollo-link-context';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport Auth from './components/Auth';\n\nimport App from './App';\nimport { AUTH_TOKEN } from './constants'\n\n// Dev\n// const httpLink = createHttpLink({\n//     uri: 'http://127.0.0.1:8000/graphql/'\n// })\n\n// TODO: Prod (test), fix this later\nconst httpLink = createHttpLink({\n  uri: 'https://glacial-caverns-32653.herokuapp.com/graphql/'\n})\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(AUTH_TOKEN);\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n// const client = new ApolloClient({\n//     cache,\n//     link\n// })\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n      <Auth>\n        <App />\n      </Auth>\n    </ApolloProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}