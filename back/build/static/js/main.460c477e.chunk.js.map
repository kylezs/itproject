{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/Loading.js","views/LandingPage.js","components/PrivateRoute.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/CreateButton.js","views/artefactViews/components/Head.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/DeleteDialog.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","Loading","classes","makeStyles","theme","progress","margin","spacing","useStyles","CircularProgress","className","HomePageButton","props","linkTo","Button","style","color","padding","marginTop","component","RouterLink","to","children","LandingPage","useState","typing","setTyping","useEffect","href","rel","Typography","variant","zIndex","position","fontWeight","fontFamily","top","cursor","show","onTypingDone","Delay","ms","Backspace","count","delay","left","background","params","right","WaitWraper","state","checkAuthenticated","this","context","setState","localToken","localStorage","getItem","console","log","Component","contextType","PrivateRoute","LoggedIn","loggedIn","loggedOut","landingPage","path","rest","useContext","render","drawer","width","drawerOpen","setDrawerOpen","React","anchorEl","setAnchorEl","open","handleClose","Drawer","anchor","onClose","e","role","onClick","onKeyDown","List","name","icon","Home","Group","Apps","Create","Map","map","Icon","ListItem","button","key","borderRadius","ListItemIcon","ListItemText","primary","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","root","flexGrow","iconButton","marginRight","title","alignText","MenuAppBar","useTheme","dark","palette","type","setOpen","AppBar","elevation","Toolbar","edge","Menu","onToggleDarkTheme","Brightness7","Brightness4","LoggedInBar","username","NotLoggedInBar","lightPalette","indigo","secondary","main","teal","darkPalette","deepPurple","error","paper","default","lightTheme","createMuiTheme","darkTheme","setItem","setTheme","ThemeProvider","CssBaseline","newTheme","textField","backgroundColor","textAlign","card","maxWidth","media","height","ArtefactCard","artefact","upload","description","mediaURI","Card","CardActionArea","CardMedia","image","CardContent","Grid","item","xs","zeroMinWidth","gutterBottom","noWrap","CardActions","size","fullWidth","popup","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","MapType","artefacts","openArtefactID","setOpenArtefactID","handleSetOpenArtefact","mapStyle","containerStyle","mapState","center","initPopupOpen","length","coordinates","src","alt","offset","bottom","geocodingService","require","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","DELETE_ARTEFACT_MUTATION","GetFamiliesWrapper","Child","child","childProps","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","desc","statesLoading","variables","GetArtefactWrapper","fetchPolicy","artefactData","artefactLoading","marginLeft","alignItems","alignContent","justify","form","display","flexWrap","submit","justifyContent","formControl","fieldTitle","paperWrapper","editLinkButton","deleteButton","marginBottom","dropzone","minHeight","dropzoneText","fontSize","outerContainer","switch","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","history","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","Paper","onSubmit","TextField","required","label","autoFocus","onChange","target","value","helperText","container","FormHelperText","Link","Layout","direction","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","disabled","Logout","MyDialogTitle","artefactFamilyFormUseStyles","DialogTitle","disableTypography","closeButton","CreateFamilyView","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","_completed","familyCreate","family","createFamily","FormControl","multiline","rows","defaultValue","Dialog","DialogContent","align","noErrors","states","setters","isAdmin","openDelete","mode","create","edit","view","showEditButton","showDeleteButton","visibility","setMode","CreateButton","handleSetField","inputProps","readOnly","select","Object","keys","numFams","admin","clearable","minDate","inputVariant","format","openTo","date","KeyboardButtonProps","FormControlLabel","control","Switch","checked","isPublic","belongsToFamiliesBools","values","filter","disablePadding","dense","Checkbox","tabIndex","initialFiles","files","acceptedFiles","filesLimit","dropzoneClass","dropzoneTextStyle","dropzoneParagraph","imageStyle","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","keyCode","document","getElementById","click","Popover","queryResults","undefined","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","action","close","deleteArtefact","aria-labelledby","DialogContentText","DialogActions","ArtefactView","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","deleteOpen","setDeleteOpen","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","pushHomeURL","handleCreationCompleted","artefactCreate","updateCompleted","deleteCompleted","handleCreationError","handleUpdateError","handleDeleteError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","input","saveChange","artefactInput","dataLoading","componentProps","addressProps","newLocationState","components","comp","Name","State","Admin","Date","Description","Privacy","Families","Images","Head","widthProps","FieldWrapper","Address","SuccessSnackbar","DeleteDialog","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","Error404View","overflow","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","selectedFamily","profileId","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","_homepageInfoCompleted","home_data","called","selectFamily","inputLabel","useRef","hasArtefacts","GridList","cellHeight","cols","GridListTile","InputLabel","htmlFor","Select","newFamily","toFamily","overlay","minWidth","success","green","opacity","MyDialogContent","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","helpOpen","setHelpOpen","promiseArr","all","handleChange","newCenter","coord","SelectProps","autoWidth","fam","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.460c477e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", \n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Loading() {\n    const useStyles = makeStyles(theme => ({\n        progress: {\n            margin: theme.spacing(2)\n        }\n    }))\n\n    const classes = useStyles()\n\n    return <CircularProgress className={classes.progress} />\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport Particles from 'react-particles-js'\nimport { Typography, Button } from '@material-ui/core'\nimport Typist from 'react-typist';\nimport { Link as RouterLink } from 'react-router-dom'\n\n/*\nThe page that users come to when they first encounter our app. It's a marketing page basically\n\n*/\n\nfunction HomePageButton(props) {\n    const {linkTo} = props;\n    return (\n        <Button style={{ \n            color: \"#f0f0f0\",\n            padding: \"12px\",\n            margin: \"4px\",\n            marginTop: \"8px\"\n            }}\n            component={RouterLink}\n            to={linkTo}>\n            {props.children}\n        </Button>\n    )\n}\n\nfunction LandingPage(props) {\n\n    // Allow for looping of the typing animation\n    const [typing, setTyping] = useState(true);\n    useEffect(() => {\n        setTyping(true)\n    }, [typing]);\n\n    const typingDone = () => {\n        setTyping(false)\n    }\n\n    return (\n        <div>\n            <link href=\"https://fonts.googleapis.com/css?family=Dosis&display=swap\" rel=\"stylesheet\"></link>\n            <Typography variant=\"h1\" \n            style={{\n                padding: \"5rem\",\n                zIndex: 3,\n                position: \"absolute\",\n                fontWeight: \"lighter\",\n                fontFamily: \"Dosis\",\n                color: \"#f0f0f0\",\n            }}>\n                Family Artefacts Register\n            </Typography>\n            <Typography variant=\"h2\"\n                style={{\n                    padding: \"5rem\",\n                    zIndex: 3,\n                    position: \"absolute\",\n                    top: \"8rem\",\n                    fontWeight: \"lighter\",\n                    fontFamily: \"Dosis\",\n                    color: \"#f0f0f0\",\n                }}>\n                {typing\n                    ? (\n                        <Typist cursor={{ show: false }} onTypingDone={typingDone}>\n                            <Typist.Delay ms={400} />\n                            <span>Connecting you to your family<br /></span>\n                            <span>and your familys history.</span>\n                            <Typist.Backspace count={10} delay={200} />\n                            <span>'s history.</span>\n                            <Typist.Backspace count={56} delay={5000} />\n                        </Typist>\n                    )\n                    : ''\n                }\n            </Typography>\n            <Particles\n                style = {{\n                    position: \"fixed\",\n                    left: 0,\n                    top: 0,\n                    background: \"rgb(103, 58, 183)\",\n                    background: \"linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)\"\n        }}\n                params={{\n                    \"particles\": {\n                        \"number\": {\n                            \"value\": 120,\n                            \"density\": {\n                                \"enable\": true,\n                                \"value_area\": 800\n                            }\n                        },\n                        \"color\": {\n                            \"value\": \"#ffffff\"\n                        },\n                        \"shape\": {\n                            \"type\": \"circle\",\n                            \"stroke\": {\n                                \"width\": 0,\n                                \"color\": \"#FFFFFF\"\n                            },\n                            \"polygon\": {\n                                \"nb_sides\": 5\n                            },\n                            \"image\": {\n                                \"src\": \"img/github.svg\",\n                                \"width\": 100,\n                                \"height\": 100\n                            }\n                        },\n                        \"opacity\": {\n                            \"value\": 0.44093831673801875,\n                            \"random\": false,\n                            \"anim\": {\n                                \"enable\": false,\n                                \"speed\": 1,\n                                \"opacity_min\": 0.1,\n                                \"sync\": false\n                            }\n                        },\n                        \"size\": {\n                            \"value\": 4.008530152163807,\n                            \"random\": true,\n                            \"anim\": {\n                                \"enable\": false,\n                                \"speed\": 40,\n                                \"size_min\": 0.1,\n                                \"sync\": false\n                            }\n                        },\n                        \"line_linked\": {\n                            \"enable\": true,\n                            \"distance\": 150,\n                            \"color\": \"#ffffff\",\n                            \"opacity\": 0.4,\n                            \"width\": 1\n                        },\n                        \"move\": {\n                            \"enable\": true,\n                            \"speed\": 6,\n                            \"direction\": \"none\",\n                            \"random\": false,\n                            \"straight\": false,\n                            \"out_mode\": \"out\",\n                            \"bounce\": false,\n                            \"attract\": {\n                                \"enable\": false,\n                                \"rotateX\": 600,\n                                \"rotateY\": 1200\n                            }\n                        }\n                    },\n                    \"interactivity\": {\n                        \"detect_on\": \"canvas\",\n                        \"events\": {\n                            \"onhover\": {\n                                \"enable\": true,\n                                \"mode\": \"grab\"\n                            },\n                            \"onclick\": {\n                                \"enable\": true,\n                                \"mode\": \"push\"\n                            },\n                            \"resize\": true\n                        },\n                        \"modes\": {\n                            \"grab\": {\n                                \"distance\": 400,\n                                \"line_linked\": {\n                                    \"opacity\": 1\n                                }\n                            },\n                            \"bubble\": {\n                                \"distance\": 400,\n                                \"size\": 40,\n                                \"duration\": 2,\n                                \"opacity\": 8,\n                                \"speed\": 3\n                            },\n                            \"repulse\": {\n                                \"distance\": 200,\n                                \"duration\": 0.4\n                            },\n                            \"push\": {\n                                \"particles_nb\": 4\n                            },\n                            \"remove\": {\n                                \"particles_nb\": 2\n                            }\n                        }\n                    },\n                    \"retina_detect\": true\n                }}\n            />\n            <div\n                style={{\n                    position: \"absolute\",\n                    right: \"20px\",\n                }}>\n            <HomePageButton linkTo=\"/signup\">Sign up</HomePageButton>\n            <HomePageButton linkTo=\"/login\">Login</HomePageButton>\n            </div>\n        </div>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    Button,\n    makeStyles,\n    Drawer,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon\n} from '@material-ui/core'\n\nimport {\n    Home,\n    Group,\n    Create,\n    Map,\n    Apps,\n    AccountCircle\n} from '@material-ui/icons'\n\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 'auto',\n        margin: theme.spacing(1),\n        marginTop: theme.spacing(5)\n    }\n}))\n\nexport default ({ drawerOpen, setDrawerOpen }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Drawer\n                anchor='left'\n                open={drawerOpen}\n                onClose={e => setDrawerOpen(false)}\n            >\n                <div\n                    className={classes.drawer}\n                    role='presentation'\n                    onClick={e => setDrawerOpen(false)}\n                    onKeyDown={e => setDrawerOpen(false)}\n                >\n                    <List>\n                        {[\n                            { name: 'Home', path: '/', icon: Home },\n                            {\n                                name: 'Create Family',\n                                path: '/family/create/',\n                                icon: Group\n                            },\n                            {\n                                name: 'Manage Artefacts',\n                                path: '/artefacts/manage/',\n                                icon: Apps\n                            },\n                            {\n                                name: 'Create Artefact',\n                                path: '/artefacts/create/',\n                                icon: Create\n                            },\n                            { name: 'Artefact Map', path: '/map/', icon: Map }\n                        ].map(({ name, path, icon: Icon }) => (\n                            <ListItem\n                                button\n                                key={path}\n                                component={RouterLink}\n                                to={path}\n                                style={{ borderRadius: 10 }}\n                            >\n                                <ListItemIcon>\n                                    <Icon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={name}\n                                    // primaryTypographyProps={{variant: 'h6'}}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Toolbar,\n    AppBar,\n    Button,\n    makeStyles,\n    Grid,\n    Typography,\n    Link\n} from '@material-ui/core'\n// import MenuIcon from '@material-ui/icons/Menu'\n\nimport { Home, Menu, Brightness4, Brightness7 } from '@material-ui/icons'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    iconButton: {\n        marginRight: theme.spacing(1)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.iconButton}\n                        edge='start'\n                        color='inherit'\n                        aria-label='menu'\n                        onClick={e => setOpen(true)}\n                    >\n                        <Menu />\n                    </IconButton>\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='home'\n                        component={RouterLink}\n                        to='/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant='h6' className={classes.title}>\n                        Artefacts Register\n                    </Typography>\n\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='theme-toggle'\n                        onClick={props.onToggleDarkTheme}\n                    >\n                        {!dark ? <Brightness4 /> : <Brightness7 />}\n                    </IconButton>\n\n                    {loggedIn ? (\n                        <LoggedInBar\n                            username={username}\n                            drawerOpen={open}\n                            setDrawerOpen={setOpen}\n                        />\n                    ) : (\n                        <NotLoggedInBar />\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport {\n    teal,\n    deepPurple,\n    indigo\n} from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        // light: deepPurple[100],\n        main: deepPurple['A100'],\n        // dark: deepPurple[500]\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nconst lightTheme = createMuiTheme({ palette: lightPalette, type: 'light' })\nconst darkTheme = createMuiTheme({ palette: darkPalette, type: 'dark' })\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header onToggleDarkTheme={toggleDarkTheme} />\n            {props.children}\n        </ThemeProvider>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { config } from '../constants'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        maxWidth: 345,\n        borderRadius: 10\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 140\n    }\n}))\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ artefact }) {\n    const classes = useStyles()\n\n    const { upload, name, description, id } = artefact\n    const mediaURI = config.mediaRoot + upload\n\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={mediaURI}\n                    title={name}\n                />\n                <CardContent>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    size='small'\n                    fullWidth\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                {/* <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button> */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        // backgroundColor: theme.palette.background.paper + '!important',\n        // background: theme.palette.background.paper + '!important',\n        zIndex: '50 !important'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const classes = useStyles()\n\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    const handleSetOpenArtefact = id => {\n        if (openArtefactID === id) {\n            setOpenArtefactID('')\n        } else {\n            setOpenArtefactID(id)\n        }\n    }\n\n    const onMapClick = () => {\n        handleSetOpenArtefact('')\n        if (props.onClick){\n            props.onClick()\n        }\n    }\n\n    return (\n        <MapType\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={onMapClick}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, id, ...rest } = artefact\n                if (initPopupOpen) {\n                    artefact.initPopupOpen = false\n                    setOpenArtefactID(id)\n                }\n                if (!center || !center.length) {\n                    return null\n                }\n                return (\n                    <Fragment key={id}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => handleSetOpenArtefact(id)}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup && openArtefactID === id && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                                style={{\n                                    backgroundColor: '#000000 !important'\n                                }}\n                                className={classes.popup}\n                            >\n                                <ArtefactCard artefact={artefact} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </MapType>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`\n\nexport const DELETE_ARTEFACT_MUTATION = gql`\n    mutation ArtefactDelete($id: ID!) {\n        artefactDelete(id: $id) {\n            ok\n        }\n    }\n`\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.error(error),\n        fetchPolicy: \"network-only\"\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'flex-start',\n        textAlign: 'left'\n    },\n    title: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    fieldTitle: {\n        textAlign: 'left',\n        marginLeft: theme.spacing(1)\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    editLinkButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1)\n    },\n    deleteButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.error.main\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper + '!important',\n        // minHeight: '160px',\n        minHeight: '85% !important',\n        borderRadius: 10,\n        alignItems: 'flex-start !important'\n    },\n    dropzoneText: {\n        fontSize: 'medium !important'\n        // margin: '0 !important'\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    },\n    switch: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    }\n}))\n","import React, { useState, useContext } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout, formUseStyles } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = formUseStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='inherit'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Login {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Layout, formUseStyles } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = formUseStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='inherit'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Signup {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Grid,\n    Paper,\n    FormControl\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nconst MyDialogTitle = props => {\n    const classes = artefactFamilyFormUseStyles()\n    const { children, onClose } = props\n\n    return (\n        <DialogTitle disableTypography className={classes.root}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label='close'\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitle>\n    )\n}\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        console.log(data)\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('Family name: ' + familyName)\n        console.log('About: ' + about)\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid\n                container\n                spacing={1}\n                className={classes.outerContainer}\n            >\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4' className={classes.title}>\n                        Create Family\n                    </Typography>\n\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paperWrapper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e => console.log('hello')}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={5}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <MyDialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </MyDialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </form>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={11} md={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { Fragment } from 'react'\n\nimport { Button, FormHelperText } from '@material-ui/core'\n\nexport default ({ noErrors, ...rest }) => (\n    <Fragment>\n        <Button\n            {...rest}\n            color='secondary'\n            variant='contained'\n            type='submit'\n        >\n            Save\n        </Button>\n        {!noErrors && (\n            <FormHelperText error={!noErrors}>\n                Unknown Error Occurred\n            </FormHelperText>\n        )}\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\nimport { Grid, Typography, Button } from '@material-ui/core'\nimport CreateButton from './CreateButton'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    isAdmin,\n    openDelete,\n    noErrors\n}) => {\n    const { create, edit, view } = states.mode\n    const showEditButton = view && isAdmin\n    const showDeleteButton = edit && isAdmin\n\n    return (\n        <Fragment>\n            {(showEditButton || showDeleteButton || create) && (\n                <div\n                    className={classes.editLinkButton}\n                    style={{\n                        marginRight: 'auto',\n                        // width: '65px',\n                        height: '20px',\n                        visibility: 'hidden'\n                    }}\n                />\n            )}\n            <Typography variant='h4' className={classes.title}>\n                {create && 'Create'} {edit && 'Edit'} {view && 'View'} Artefact\n            </Typography>\n            {showEditButton && (\n                <Button\n                    color='secondary'\n                    variant='contained'\n                    onClick={e => setters.setMode({ edit: true })}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                >\n                    Edit\n                </Button>\n            )}\n            {showDeleteButton && (\n                <Button\n                    color='default'\n                    variant='contained'\n                    onClick={openDelete}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                >\n                    Delete\n                </Button>\n            )}\n\n            {create && (\n                <CreateButton\n                    noErrors={noErrors}\n                    className={classes.editLinkButton}\n                    style={{ marginLeft: 'auto' }}\n                />\n            )}\n            {create && (\n                <Grid item xs={12}>\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Artefacts are belongings of the family, enter as much or\n                        as little detail as you like\n                    </Typography>\n                </Grid>\n            )}\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            // style={{ height: '100%' }}\n            // InputProps={{ style: {height: '100%'} }}\n            id='artefact-name'\n            label='Artefact name'\n            variant='outlined'\n            autoFocus={!view}\n            required\n            fullWidth\n            value={state.name || ''}\n            inputProps={{ readOnly: view }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField, MenuItem } from '@material-ui/core'\n\nexport default ({ states, setters, artefactStates, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='state'\n            label='Artefact State'\n            variant='outlined'\n            required\n            fullWidth\n            value={state.state || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            select\n            disabled={disabled}\n        >\n            {Object.keys(artefactStates).map(value => {\n                return (\n                    <MenuItem value={artefactStates[value]} key={value}>\n                        {value}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, numFams }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    return (\n        <TextField\n            id='description'\n            label='Description'\n            variant='outlined'\n            required\n            fullWidth\n            multiline\n            value={state.description || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, username }) => {\n    var { view } = states.mode\n    var { state } = states\n    return (\n        <TextField\n            id='artefact-admin'\n            label='Artefact Admin'\n            variant='outlined'\n            required\n            fullWidth\n            value={\n                state.admin && Object.keys(state.admin).length !== 0\n                    ? state.admin.username\n                    : username\n            }\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => console.log('admin field was changed')}\n            disabled\n        />\n    )\n}\n","import React from 'react'\n\nimport 'date-fns'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <KeyboardDatePicker\n            disabled={view || disabled}\n            clearable\n            minDate={'1500-01-01'}\n            // variant='inline'\n            inputVariant='outlined'\n            format='dd/MM/yyyy'\n            openTo='year'\n            label='Date'\n            value={state.date}\n            onChange={date => handleSetField(name, date)}\n            KeyboardButtonProps={{\n                'aria-label': 'change date'\n            }}\n        />\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    Switch,\n    FormHelperText,\n    Typography,\n    FormControlLabel\n} from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, classes }) => {\n    var { create, edit } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (create || edit) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    Privacy\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.isPublic || false}\n                            onChange={e =>\n                                handleSetField(name, e.target.checked)\n                            }\n                            // edge='end'\n                            disabled={disabled}\n                        />\n                    }\n                    style={{ marginLeft: 3 }}\n                    label='Public'\n                />\n                <FormHelperText className={classes.fieldTitle}>\n                    {state.isPublic\n                        ? 'Viewable by anyone'\n                        : 'Viewable by family members only'}\n                </FormHelperText>\n            </Fragment>\n        )\n    } else {\n        return null\n    }\n}\n","import React, { Fragment } from 'react'\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Typography\n} from '@material-ui/core'\n\nexport default ({ states, setters, families, disabled, name, classes }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (\n        view &&\n        state.belongsToFamiliesBools &&\n        Object.values(state.belongsToFamiliesBools).filter(value => value)\n            .length === 0\n    ) {\n        return (\n            <Typography variant='h6' className={classes.fieldTitle}>\n                This artefact doesn't belong to any of your families\n            </Typography>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                {!view\n                    ? 'Families the artefact belongs to'\n                    : 'Belongs to your families'}\n            </Typography>\n            <List disablePadding>\n                {families.map(family => {\n                    if (\n                        state.belongsToFamiliesBools &&\n                        (!view || state.belongsToFamiliesBools[family.id])\n                    ) {\n                        return (\n                            <ListItem key={family.id} dense disabled={disabled}>\n                                {!view && (\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge='start'\n                                            checked={\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] || false\n                                            }\n                                            onClick={e =>\n                                                handleSetField(name, {\n                                                    ...state.belongsToFamiliesBools,\n                                                    [family.id]:\n                                                        e.target.checked\n                                                })\n                                            }\n                                            tabIndex={-1}\n                                        />\n                                    </ListItemIcon>\n                                )}\n                                <ListItemText primary={family.familyName} />\n                            </ListItem>\n                        )\n                    }\n                    return null\n                })}\n            </List>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Typography, Container } from '@material-ui/core'\nimport Image from 'material-ui-image'\nimport { useTheme } from '@material-ui/styles'\n\nimport { config } from '../../../constants'\nimport { Loading } from '../../../components'\n\nexport default ({ classes, states, setters, name }) => {\n    const theme = useTheme()\n    var { edit, create, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                Images\n            </Typography>\n            {edit && (\n                <Typography variant='caption' className={classes.fieldTitle}>\n                    Editing coming soon...\n                </Typography>\n            )}\n\n            {create && (\n                <DropzoneArea\n                    initialFiles={state.files || []}\n                    acceptedFiles={['image/*']}\n                    dropzoneText=''\n                    filesLimit={1}\n                    onChange={files => handleSetField(name, files)}\n                    dropzoneClass={classes.dropzone}\n                    classes={{\n                        dropzoneTextStyle: classes.fieldTitle,\n                        dropzoneParagraph: classes.fieldTitle\n                    }}\n                />\n            )}\n            {(view || edit) && state.upload !== 'False' && (\n                <Image\n                    src={config.mediaRoot + state.upload}\n                    loading={<Loading />}\n                    color={theme.palette.background.paper}\n                    imageStyle={{ borderRadius: 10 }}\n                />\n            )}\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    TextField,\n    Grid,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Map } from '../../../components'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    name,\n    handleGeocodeQuery,\n    disabled\n}) => {\n    var { view } = states.mode\n    var {\n        handleSetField,\n        setAddressIsSearchResult,\n        setLocationState,\n        handleSetLocationResult\n    } = setters\n    var { locationState, state } = states\n\n    const theme = useTheme()\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    return (\n        <Fragment>\n            <TextField\n                id='address'\n                label='Address'\n                variant='outlined'\n                fullWidth\n                disabled={disabled}\n                value={state.address || ''}\n                inputProps={{\n                    readOnly: view\n                }}\n                onChange={e => {\n                    handleSetField(name, e.target.value)\n                    if (e.target.value) {\n                        setAddressIsSearchResult(false)\n                    } else {\n                        // allow blank address\n                        setAddressIsSearchResult(true)\n                    }\n                }}\n                error={!!locationState.error}\n                InputProps={{\n                    endAdornment: !view && (\n                        <IconButton\n                            className={classes.iconButton}\n                            aria-label='search'\n                            id='search'\n                            onClick={e =>\n                                handleGeocodeQuery({\n                                    query: state.address,\n                                    initial: false\n                                })\n                            }\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    ),\n                    style: { marginBottom: 3 }\n                }}\n                onKeyDown={e => {\n                    if (e.keyCode === 13 && !view) {\n                        e.preventDefault()\n                        document.getElementById('search').click()\n                    }\n                }}\n                helperText={locationState.error}\n            />\n            <Popover\n                id={locationState.queryResults.length ? 'results' : undefined}\n                open={!!locationState.queryResults.length}\n                anchorEl={document.getElementById('address')}\n                onClose={e =>\n                    setLocationState({\n                        ...locationState,\n                        queryResults: []\n                    })\n                }\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <List component='div' disablePadding>\n                    {locationState.queryResults.map(result => (\n                        <ListItem\n                            key={result.placeName}\n                            button\n                            className={classes.nested}\n                            onClick={e => handleSetLocationResult(result)}\n                        >\n                            <ListItemText primary={result.placeName} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Popover>\n\n            <Grid container style={{ marginTop: 1 }}>\n                <Map\n                    interactive={false}\n                    className={classes.map}\n                    mapState={locationState.mapState}\n                    mapStyle={mapStyle}\n                    containerStyle={{\n                        height: '60vh',\n                        width: '100vw',\n                        borderRadius: 20,\n                        marginTop: 5\n                    }}\n                    artefacts={[\n                        {\n                            center: locationState.mapState.center,\n                            id: -1\n                        }\n                    ]}\n                />\n            </Grid>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\n\nexport default ({ save, cancel, updateErrors, classes }) => {\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            justify='space-evenly'\n            alignItems='center'\n            spacing={1}\n            style={{ marginTop: 1 }}\n        >\n            <Grid item xs={6}>\n                <MyButton onClick={save} name='Save' color='primary' />\n            </Grid>\n            <Grid item xs={6}>\n                <MyButton\n                    onClick={cancel}\n                    name='Cancel'\n                    color='secondary'\n                />\n            </Grid>\n\n            {updateErrors && (\n                <Grid item xs={12}>\n                    <FormHelperText error>\n                        Error Updating Artefact\n                    </FormHelperText>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Grid, FormControl, Paper } from '@material-ui/core'\nimport EditButtons from './EditButtons'\n\nexport default ({\n    child: Child,\n    childProps,\n    name,\n    classes,\n    editButtonProps,\n    ...rest\n}) => {\n    var { beingEdited, states } = childProps\n    var { edit } = states.mode\n    var thisBeingEdited = beingEdited === name\n    var someBeingEdited = edit && !!beingEdited\n    return (\n        <Paper className={classes.paperWrapper} elevation={3}>\n            <FormControl className={classes.formControl} fullWidth>\n                <Child\n                    {...childProps}\n                    disabled={someBeingEdited && !thisBeingEdited}\n                    name={name}\n                    classes={classes}\n                    {...rest}\n                />\n\n                {thisBeingEdited && <EditButtons {...editButtonProps} />}\n            </FormControl>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport {\n    Button,\n    Snackbar,\n    IconButton,\n    ClickAwayListener\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id='message-id'>Edit successful</span>}\n                action={[\n                    <Button\n                        key='view'\n                        color='secondary'\n                        size='small'\n                        onClick={e => viewArtefact(id)}\n                    >\n                        VIEW\n                    </Button>,\n                    <IconButton\n                        key='close'\n                        aria-label='close'\n                        color='inherit'\n                        onClick={() => setOpen(false)}\n                        className={classes.close}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </ClickAwayListener>\n    )\n}\n","import React from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button\n} from '@material-ui/core'\n\nexport default ({ open, setOpen, deleteArtefact, artefact }) => {\n    return (\n        <Dialog\n            fullWidth\n            maxWidth='sm'\n            open={open}\n            onClose={() => setOpen(false)}\n            aria-labelledby='help-title'\n        >\n            <DialogTitle>Delete Artefact</DialogTitle>\n            <DialogContent>\n                <DialogContentText>This cannot be undone</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color='secondary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() =>\n                        deleteArtefact({ variables: { id: artefact.id } })\n                    }\n                    color='primary'\n                >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { CssBaseline, Grid } from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport {\n    Loading,\n    geocodeQuery,\n    artefactFamilyFormUseStyles\n} from '../../components'\n\nimport {\n    Head,\n    Name,\n    State,\n    Description,\n    Admin,\n    Date,\n    Privacy,\n    Families,\n    Images,\n    FieldWrapper,\n    Address,\n    SuccessSnackbar,\n    DeleteDialog,\n    CreateButton\n} from './components'\nimport authContext from '../../authContext'\n\nimport { Layout } from '../../components'\n\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION,\n    DELETE_ARTEFACT_MUTATION\n} from '../../gqlQueriesMutations'\n\nimport { AUTH_TOKEN, config } from '../../constants'\nimport axios from 'axios'\n\nfunction ArtefactView(props) {\n    // get the mode\n    // var { create, edit, view } = props\n    // var mode = { create: create, edit: edit, view: view }\n    const [mode, setMode] = useState({\n        create: props.create,\n        edit: props.edit,\n        view: props.view\n    })\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    var { artefactStates, families } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors\n\n    if (!mode.create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && mode.edit) {\n        setMode({ view: true })\n    }\n\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [deleteOpen, setDeleteOpen] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (mode.edit || mode.view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families\n    ) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n        console.log(artefact)\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (mode.create && families && !state.belongsToFamiliesBools) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null, state: 'OKY' })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (mode.edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n        setMode({ view: true })\n    }\n\n    // send user to home\n    const pushHomeURL = () => {\n        const { history } = props\n        if (history) {\n            history.push(`/`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        console.log(\"here's the data\")\n        console.log(data)\n        var id = data.data.artefactCreate.artefact.id\n        pushViewArtefactURL(id)\n    }\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const deleteCompleted = async data => {\n        pushHomeURL()\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n    const handleDeleteError = async errors => {\n        console.error('Deletion errors occured: ', errors)\n    }\n\n    const createArtefact = async (\n        variables,\n        successCallback,\n        errorCallback\n    ) => {\n        console.log(\"here's input from call\")\n        console.log(variables)\n        // const input = \"hello\"\n        let form_data = new FormData()\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0])\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\n        form_data.append('variables', JSON.stringify(variables))\n        let url = config.uri\n        axios\n            .post(url, form_data, {\n                headers: {\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Transfer-Encoding': 'multipart/form-data'\n                }\n            })\n            .then(res => {\n                successCallback(res.data)\n            })\n            .catch(err => {\n                // console.error(err);\n                errorCallback(err)\n            })\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const [deleteArtefact, { error: deleteErrors }] = useMutation(\n        DELETE_ARTEFACT_MUTATION,\n        {\n            onCompleted: deleteCompleted,\n            onError: handleDeleteError\n        }\n    )\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n        createArtefact(input, handleCreationCompleted, handleCreationError)\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (mode.edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        mode.create ? submitForm(e) : saveChange(e)\n    }\n\n    if ((mode.edit || mode.view) && dataLoading) {\n        return <Loading />\n    }\n\n    const editButtonProps = {\n        save: saveChange,\n        cancel: cancelEditing,\n        updateErrors: updateErrors,\n        classes: classes\n    }\n\n    const componentProps = {\n        classes: classes,\n        beingEdited: beingEdited,\n        artefactStates: artefactStates,\n        username: context.user.username,\n        families: families,\n        states: {\n            state: state,\n            locationState: locationState,\n            mode: mode\n        },\n        setters: {\n            handleSetField: handleSetField,\n            setMode\n        }\n    }\n\n    const addressProps = {\n        ...componentProps,\n        handleGeocodeQuery: handleGeocodeQuery,\n        setters: {\n            ...componentProps.setters,\n            setLocationState: setLocationState,\n            setAddressIsSearchResult: setAddressIsSearchResult,\n            handleSetLocationResult: handleSetLocationResult\n        }\n    }\n\n    const components = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: mode.view ? null : Privacy, name: 'isPublic' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        { comp: Images, name: 'files' }\n    ]\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <Grid container className={classes.outerContainer} spacing={1}>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={1}\n                >\n                    <Head\n                        isAdmin={isAdmin}\n                        openDelete={() => setDeleteOpen(true)}\n                        noErrors={noErrors}\n                        {...componentProps}\n                    />\n                </Grid>\n\n                {components.map(({ comp, name, widthProps }) => {\n                    if (comp === null) return null\n                    if (!widthProps) widthProps = { xs: 12, sm: 6, lg: 4 }\n                    return (\n                        <Grid\n                            container\n                            item\n                            {...widthProps}\n                            key={name}\n                            // alignItems='flex-start'\n                            alignContent='stretch'\n                        >\n                            <FieldWrapper\n                                key={comp}\n                                child={comp}\n                                name={name}\n                                childProps={componentProps}\n                                editButtonProps={editButtonProps}\n                                classes={classes}\n                            />\n                        </Grid>\n                    )\n                })}\n\n                <Grid item xs={12}>\n                    <FieldWrapper\n                        child={Address}\n                        name='address'\n                        childProps={addressProps}\n                        editButtonProps={editButtonProps}\n                        classes={classes}\n                    />\n                </Grid>\n\n                {mode.create && (\n                    <Grid item xs={8} md={5}>\n                        <CreateButton noErrors={noErrors} fullWidth/>\n                    </Grid>\n                )}\n\n                <SuccessSnackbar\n                    open={snackbarOpen}\n                    setOpen={setSnackbarOpen}\n                    viewArtefact={pushViewArtefactURL}\n                    classes={classes}\n                    id={artefact ? artefact.id : '-1'}\n                />\n\n                <DeleteDialog\n                    open={deleteOpen}\n                    setOpen={setDeleteOpen}\n                    deleteArtefact={deleteArtefact}\n                    artefact={artefact}\n                />\n            </Grid>\n        </form>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <Layout>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Grid\n                    container\n                    spacing={0}\n                    direction='column'\n                    alignItems='center'\n                    justify='center'\n                    style={{ minHeight: '80vh' }}\n                >\n                    <Grid item xs={11} md={9} >\n                        <CssBaseline />\n                        <ArtefactView {...props} />\n                    </Grid>\n                </Grid>\n            </MuiPickersUtilsProvider>\n        </Layout>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport ArtefactCard from '../../components/ArtefactCard'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    container: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery($first: Int!) {\n        me {\n            artefactAdministratorOf(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n\n    const classes = useStyles()\n    const numArtefactsFetched = 10\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        variables: {\n            first: numArtefactsFetched\n        },\n        onCompleted: data =>\n            SetArtefactEdges(data.me.artefactAdministratorOf.edges),\n        fetchPolicy: 'network-only'\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={2} className={classes.container}>\n                <Grid item xs={12}>\n                    <Grid container justify='center' spacing={2}>\n                        {artefactEdges.map(edge => (\n                            <Grid item key={edge.node.id}>\n                                <ArtefactCard\n                                    artefact={edge.node}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt='You are lost - Obi Wan'/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState } from 'react'\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GridList from '@material-ui/core/GridList'\nimport GridListTile from '@material-ui/core/GridListTile'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {\n    Typography,\n    CssBaseline,\n    Button,\n    TextField,\n    Grid,\n    FormControl\n} from '@material-ui/core'\nimport Select from '@material-ui/core/Select'\nimport gql from 'graphql-tag'\nimport { useMutation, useQuery } from '@apollo/react-hooks'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { Redirect }  from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n    query {\n        me {\n            isMemberOf {\n                id\n                familyName\n                joinCode\n                hasArtefacts {\n                    edges {\n                        node {\n                            id\n                            name\n                            admin {\n                                username\n                            }\n                        }\n                    }\n                }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                    hasArtefacts {\n                        edges {\n                            node {\n                                id\n                                name\n                                description\n                                upload\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst JOIN_FAMILY_MUTATION = gql`\n    mutation JoinFamily($joinCode: String!) {\n        familyJoin(joinCode: $joinCode) {\n            family {\n                familyName\n                familyAdmin {\n                    username\n                }\n            }\n        }\n    }\n`\n\nconst SELECT_FAMILY_MUTATION = gql`\n    mutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n        updateProfile(input: { id: $profileId, selectedFamily: $toFamily }) {\n            id\n            selectedFamily\n        }\n    }\n`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n    const [formJoinCode, setFormJoinCode] = useState('')\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(\n        JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n        }\n    )\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error('Enter a valid joinCode')\n            return\n        }\n\n        joinFamilyMutation({ variables: { joinCode: formJoinCode } })\n    }\n\n    const _homepageInfoCompleted = data => {\n        const selectedFamily = data.me.profile.selectedFamily\n        if (!selectedFamily) {\n            console.error('User has not selected a family')\n            return\n        }\n    }\n\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(\n        HOMEPAGE_INFO,\n        {\n            onCompleted: data => {\n                _homepageInfoCompleted(data)\n            },\n            fetchPolicy: 'network-only'\n        }\n    )\n\n    const [selectFamily, { data: mutation_data }] = useMutation(\n        SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n        }\n    )\n\n    const inputLabel = React.useRef(null)\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value\n        selectFamily({\n            variables: { profileId: profileId, toFamily: newFamily }\n        })\n    }\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    let selectedFamily;\n    let families;\n    let profileId;\n    if (home_data) {\n        selectedFamily = home_data.me.profile.selectedFamily;\n        families = home_data.me.isMemberOf;\n        profileId = home_data.me.profile.id;\n    } else {\n        // Go to logout to remove token which is normally the cause of this error\n        console.error(\"User data was not defined, but fetched, logging out\");\n        return <Redirect to='/logout' />\n        \n    }\n\n    let artefacts = []\n\n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges\n    }\n\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    {selectedFamily && (\n                        <div>\n                            <Typography variant='h1'>\n                                {selectedFamily.familyName}\n                            </Typography>\n                            <Typography variant='h5'>\n                                Join code: {selectedFamily.joinCode}\n                            </Typography>\n                        </div>\n                    )}\n                    {!selectedFamily && (\n                        <Typography variant='h2'>\n                            Join and/or Select a Family\n                        </Typography>\n                    )}\n                    <h4>Your username is (temp, for testing): {username}</h4>\n                    <GridList cellHeight={'auto'} cols={2}>\n                        {artefacts.map((artefact, key) => (\n                            <GridListTile key={key}>\n                                <ArtefactCard\n                                    key={key}\n                                    artefact={artefact.node}\n                                />\n                            </GridListTile> \n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={3}>\n                    <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\n                        Select Family\n                    </InputLabel>\n                    <Select\n                        variant='outlined'\n                        fullWidth\n                        disabled={families.length <= 1}\n                        value={selectedFamily ? selectedFamily.id : null}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-simple'\n                        }}\n                    >\n                        {families &&\n                            families.map((item, key) => (\n                                <MenuItem key={item.id} value={item.id}>\n                                    {item.familyName}\n                                </MenuItem>\n                            ))}\n                    </Select>\n                    <FormControl fullWidth>\n                        <TextField\n                            id='joinCodeField'\n                            label='Join a family'\n                            value={formJoinCode}\n                            className={classes.textField}\n                            margin='normal'\n                            onChange={e => setFormJoinCode(e.target.value)}\n                            fullWidth\n                        />\n                        <Button variant='outlined' onClick={handleJoinFamily}>\n                            Join Family\n                        </Button>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React, { useState, Fragment } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    IconButton,\n    Snackbar,\n    SnackbarContent,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, Layout } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 120\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to show more information\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const initMapState = { zoom: [2] }\n    const [mapState, setMapState] = useState(initMapState)\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const [helpOpen, setHelpOpen] = useState(false)\n    const getArtefactMapData = data => {\n        console.log('Query resulted')\n        if (!data) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        },\n        fetchPolicy: 'network-only'\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact') {\n            if (event.target.value !== null) {\n                var newCenter = event.target.value.center\n                if (newCenter === mapState.center) {\n                    newCenter = newCenter.map(coord => 0.99999999 * coord)\n                }\n                setMapState({\n                    center: newCenter\n                })\n                event.target.value.initPopupOpen = true\n            }\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                    // onClick={e => setState({ ...state, selectedArtefact: {} })}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value} key={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {mapArtefacts.length > 0 && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Jump to'\n                                variant='outlined'\n                                value={state.selectedArtefact || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem\n                                        value={artefact}\n                                        key={artefact.id}\n                                    >\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n\n                <IconButton\n                    edge='start'\n                    color='inherit'\n                    aria-label='menu'\n                    onClick={() => setHelpOpen(true)}\n                >\n                    <HelpIcon />\n                </IconButton>\n            </Grid>\n\n            <Dialog\n                fullWidth\n                maxWidth='sm'\n                open={helpOpen}\n                onClose={() => setHelpOpen(false)}\n                aria-labelledby='help-title'\n            >\n                <MyDialogContent />\n                <DialogActions>\n                    <Button onClick={() => setHelpOpen(false)} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <GetFamiliesWrapper {...props} child={MapView} />\n    </Layout>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\nimport DetailView from './views/artefactViews/DetailView'\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                        landingPage\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}