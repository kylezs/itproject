{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/Loading.js","views/LandingPage.js","components/PrivateRoute.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/CreateButton.js","views/artefactViews/components/Head.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/DeleteDialog.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","Loading","classes","makeStyles","theme","progress","margin","spacing","useStyles","CircularProgress","className","HomePageButton","props","linkTo","Button","style","color","padding","component","RouterLink","to","children","LandingPage","href","rel","Typography","variant","zIndex","position","fontWeight","fontFamily","top","left","background","params","right","WaitWraper","state","checkAuthenticated","this","context","setState","localToken","localStorage","getItem","console","log","Component","contextType","PrivateRoute","LoggedIn","loggedIn","loggedOut","landingPage","path","rest","useContext","render","drawer","width","marginTop","drawerOpen","setDrawerOpen","React","useState","anchorEl","setAnchorEl","open","handleClose","Drawer","anchor","onClose","e","role","onClick","onKeyDown","List","name","icon","Home","Group","Apps","Create","Map","map","Icon","ListItem","button","key","borderRadius","ListItemIcon","ListItemText","primary","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","root","flexGrow","iconButton","marginRight","title","alignText","MenuAppBar","useTheme","dark","palette","type","setOpen","AppBar","elevation","Toolbar","edge","Menu","onToggleDarkTheme","Brightness7","Brightness4","LoggedInBar","username","NotLoggedInBar","lightPalette","indigo","secondary","main","teal","darkPalette","deepPurple","error","paper","default","lightTheme","createMuiTheme","darkTheme","setItem","setTheme","ThemeProvider","CssBaseline","newTheme","textField","backgroundColor","textAlign","card","maxWidth","media","height","ArtefactCard","artefact","upload","description","mediaURI","Card","CardActionArea","CardMedia","image","CardContent","Grid","item","xs","zeroMinWidth","gutterBottom","noWrap","CardActions","size","fullWidth","popup","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","MapType","artefacts","openArtefactID","setOpenArtefactID","mapStyle","containerStyle","mapState","center","initPopupOpen","length","artefactID","coordinates","src","alt","offset","bottom","geocodingService","require","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","DELETE_ARTEFACT_MUTATION","GetFamiliesWrapper","Child","child","childProps","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","desc","statesLoading","variables","GetArtefactWrapper","artefactData","artefactLoading","marginLeft","alignItems","alignContent","justify","form","display","flexWrap","submit","justifyContent","formControl","fieldTitle","paperWrapper","editLinkButton","deleteButton","marginBottom","dropzone","minHeight","dropzoneText","fontSize","outerContainer","switch","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","history","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","Paper","onSubmit","TextField","required","label","autoFocus","onChange","target","value","helperText","container","FormHelperText","Link","Layout","direction","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","disabled","Logout","MyDialogTitle","artefactFamilyFormUseStyles","DialogTitle","disableTypography","closeButton","CreateFamilyView","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","_completed","familyCreate","family","createFamily","FormControl","multiline","rows","defaultValue","Dialog","DialogContent","align","noErrors","mode","isAdmin","goToEdit","openDelete","create","edit","view","showEditButton","showDeleteButton","visibility","CreateButton","states","setters","handleSetField","inputProps","readOnly","select","Object","keys","numFams","admin","clearable","minDate","inputVariant","format","openTo","date","KeyboardButtonProps","FormControlLabel","control","Switch","checked","isPublic","belongsToFamiliesBools","values","filter","disablePadding","dense","Checkbox","tabIndex","initialFiles","files","acceptedFiles","filesLimit","dropzoneClass","dropzoneTextStyle","dropzoneParagraph","imageStyle","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","keyCode","document","getElementById","click","Popover","queryResults","undefined","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","action","close","deleteArtefact","aria-labelledby","DialogContentText","DialogActions","ArtefactView","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","deleteOpen","setDeleteOpen","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","pushHomeURL","handleCreationCompleted","artefactCreate","updateCompleted","deleteCompleted","handleCreationError","handleUpdateError","handleDeleteError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","input","saveChange","artefactInput","componentProps","addressProps","newLocationState","components","comp","Name","State","Admin","Date","Families","Description","Privacy","Images","widthProps","Head","pushEditArtefactURL","FieldWrapper","Address","SuccessSnackbar","DeleteDialog","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","Error404View","overflow","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","selectedFamily","_homepageInfoCompleted","home_data","called","selectFamily","inputLabel","useRef","profileId","hasArtefacts","GridList","cellHeight","cols","GridListTile","InputLabel","htmlFor","Select","newFamily","toFamily","overlay","minWidth","success","green","opacity","MyDialogContent","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","helpOpen","setHelpOpen","promiseArr","all","handleChange","SelectProps","autoWidth","fam","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fd86971.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst authContext = createContext({\r\n    authenticated: false, // to check if authenticated or not\r\n    user: {}, // store all the user details\r\n    authToken: \"\", \r\n    initiateLogin: () => { }, \r\n    handleAuthentication: () => { }, \r\n    logout: () => { }\r\n});\r\n\r\nexport default authContext;\r\nexport const AuthProvider = authContext.Provider;\r\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\r\nexport const THEME_TYPE = 'theme-type'\r\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\r\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\r\nexport const MY_ACCESS_TOKEN =\r\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\r\n\r\n// GQL API for prod vs dev\r\n\r\n// Whatever server the app is on, /graphql/\r\nconst prod = {\r\n    uri: '/graphql/',\r\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\r\n}\r\n\r\n// In case running dev on either :8000 or :3000, this must be specified as full path\r\nconst dev = {\r\n    uri: 'http://localhost:8000/graphql/',\r\n    mediaRoot: 'http://localhost:8000/media/'\r\n}\r\n\r\n// If npm run build => production, if npm start => development (built into react)\r\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\r\n","import React, { useState } from \"react\";\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { AuthProvider } from \"../authContext\";\r\nimport { AUTH_TOKEN } from '../constants'\r\n\r\n\r\nconst VERIFY_TOKEN_MUTATION = gql`\r\nmutation VerifyToken($token: String!) {\r\n    verifyToken(token: $token) {\r\n        payload\r\n    }\r\n}\r\n`\r\n\r\nexport default function Auth(props) {\r\n    const [authenticated, setAuthenticated] = useState(false)\r\n    const [user, setUser] = useState({})\r\n    const [authToken, setAuthToken] = useState(\"\");\r\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\r\n\r\n    const handleAuthentication = async (authToken, _callback) => {\r\n        if (!authToken) {\r\n            authToken = localStorage.getItem(AUTH_TOKEN)\r\n        }\r\n\r\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\r\n            setSession(data)\r\n            if (_callback) {\r\n                _callback();\r\n            }\r\n        }).catch((errors) => {\r\n            // If could not validate it, remove it to stop unnecessary requests\r\n            localStorage[AUTH_TOKEN] = \"\"\r\n            if (_callback) {\r\n                _callback();\r\n            }\r\n        }\r\n\r\n        );\r\n        if (error) {\r\n            console.log(\"[Error] handleAuthentication()\")\r\n            return;\r\n        }\r\n\r\n        if (loading) {\r\n            console.log(\"Thing is loading\");\r\n        }\r\n\r\n    };\r\n\r\n    const setSession = (data) => {\r\n\r\n        if (error) {\r\n            console.log(\"Invalid data, please sign in again\");\r\n            return;\r\n        }\r\n\r\n        const username = data.data.verifyToken.payload.username\r\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\r\n        const user = {\r\n            username: username,\r\n        };\r\n        setAuthenticated(true);\r\n        setAuthToken(data.verifyToken);\r\n        setUser(user);\r\n    }\r\n\r\n    const initiateLogin = () => {\r\n        this.history.pushState(null, 'login');\r\n    };\r\n\r\n    const logout = () => {\r\n        console.log(\"Logout called\");\r\n        setAuthenticated(false);\r\n        setUser({});\r\n        setAuthToken(\"\");\r\n        localStorage[AUTH_TOKEN] = \"\";\r\n    };\r\n\r\n    const authProviderValue = {\r\n        authenticated,\r\n        authToken,\r\n        user,\r\n        initiateLogin: initiateLogin,\r\n        handleAuthentication: handleAuthentication,\r\n        logout: logout\r\n    };\r\n\r\n    return (\r\n        <AuthProvider value={authProviderValue}>\r\n            {props.children}\r\n        </AuthProvider>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\nfunction Loading() {\r\n    const useStyles = makeStyles(theme => ({\r\n        progress: {\r\n            margin: theme.spacing(2)\r\n        }\r\n    }))\r\n\r\n    const classes = useStyles()\r\n\r\n    return <CircularProgress className={classes.progress} />\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport Particles from 'react-particles-js'\r\nimport { Typography, Button } from '@material-ui/core'\r\nimport Typist from 'react-typist';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\n/*\r\nThe page that users come to when they first encounter our app. It's a marketing page basically\r\n\r\n*/\r\n\r\nfunction HomePageButton(props) {\r\n    const {linkTo} = props;\r\n    return (\r\n        <Button style={{ \r\n            color: \"#f0f0f0\",\r\n            padding: \"12px\",\r\n            margin: \"5px\"\r\n            }}\r\n            component={RouterLink}\r\n            to={linkTo}>\r\n            {props.children}\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction LandingPage(props) {\r\n    return (\r\n        <div>\r\n            <link href=\"https://fonts.googleapis.com/css?family=Dosis&display=swap\" rel=\"stylesheet\"></link>\r\n            <Typography variant=\"h1\" \r\n            style={{\r\n                padding: \"5rem\",\r\n                zIndex: 3,\r\n                position: \"absolute\",\r\n                fontWeight: \"lighter\",\r\n                fontFamily: \"Dosis\",\r\n                color: \"#f0f0f0\",\r\n            }}>\r\n                Family Artefacts Register\r\n            </Typography>\r\n            <Typography variant=\"h2\"\r\n                style={{\r\n                    padding: \"5rem\",\r\n                    zIndex: 3,\r\n                    position: \"absolute\",\r\n                    top: \"8rem\",\r\n                    fontWeight: \"lighter\",\r\n                    fontFamily: \"Dosis\",\r\n                    color: \"#f0f0f0\",\r\n                }}>\r\n            <Typist>\r\n                Connecting you to your family <br />and your family's history.\r\n            </Typist>\r\n            </Typography>\r\n            <Particles\r\n                style = {{\r\n                    position: \"fixed\",\r\n                    left: 0,\r\n                    top: 0,\r\n                    background: \"rgb(103, 58, 183)\",\r\n                    background: \"linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)\"\r\n        }}\r\n                params={{\r\n                    \"particles\": {\r\n                        \"number\": {\r\n                            \"value\": 120,\r\n                            \"density\": {\r\n                                \"enable\": true,\r\n                                \"value_area\": 800\r\n                            }\r\n                        },\r\n                        \"color\": {\r\n                            \"value\": \"#ffffff\"\r\n                        },\r\n                        \"shape\": {\r\n                            \"type\": \"circle\",\r\n                            \"stroke\": {\r\n                                \"width\": 0,\r\n                                \"color\": \"#FFFFFF\"\r\n                            },\r\n                            \"polygon\": {\r\n                                \"nb_sides\": 5\r\n                            },\r\n                            \"image\": {\r\n                                \"src\": \"img/github.svg\",\r\n                                \"width\": 100,\r\n                                \"height\": 100\r\n                            }\r\n                        },\r\n                        \"opacity\": {\r\n                            \"value\": 0.44093831673801875,\r\n                            \"random\": false,\r\n                            \"anim\": {\r\n                                \"enable\": false,\r\n                                \"speed\": 1,\r\n                                \"opacity_min\": 0.1,\r\n                                \"sync\": false\r\n                            }\r\n                        },\r\n                        \"size\": {\r\n                            \"value\": 4.008530152163807,\r\n                            \"random\": true,\r\n                            \"anim\": {\r\n                                \"enable\": false,\r\n                                \"speed\": 40,\r\n                                \"size_min\": 0.1,\r\n                                \"sync\": false\r\n                            }\r\n                        },\r\n                        \"line_linked\": {\r\n                            \"enable\": true,\r\n                            \"distance\": 150,\r\n                            \"color\": \"#ffffff\",\r\n                            \"opacity\": 0.4,\r\n                            \"width\": 1\r\n                        },\r\n                        \"move\": {\r\n                            \"enable\": true,\r\n                            \"speed\": 6,\r\n                            \"direction\": \"none\",\r\n                            \"random\": false,\r\n                            \"straight\": false,\r\n                            \"out_mode\": \"out\",\r\n                            \"bounce\": false,\r\n                            \"attract\": {\r\n                                \"enable\": false,\r\n                                \"rotateX\": 600,\r\n                                \"rotateY\": 1200\r\n                            }\r\n                        }\r\n                    },\r\n                    \"interactivity\": {\r\n                        \"detect_on\": \"canvas\",\r\n                        \"events\": {\r\n                            \"onhover\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"grab\"\r\n                            },\r\n                            \"onclick\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"push\"\r\n                            },\r\n                            \"resize\": true\r\n                        },\r\n                        \"modes\": {\r\n                            \"grab\": {\r\n                                \"distance\": 400,\r\n                                \"line_linked\": {\r\n                                    \"opacity\": 1\r\n                                }\r\n                            },\r\n                            \"bubble\": {\r\n                                \"distance\": 400,\r\n                                \"size\": 40,\r\n                                \"duration\": 2,\r\n                                \"opacity\": 8,\r\n                                \"speed\": 3\r\n                            },\r\n                            \"repulse\": {\r\n                                \"distance\": 200,\r\n                                \"duration\": 0.4\r\n                            },\r\n                            \"push\": {\r\n                                \"particles_nb\": 4\r\n                            },\r\n                            \"remove\": {\r\n                                \"particles_nb\": 2\r\n                            }\r\n                        }\r\n                    },\r\n                    \"retina_detect\": true\r\n                }}\r\n            />\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    right: 0\r\n                }}>\r\n            <HomePageButton linkTo=\"/signup\">Sign up</HomePageButton>\r\n            <HomePageButton linkTo=\"/login\">Login</HomePageButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LandingPage\r\n","import React, { Component, useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authContext from '../authContext';\r\nimport { AUTH_TOKEN } from '../constants';\r\nimport Loading from './Loading';\r\nimport LandingPage from '../views/LandingPage';\r\n\r\n\r\nclass WaitWraper extends Component {\r\n    state = { checkAuthenticated: false }\r\n    static contextType = authContext;\r\n\r\n    componentDidMount() {\r\n        if (this.context.authenticated) {\r\n            this.setState({checkAuthenticated: true})\r\n        }\r\n        const localToken = localStorage.getItem(AUTH_TOKEN);\r\n\r\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\r\n        if (!this.context.authenticated && localToken) {\r\n            this.context.handleAuthentication(localToken, () => {\r\n                console.log(\"Setting state\");\r\n                this.setState({checkAuthenticated: true})\r\n            });\r\n        } else {\r\n            this.setState({ checkAuthenticated: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Render the children with a function using state as the argument\r\n        return this.props.children(this.state.checkAuthenticated);\r\n    }\r\n}\r\n\r\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\r\n    const context = useContext(authContext);\r\n    const authenticated = context.authenticated;\r\n\r\n    if (!loggedOut) {\r\n        loggedOut = \"/login\"\r\n    }\r\n\r\n    console.log(\"Authenticated: \", authenticated)\r\n    return (\r\n        <WaitWraper>\r\n            {checkAuthenticated => checkAuthenticated === false\r\n            ? <Loading />\r\n            : <Route {...rest}\r\n                render={props => {\r\n                    if (authenticated) {\r\n                        return <LoggedIn {...props} />\r\n                    } else if (!authenticated && landingPage) {\r\n                        return <LandingPage />;\r\n                    } else {\r\n                        return (\r\n                            <Redirect to={loggedOut} />\r\n                        )\r\n                    }\r\n                }} />\r\n            }\r\n        </WaitWraper>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport {\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Button,\r\n    makeStyles,\r\n    Drawer,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon\r\n} from '@material-ui/core'\r\n\r\nimport {\r\n    Home,\r\n    Group,\r\n    Create,\r\n    Map,\r\n    Apps,\r\n    AccountCircle\r\n} from '@material-ui/icons'\r\n\r\nimport authContext from '../authContext'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: 'auto',\r\n        margin: theme.spacing(1),\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}))\r\n\r\nexport default ({ drawerOpen, setDrawerOpen }) => {\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const context = useContext(authContext)\r\n    const open = Boolean(anchorEl)\r\n\r\n    function handleMenu(event) {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    function handleClose() {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    function handleLogout() {\r\n        context.logout()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                anchor='left'\r\n                open={drawerOpen}\r\n                onClose={e => setDrawerOpen(false)}\r\n            >\r\n                <div\r\n                    className={classes.drawer}\r\n                    role='presentation'\r\n                    onClick={e => setDrawerOpen(false)}\r\n                    onKeyDown={e => setDrawerOpen(false)}\r\n                >\r\n                    <List>\r\n                        {[\r\n                            { name: 'Home', path: '/', icon: Home },\r\n                            {\r\n                                name: 'Create Family',\r\n                                path: '/family/create/',\r\n                                icon: Group\r\n                            },\r\n                            {\r\n                                name: 'Manage Artefacts',\r\n                                path: '/artefacts/manage/',\r\n                                icon: Apps\r\n                            },\r\n                            {\r\n                                name: 'Create Artefact',\r\n                                path: '/artefacts/create/',\r\n                                icon: Create\r\n                            },\r\n                            { name: 'Artefact Map', path: '/map/', icon: Map }\r\n                        ].map(({ name, path, icon: Icon }) => (\r\n                            <ListItem\r\n                                button\r\n                                key={path}\r\n                                component={RouterLink}\r\n                                to={path}\r\n                                style={{ borderRadius: 10 }}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Icon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={name}\r\n                                    // primaryTypographyProps={{variant: 'h6'}}\r\n                                />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n\r\n            <IconButton\r\n                aria-label='account of current user'\r\n                aria-controls='menu-appbar'\r\n                aria-haspopup='true'\r\n                onClick={handleMenu}\r\n                color='inherit'\r\n            >\r\n                <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n                id='menu-appbar'\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right'\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\r\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst LoginLink = React.forwardRef((props, ref) => (\r\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\r\n));\r\n\r\nconst SignupLink = React.forwardRef((props, ref) => (\r\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\r\n));\r\n\r\n\r\nexport default props => {\r\n    return (\r\n        <div>\r\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\r\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useContext, useState } from 'react'\r\nimport {\r\n    IconButton,\r\n    Toolbar,\r\n    AppBar,\r\n    Button,\r\n    makeStyles,\r\n    Grid,\r\n    Typography,\r\n    Link\r\n} from '@material-ui/core'\r\n// import MenuIcon from '@material-ui/icons/Menu'\r\n\r\nimport { Home, Menu, Brightness4, Brightness7 } from '@material-ui/icons'\r\n\r\nimport LoggedInBar from './LoggedInBar'\r\nimport NotLoggedInBar from './NotLoggedInBar'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useTheme } from '@material-ui/styles'\r\n\r\nimport authContext from '../authContext'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    iconButton: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        alignText: 'left'\r\n    }\r\n}))\r\n\r\nexport default function MenuAppBar(props) {\r\n    const classes = useStyles()\r\n\r\n    const context = useContext(authContext)\r\n    let loggedIn = context.authenticated\r\n    let username = null\r\n\r\n    const theme = useTheme()\r\n    const dark = theme && theme.palette.type === 'dark'\r\n\r\n    const [open, setOpen] = useState(false)\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position='static' color='primary' elevation={6}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        className={classes.iconButton}\r\n                        edge='start'\r\n                        color='inherit'\r\n                        aria-label='menu'\r\n                        onClick={e => setOpen(true)}\r\n                    >\r\n                        <Menu />\r\n                    </IconButton>\r\n\r\n                    <IconButton\r\n                        className={classes.iconButton}\r\n                        color='inherit'\r\n                        aria-label='home'\r\n                        component={RouterLink}\r\n                        to='/'\r\n                    >\r\n                        <Home />\r\n                    </IconButton>\r\n\r\n                    <Typography variant='h6' className={classes.title}>\r\n                        Family Artefacts Register\r\n                    </Typography>\r\n\r\n\r\n                    <IconButton\r\n                        className={classes.iconButton}\r\n                        color='inherit'\r\n                        aria-label='theme-toggle'\r\n                        onClick={props.onToggleDarkTheme}\r\n                    >\r\n                        {!dark ? <Brightness4 /> : <Brightness7 />}\r\n                    </IconButton>\r\n\r\n                    {loggedIn ? (\r\n                        <LoggedInBar\r\n                            username={username}\r\n                            drawerOpen={open}\r\n                            setDrawerOpen={setOpen}\r\n                        />\r\n                    ) : (\r\n                        <NotLoggedInBar />\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { CssBaseline } from '@material-ui/core'\r\nimport Header from './Header'\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport {\r\n    teal,\r\n    deepPurple,\r\n    indigo\r\n} from '@material-ui/core/colors'\r\n\r\nimport { THEME_TYPE } from '../constants.js'\r\n\r\nconst lightPalette = {\r\n    primary: indigo,\r\n    secondary: {\r\n        main: teal[400]\r\n    },\r\n    type: 'light'\r\n}\r\n\r\nconst darkPalette = {\r\n    primary: {\r\n        // light: deepPurple[100],\r\n        main: deepPurple['A100'],\r\n        // dark: deepPurple[500]\r\n    },\r\n    secondary: teal,\r\n    error: {\r\n        main: '#CF6679'\r\n    },\r\n    background: {\r\n        paper: '#303030',\r\n        default: '#121212'\r\n    },\r\n    type: 'dark'\r\n}\r\n\r\nconst lightTheme = createMuiTheme({ palette: lightPalette, type: 'light' })\r\nconst darkTheme = createMuiTheme({ palette: darkPalette, type: 'dark' })\r\n\r\nexport default props => {\r\n    if (!localStorage.getItem(THEME_TYPE)) {\r\n        localStorage.setItem(THEME_TYPE, 'light')\r\n    }\r\n\r\n    const [theme, setTheme] = useState(\r\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\r\n    )\r\n\r\n    const toggleDarkTheme = () => {\r\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\r\n        localStorage.setItem(THEME_TYPE, newTheme)\r\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <Header onToggleDarkTheme={toggleDarkTheme} />\r\n            {props.children}\r\n        </ThemeProvider>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nimport { config } from '../constants'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n        textAlign: 'center',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n        textAlign: 'center'\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    card: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        maxWidth: 345,\r\n        borderRadius: 10\r\n    },\r\n    media: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        height: 140\r\n    }\r\n}))\r\n\r\n/*\r\nThis component is to present a summary of the artefact to a user, it's used in the homepage\r\nand manage page as a quick way to assist navigating through artefacts\r\n*/\r\nfunction ArtefactCard({ artefact }) {\r\n    const classes = useStyles()\r\n\r\n    const { upload, name, description, id } = artefact\r\n    const mediaURI = config.mediaRoot + upload\r\n\r\n    return (\r\n        <Card className={classes.card} elevation={3}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    image={mediaURI}\r\n                    title={name}\r\n                />\r\n                <CardContent>\r\n                    <Grid item xs zeroMinWidth>\r\n                        <Typography\r\n                            gutterBottom\r\n                            variant='h5'\r\n                            component='h2'\r\n                            noWrap\r\n                        >\r\n                            {name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs zeroMinWidth>\r\n                        <Typography\r\n                            variant='body2'\r\n                            color='textSecondary'\r\n                            component='p'\r\n                            noWrap\r\n                        >\r\n                            {description}\r\n                        </Typography>\r\n                    </Grid>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button\r\n                    size='small'\r\n                    fullWidth\r\n                    color='primary'\r\n                    component={RouterLink}\r\n                    to={`/artefacts/${id}`}\r\n                >\r\n                    View\r\n                </Button>\r\n                {/* <Button\r\n                    size='small'\r\n                    color='secondary'\r\n                    component={RouterLink}\r\n                    to={`/artefacts/edit/${id}`}\r\n                >\r\n                    Edit\r\n                </Button> */}\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ArtefactCard\r\n","import React, { Fragment, useState } from 'react'\r\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\r\nimport { MY_ACCESS_TOKEN } from '../constants'\r\nimport ArtefactCard from '../components/ArtefactCard'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    popup: {\r\n        // backgroundColor: theme.palette.background.paper + '!important',\r\n        // background: theme.palette.background.paper + '!important',\r\n        zIndex: '50 !important'\r\n    }\r\n}))\r\n\r\n\r\nconst mapProps = {\r\n    accessToken: MY_ACCESS_TOKEN,\r\n    attributionControl: false,\r\n    maxZoom: 18,\r\n    minZoom: 2\r\n}\r\nconst Mapbox = ReactMapboxGl({\r\n    ...mapProps,\r\n    interactive: false\r\n})\r\n\r\nconst InteractiveMapbox = ReactMapboxGl({\r\n    ...mapProps,\r\n    interactive: true\r\n})\r\n\r\nexport default function Map(props) {\r\n    const classes = useStyles()\r\n    \r\n    const MapType = props.interactive ? InteractiveMapbox : Mapbox\r\n    var artefacts = props.artefacts\r\n    if (!artefacts) artefacts = []\r\n\r\n    const [openArtefactID, setOpenArtefactID] = useState('')\r\n    return (\r\n        <MapType\r\n            style={\r\n                props.mapStyle\r\n                    ? props.mapStyle\r\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\r\n            }\r\n            containerStyle={props.containerStyle}\r\n            {...props.mapState}\r\n            onClick={e => setOpenArtefactID('')}\r\n        >\r\n            {artefacts.map(artefact => {\r\n                var { center, popup, initPopupOpen, ...rest } = artefact\r\n                if (!center || !center.length) {\r\n                    return null\r\n                }\r\n                var artefactID = artefact.id\r\n                return (\r\n                    <Fragment key={artefactID}>\r\n                        <Marker\r\n                            coordinates={center}\r\n                            onClick={e => {\r\n                                if (openArtefactID === artefactID) {\r\n                                    setOpenArtefactID('')\r\n                                } else {\r\n                                    setOpenArtefactID(artefactID)\r\n                                }\r\n                                if (artefact.initPopupOpen) {\r\n                                    artefact.initPopupOpen = false\r\n                                }\r\n                            }}\r\n                        >\r\n                            <img\r\n                                src={\r\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\r\n                                }\r\n                                alt='marker-img'\r\n                            />\r\n                        </Marker>\r\n                        {popup &&\r\n                            (openArtefactID === artefactID ||\r\n                                initPopupOpen) && (\r\n                                <Popup\r\n                                    coordinates={center}\r\n                                    offset={{\r\n                                        'bottom-left': [12, -38],\r\n                                        bottom: [0, -38],\r\n                                        'bottom-right': [-12, -38]\r\n                                    }}\r\n                                    style={{\r\n                                        backgroundColor: '#000000 !important'\r\n                                    }}\r\n                                    className={classes.popup}\r\n                                >\r\n                                    <ArtefactCard artefact={artefact} />\r\n                                </Popup>\r\n                            )}\r\n                    </Fragment>\r\n                )\r\n            })}\r\n        </MapType>\r\n    )\r\n}\r\n","import { MY_ACCESS_TOKEN } from '../constants'\r\n// import { geocodeQuery } from '.'\r\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\r\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\r\n\r\nconst _handleResponse = response => {\r\n    var out = {}\r\n    // console.log('GEOCODING RESPONSE: ', response.body)\r\n    const features = response.body.features\r\n    if (!features) {\r\n        out.noResults = true\r\n        return out\r\n    }\r\n    var results = []\r\n    for (var i = 0; i < features.length; i++) {\r\n        var feature = features[i]\r\n        var result = {}\r\n        result.mapState = { center: feature.center }\r\n\r\n        if (feature.place_type[0] === 'place') {\r\n            const bboxCoords = feature.bbox\r\n            if (bboxCoords) {\r\n                const bbox = [\r\n                    [bboxCoords[0], bboxCoords[1]],\r\n                    [bboxCoords[2], bboxCoords[3]]\r\n                ]\r\n                result.mapState.fitBounds = bbox\r\n            }\r\n        } else if (feature.place_type[0] === 'address') {\r\n            result.mapState.zoom = [15]\r\n        }\r\n        result.placeName = feature.place_name\r\n        result.locationType = feature.place_type[0]\r\n        results.push(result)\r\n    }\r\n    out.results = results\r\n    return out\r\n}\r\n\r\nconst _handleError = error => {\r\n    var out = {}\r\n    console.log('query error occurred')\r\n    out.error = error\r\n    return out\r\n}\r\n\r\nexport default function geocodeQuery(query, types) {\r\n    if (!query) {\r\n        return new Promise(function(resolve, reject) {\r\n            resolve()\r\n        })\r\n    }\r\n\r\n    var args = {\r\n        query: query,\r\n        limit: 5,\r\n    }\r\n    if (types) args.types = types\r\n\r\n    if (typeof query === 'object') {\r\n        return geocodingService\r\n            .reverseGeocode(args)\r\n            .send()\r\n            .then(\r\n                response => _handleResponse(response),\r\n                error => _handleError(error)\r\n            )\r\n    } else if (typeof query === 'string') {\r\n        return geocodingService\r\n            .forwardGeocode(args)\r\n            .send()\r\n            .then(\r\n                response => _handleResponse(response),\r\n                error => _handleError(error)\r\n            )\r\n    }\r\n}\r\n\r\nexport function artefactGeocodeQuery(artefact) {\r\n    return geocodeQuery(artefact.address).then(response => {\r\n        return { artefact: artefact, response: response }\r\n    })\r\n}\r\n","import gql from 'graphql-tag'\r\n\r\n// Get the id back to allow for querying for the artefact later\r\nexport const CREATE_ARTEFACT_MUTATION = gql`\r\n    mutation CreateArtefactMutation(\r\n        $name: String!\r\n        $state: String!\r\n        $isPublic: Boolean\r\n        $description: String!\r\n        $belongsToFamilies: [ID]\r\n        $address: String\r\n        $date: String\r\n    ) {\r\n        artefactCreate(\r\n            input: {\r\n                name: $name\r\n                state: $state\r\n                description: $description\r\n                isPublic: $isPublic\r\n                belongsToFamilies: $belongsToFamilies\r\n                address: $address\r\n                date: $date\r\n            }\r\n        ) {\r\n            artefact {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const CREATE_ARTEFACT_MUTATION_STR = `\r\nmutation CreateArtefactMutation(\r\n        $name: String!\r\n        $state: String!\r\n        $isPublic: Boolean\r\n        $description: String!\r\n        $belongsToFamilies: [ID]\r\n        $address: String\r\n        $date: String\r\n    ) {\r\n        artefactCreate(\r\n            input: {\r\n                name: $name\r\n                state: $state\r\n                description: $description\r\n                isPublic: $isPublic\r\n                belongsToFamilies: $belongsToFamilies\r\n                address: $address\r\n                date: $date\r\n            }\r\n        ) {\r\n            artefact {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_ARTEFACT_STATES_QUERY = gql`\r\n    query ArtefactStatesQuery($name: String!) {\r\n        __type(name: $name) {\r\n            enumValues {\r\n                name\r\n                description\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_FAMILIES_QUERY = gql`\r\n    query artefactsQuery {\r\n        me {\r\n            isMemberOf {\r\n                familyName\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_MY_ID_QUERY = gql`\r\n    query artefactsQuery {\r\n        me {\r\n            id\r\n        }\r\n    }\r\n`\r\n\r\nexport const ARTEFACT_DETAIL = gql`\r\n    query DetailView($id: ID!) {\r\n        artefact(id: $id) {\r\n            id\r\n            name\r\n            description\r\n            admin {\r\n                id\r\n                username\r\n            }\r\n            state\r\n            isPublic\r\n            upload\r\n            belongsToFamilies {\r\n                id\r\n            }\r\n            addedAt\r\n            address\r\n            date\r\n        }\r\n    }\r\n`\r\n\r\nexport const UPDATE_ARTEFACT_MUTATION = gql`\r\n    mutation UpdateArtefactMutation(\r\n        $id: ID!\r\n        $artefactInput: ArtefactInputType!\r\n    ) {\r\n        artefactUpdate(id: $id, input: $artefactInput) {\r\n            artefact {\r\n                id\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const LOGIN_MUTATION = gql`\r\n    mutation TokenAuth($username: String!, $password: String!) {\r\n        tokenAuth(username: $username, password: $password) {\r\n            token\r\n        }\r\n    }\r\n`\r\n\r\nexport const GET_FAMILY_ARTEFACTS = gql`\r\n    query getFamilyArtefacts($id: ID!) {\r\n        family(id: $id) {\r\n            hasArtefacts {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name\r\n                        description\r\n                        address\r\n                        upload\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SIGNUP_MUTATION = gql`\r\n    mutation SignupMutation(\r\n        $email: String!\r\n        $password: String!\r\n        $username: String!\r\n    ) {\r\n        createUser(email: $email, username: $username, password: $password) {\r\n            user {\r\n                id\r\n                username\r\n                email\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n// Get the familyName and joinCode back to present to the user straight away after\r\n// successful creation\r\nexport const CREATE_FAMILY_MUTATION = gql`\r\n    mutation FamilyCreate($familyName: String!, $about: String) {\r\n        familyCreate(input: { familyName: $familyName, about: $about }) {\r\n            family {\r\n                familyName\r\n                joinCode\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const DELETE_ARTEFACT_MUTATION = gql`\r\n    mutation ArtefactDelete($id: ID!) {\r\n        artefactDelete(id: $id) {\r\n            ok\r\n        }\r\n    }\r\n`\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport {\r\n    GET_FAMILIES_QUERY\r\n} from '../gqlQueriesMutations'\r\n\r\nexport default function GetFamiliesWrapper({\r\n    child: Child,\r\n    childProps,\r\n    ...rest\r\n}) {\r\n\r\n    const [families, setFamilies] = useState([])\r\n    // get users families\r\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\r\n        onCompleted: data => setFamilies(data.me.isMemberOf),\r\n        onError: error => console.log(error)\r\n    })\r\n\r\n    var thisChildProps = {\r\n        ...childProps,\r\n        families: families,\r\n        familiesLoading: loading\r\n    }\r\n\r\n    return <Child {...rest} {...thisChildProps} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\r\n\r\nexport default function GetStatesWrapper({\r\n    child: Child,\r\n    childProps,\r\n    ...rest\r\n}) {\r\n    // get artefact states\r\n    const [artefactStates, setArtefactStates] = useState({})\r\n    const _saveArtefactStates = async statesData => {\r\n        var temp = {}\r\n        var desc\r\n        var state\r\n        for (var i in statesData.__type.enumValues) {\r\n            state = statesData.__type.enumValues[i]\r\n            desc = state.description\r\n            temp[desc] = state.name\r\n        }\r\n        setArtefactStates(temp)\r\n    }\r\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\r\n        variables: {\r\n            name: 'ArtefactState'\r\n        },\r\n        onCompleted: _saveArtefactStates,\r\n        onError: error => console.log(error)\r\n    })\r\n\r\n    var thisChildProps = {\r\n        ...childProps,\r\n        artefactStates: artefactStates,\r\n        statesLoading: loading\r\n    }\r\n\r\n    return <Child {...rest} {...thisChildProps} />\r\n}\r\n","import React from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\r\n\r\nexport default function GetArtefactWrapper({\r\n    child: Child,\r\n    childProps,\r\n    ...rest\r\n}) {\r\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\r\n        variables: {\r\n            id: rest.match.params.id\r\n        },\r\n        onError: error => console.error(error)\r\n    })\r\n\r\n    var thisChildProps = {\r\n        ...childProps,\r\n        artefactData: data,\r\n        artefactLoading: loading,\r\n    }\r\n\r\n    return <Child {...rest} {...thisChildProps} />\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        margin: theme.spacing(1),\r\n        borderRadius: 10\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        backgroundColor: theme.palette.background.paper,\r\n        alignItems: 'center',\r\n        alignContent: 'stretch',\r\n        justify: 'center',\r\n        borderRadius: 10\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}))","import { makeStyles } from '@material-ui/core/styles'\r\n\r\nexport default makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        justifyContent: 'center'\r\n    },\r\n    formControl: {\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        textAlign: 'left'\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center'\r\n        // flexGrow: 1\r\n    },\r\n    fieldTitle: {\r\n        textAlign: 'left',\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        // textAlign: 'center',\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    paperWrapper: {\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        borderRadius: 10\r\n    },\r\n    button: {\r\n        height: '100%'\r\n    },\r\n    editLinkButton: {\r\n        width: '60px',\r\n        height: '30px',\r\n        margin: theme.spacing(1)\r\n    },\r\n    deleteButton: {\r\n        width: '60px',\r\n        height: '30px',\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.error.main\r\n    },\r\n    map: {\r\n        height: '200px',\r\n        type: theme.palette.type\r\n    },\r\n    form: {\r\n        marginBottom: theme.spacing(10),\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        textAlign: 'center'\r\n    },\r\n    iconButton: {\r\n        padding: 10\r\n    },\r\n    dropzone: {\r\n        backgroundColor: theme.palette.background.paper + '!important',\r\n        minHeight: '70px !important',\r\n        borderRadius: 10,\r\n        alignItems: 'flex-start !important'\r\n    },\r\n    dropzoneText: {\r\n        fontSize: 'large !important'\r\n        // margin: '0 !important'\r\n    },\r\n    outerContainer: {\r\n        spacing: theme.spacing(1),\r\n        alignItems: 'stretch',\r\n        alignContent: 'stretch',\r\n        justifyContent: 'center'\r\n    },\r\n    switch: {\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n    }\r\n}))\r\n","import React, { useState, useContext } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nimport {\r\n    Button,\r\n    TextField,\r\n    FormHelperText,\r\n    Link,\r\n    Grid,\r\n    Typography,\r\n    Paper\r\n} from '@material-ui/core'\r\n\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport authContext from '../authContext'\r\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\r\nimport { Layout, formUseStyles } from '../components'\r\n\r\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\r\n\r\nfunction Login(props) {\r\n    const context = useContext(authContext)\r\n    const classes = formUseStyles()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [invalidCred, setInvalidCred] = useState(false)\r\n    const [unknownError, setUnknownError] = useState(false)\r\n\r\n    const _confirm = async data => {\r\n        const { token } = data.tokenAuth\r\n        context.handleAuthentication(token)\r\n        localStorage.setItem(AUTH_TOKEN, token)\r\n        props.history.push(`/`)\r\n    }\r\n\r\n    const _handleError = async errors => {\r\n        console.log('_handleError run')\r\n        if (errors.graphQLErrors) {\r\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\r\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\r\n                setInvalidCred(true)\r\n                console.log('invalid credentials')\r\n            } else {\r\n                console.log('unexpect error(s):')\r\n                console.log(errors)\r\n                setUnknownError(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [login] = useMutation(LOGIN_MUTATION, {\r\n        onCompleted: _confirm,\r\n        onError: _handleError\r\n    })\r\n\r\n    const submitForm = async event => {\r\n        login({ variables: { username: username, password: password } })\r\n        event.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={6}>\r\n            <form onSubmit={submitForm} className={classes.form}>\r\n                <Typography\r\n                    component='h1'\r\n                    variant='h5'\r\n                    className={classes.root}\r\n                >\r\n                    Log In\r\n                </Typography>\r\n                <TextField\r\n                    className={classes.root}\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    id='username'\r\n                    label='Username'\r\n                    autoFocus\r\n                    onChange={e => setUsername(e.target.value)}\r\n                    error={invalidCred}\r\n                />\r\n                <TextField\r\n                    className={classes.root}\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    label='Password'\r\n                    type='password'\r\n                    id='password'\r\n                    onChange={e => setPassword(e.target.value)}\r\n                    error={invalidCred}\r\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\r\n                />\r\n\r\n                <Grid\r\n                    container\r\n                    justify='center'\r\n                    alignItems='center'\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            className={classes.root}\r\n                            name='submit'\r\n                            label='Submit'\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            fullWidth\r\n                        >\r\n                            Log In\r\n                        </Button>\r\n\r\n                        {unknownError && (\r\n                            <FormHelperText\r\n                                error={unknownError}\r\n                                className={classes.root}\r\n                            >\r\n                                Unknown Error Occurred\r\n                            </FormHelperText>\r\n                        )}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <Link\r\n                            component={RouterLink}\r\n                            to='/signup'\r\n                            className={classes.root}\r\n                            color='inherit'\r\n                        >\r\n                            Need an account? Sign up\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default props => (\r\n    <Layout>\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n            style={{ minHeight: '80vh' }}\r\n        >\r\n            <Grid item xs={10} sm={8} md={6} lg={4}>\r\n                <Login {...props} />\r\n            </Grid>\r\n        </Grid>\r\n    </Layout>\r\n)\r\n","var passwordValidator = require('password-validator');\r\n\r\n// Create a schema\r\nexport var PASSWORD_SCHEMA = new passwordValidator();\r\n\r\nconst min_len = 6\r\nconst max_len = 100\r\n\r\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\r\nPASSWORD_SCHEMA\r\n    .is().min(min_len)                                    // Minimum length 8\r\n    .is().max(max_len)                                  // Maximum length 100\r\n    .has().uppercase()                              // Must have uppercase letters\r\n    .has().digits()                                 // Must have digits\r\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\r\n    // .has().lowercase()                              // Must have lowercase letters\r\n    // .has().not().spaces()                           // Should not have spaces\r\n\r\nexport const parseFailedRules = (rules) => {\r\n    var output = ''\r\n    for (var i=0; i < rules.length; i++){\r\n        if (i >=1) output += \" | \"\r\n        \r\n        var rule = rules[i]\r\n        if (rule === 'min'){\r\n            output += `Password must be at least ${min_len} characters long`\r\n        }\r\n        if (rule === 'max') {\r\n            output += `Password must be at most ${max_len} characters long`\r\n        }\r\n        if (rule === 'uppercase') {\r\n            output += `Password must have an uppercase letter`\r\n        }\r\n        if (rule === 'digits') {\r\n            output += `Password must have a digit`\r\n        }\r\n        if (rule === 'oneOf') {\r\n            output += `Password is too common`\r\n        }\r\n    }\r\n    return output\r\n}","import React, { useState } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\n\r\nimport {\r\n    Button,\r\n    TextField,\r\n    FormHelperText,\r\n    Link,\r\n    Grid,\r\n    Typography,\r\n    Paper\r\n} from '@material-ui/core'\r\n\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { Layout, formUseStyles } from '../components'\r\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\r\nimport {\r\n    PASSWORD_SCHEMA,\r\n    parseFailedRules\r\n} from '../components/passwordValidator.js'\r\n\r\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\r\n\r\nfunction Signup(props) {\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\r\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\r\n    const [validPassword, setValidPassword] = useState(false)\r\n    const [failedPassRules, setFailedPassRules] = useState([])\r\n    const [unknownError, setUnknownError] = useState(false)\r\n\r\n    var emailValidator = require('email-validator')\r\n\r\n    const classes = formUseStyles()\r\n    const _confirm = async data => {\r\n        // handle signup errors and potentially login\r\n        props.history.push(`/login`)\r\n    }\r\n\r\n    const _handleError = async errors => {\r\n        console.log('_handleError run')\r\n        if (errors.graphQLErrors) {\r\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\r\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\r\n                setUsernameIsTaken(true)\r\n            } else {\r\n                console.log('unexpect error(s):')\r\n                console.log(errors)\r\n                setUnknownError(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const [signup] = useMutation(SIGNUP_MUTATION, {\r\n        onCompleted: _confirm,\r\n        onError: _handleError\r\n    })\r\n\r\n    const submitForm = async event => {\r\n        event.preventDefault()\r\n        console.log('form submitted')\r\n        signup({\r\n            variables: { username: username, email: email, password: password }\r\n        })\r\n    }\r\n\r\n    const changePassword = async pass => {\r\n        setPassword(pass)\r\n\r\n        // password validation\r\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\r\n        setFailedPassRules(failedRules)\r\n        if (failedRules.length !== 0) {\r\n            setValidPassword(false)\r\n        } else {\r\n            setValidPassword(true)\r\n        }\r\n    }\r\n\r\n    const errorPassword = !!password && !validPassword\r\n    const errorConfirmPassword =\r\n        !!confirmPassword && !(confirmPassword === password)\r\n\r\n    const disableSubmit =\r\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\r\n        (!!email && !emailValidator.validate(email))\r\n\r\n    const invalidEmail = !!email && !emailValidator.validate(email)\r\n    const emailError = emailIsTaken || invalidEmail\r\n    var emailErrMsg = ''\r\n    if (invalidEmail) {\r\n        emailErrMsg = 'Email is invalid'\r\n    } else if (emailIsTaken) {\r\n        emailErrMsg = 'Email is taken'\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={6}>\r\n            <form className={classes.form} onSubmit={submitForm}>\r\n                <Typography\r\n                    component='h1'\r\n                    variant='h5'\r\n                    className={classes.root}\r\n                >\r\n                    Sign up\r\n                </Typography>\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    autoComplete='username'\r\n                    label='Username'\r\n                    type='username'\r\n                    autoFocus\r\n                    error={usernameIsTaken}\r\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\r\n                />\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    autoComplete='email'\r\n                    label='Email'\r\n                    type='email'\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    error={emailError}\r\n                    helperText={emailErrMsg}\r\n                />\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    autoComplete='password'\r\n                    label='Password'\r\n                    type='password'\r\n                    onChange={e => changePassword(e.target.value)}\r\n                    error={errorPassword}\r\n                    helperText={\r\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\r\n                    }\r\n                />\r\n\r\n                <TextField\r\n                    className={classes.root}\r\n                    variant='outlined'\r\n                    required\r\n                    fullWidth\r\n                    label='Confirm Password'\r\n                    type='password'\r\n                    onChange={e => setConfirmPassword(e.target.value)}\r\n                    error={errorConfirmPassword}\r\n                    helperText={\r\n                        errorConfirmPassword ? 'Passwords must match' : ''\r\n                    }\r\n                />\r\n\r\n                <Grid\r\n                    container\r\n                    justify='center'\r\n                    alignItems='center'\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            className={classes.root}\r\n                            fullWidth\r\n                            label='Submit'\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            disabled={disableSubmit}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        {unknownError && (\r\n                            <FormHelperText\r\n                                error={unknownError}\r\n                            ></FormHelperText>\r\n                        )}\r\n                    </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                        <Link\r\n                            className={classes.root}\r\n                            component={RouterLink}\r\n                            to='/login'\r\n                            color='inherit'\r\n                        >\r\n                            Already have an account? Log in\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default props => (\r\n    <Layout>\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n            style={{ minHeight: '80vh' }}\r\n        >\r\n            <Grid item xs={10} sm={8} md={6} lg={4}>\r\n                <Signup {...props} />\r\n            </Grid>\r\n        </Grid>\r\n    </Layout>\r\n)\r\n","import React, { useContext } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport authContext from '../authContext';\r\n\r\nfunction Logout() {\r\n    const context = useContext(authContext);\r\n    context.logout();\r\n\r\n    return (\r\n        <Redirect to='/login' />\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useContext, useState } from 'react'\r\nimport {\r\n    IconButton,\r\n    Button,\r\n    CssBaseline,\r\n    TextField,\r\n    Typography,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Grid,\r\n    Paper,\r\n    FormControl\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport Layout from '../components/Layout'\r\nimport authContext from '../authContext'\r\nimport { artefactFamilyFormUseStyles } from '../components'\r\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\r\n\r\nconst MyDialogTitle = props => {\r\n    const classes = artefactFamilyFormUseStyles()\r\n    const { children, onClose } = props\r\n\r\n    return (\r\n        <DialogTitle disableTypography className={classes.root}>\r\n            <Typography variant='h6'>{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label='close'\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    )\r\n}\r\n\r\nfunction CreateFamilyView(props) {\r\n    const classes = artefactFamilyFormUseStyles()\r\n\r\n    const context = useContext(authContext)\r\n    const username = context.user.username\r\n\r\n    const [familyName, setFamilyName] = useState('')\r\n    const [about, setAbout] = useState('')\r\n    const [joinCode, setJoinCode] = useState('')\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const _completed = async data => {\r\n        console.log(data)\r\n        const { joinCode } = data.familyCreate.family\r\n        setJoinCode(joinCode)\r\n        setOpen(true)\r\n    }\r\n\r\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\r\n        onCompleted: _completed\r\n    })\r\n\r\n    const submitForm = async event => {\r\n        event.preventDefault()\r\n        console.log('Family name: ' + familyName)\r\n        console.log('About: ' + about)\r\n        createFamily({\r\n            variables: {\r\n                familyName: familyName,\r\n                about: about\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClose = event => {\r\n        event.preventDefault()\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={submitForm}>\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                className={classes.outerContainer}\r\n            >\r\n                <Grid item xs={12} container justify='center'>\r\n                    <Typography variant='h4' className={classes.title}>\r\n                        Create Family\r\n                    </Typography>\r\n\r\n                    <Typography variant='subtitle1' className={classes.title}>\r\n                        Families are how you manage your artefacts. We recognise\r\n                        there is often complex overlap between families. That's\r\n                        why you can create and be a part of several families, so\r\n                        you can separate which of the artefacts you manage\r\n                        belong to which family.\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paperWrapper} elevation={3}>\r\n                        <FormControl className={classes.formControl} fullWidth>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                                id='family-name'\r\n                                label='Family name'\r\n                                autoFocus\r\n                                onChange={e => setFamilyName(e.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paperWrapper} elevation={3}>\r\n                        <FormControl className={classes.formControl} fullWidth>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                multiline\r\n                                rows={6}\r\n                                fullWidth\r\n                                id='about'\r\n                                label='Tell people about your family'\r\n                                onChange={e => setAbout(e.target.value)}\r\n                            />\r\n                        </FormControl>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paperWrapper} elevation={3}>\r\n                        <FormControl className={classes.formControl} fullWidth>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                disabled\r\n                                defaultValue={username}\r\n                                fullWidth\r\n                                id='family-admin'\r\n                                label='Family Admin'\r\n                                onChange={e => console.log('hello')}\r\n                            />\r\n                        </FormControl>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={5}>\r\n                    <Button\r\n                        name='create'\r\n                        label='Create'\r\n                        type='submit'\r\n                        fullWidth\r\n                        variant='contained'\r\n                        color='primary'\r\n                    >\r\n                        Create\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n            {data && (\r\n                <Dialog open={open} onClose={handleClose}>\r\n                    <MyDialogTitle onClose={handleClose}>\r\n                        Begin adding members to '{familyName}'!\r\n                    </MyDialogTitle>\r\n                    <DialogContent>\r\n                        <Typography align='center'>\r\n                            Begin getting members to join your family! Simply\r\n                            share the code below to your family members, get\r\n                            them to sign up and then they can join!\r\n                            <br />\r\n                            {joinCode}\r\n                        </Typography>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default props => (\r\n    <Layout>\r\n        <CssBaseline />\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction='column'\r\n            alignItems='center'\r\n            justify='center'\r\n            style={{ minHeight: '80vh' }}\r\n        >\r\n            <Grid item xs={11} md={6}>\r\n                <CreateFamilyView {...props} />\r\n            </Grid>\r\n        </Grid>\r\n    </Layout>\r\n)\r\n","import React, { Fragment } from 'react'\r\n\r\nimport { Button, FormHelperText } from '@material-ui/core'\r\n\r\nexport default ({ noErrors, ...rest }) => (\r\n    <Fragment>\r\n        <Button\r\n            {...rest}\r\n        >\r\n            Save\r\n        </Button>\r\n        {!noErrors && (\r\n            <FormHelperText error={!noErrors}>\r\n                Unknown Error Occurred\r\n            </FormHelperText>\r\n        )}\r\n    </Fragment>\r\n)\r\n","import React, { Fragment } from 'react'\r\nimport { Grid, Typography, Button } from '@material-ui/core'\r\nimport CreateButton from './CreateButton'\r\n\r\nexport default ({ mode, classes, isAdmin, goToEdit, openDelete, noErrors }) => {\r\n    const { create, edit, view } = mode\r\n    const showEditButton = view && isAdmin\r\n    const showDeleteButton = edit && isAdmin\r\n\r\n    return (\r\n        <Fragment>\r\n            {(showEditButton || showDeleteButton || create) && (\r\n                <div\r\n                    className={classes.editLinkButton}\r\n                    style={{\r\n                        marginRight: 'auto',\r\n                        // width: '65px',\r\n                        height: '20px',\r\n                        visibility: 'hidden'\r\n                    }}\r\n                />\r\n            )}\r\n            <Typography variant='h4' className={classes.title}>\r\n                {create && 'Create'} {edit && 'Edit'} {view && 'View'} Artefact\r\n            </Typography>\r\n            {showEditButton && (\r\n                <Button\r\n                    color='secondary'\r\n                    variant='contained'\r\n                    onClick={goToEdit}\r\n                    className={classes.editLinkButton}\r\n                    style={{ marginLeft: 'auto' }}\r\n                >\r\n                    Edit\r\n                </Button>\r\n            )}\r\n            {showDeleteButton && (\r\n                <Button\r\n                    color='default'\r\n                    variant='contained'\r\n                    onClick={openDelete}\r\n                    className={classes.editLinkButton}\r\n                    style={{ marginLeft: 'auto' }}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            )}\r\n\r\n            {create && (\r\n                <CreateButton\r\n                    noErrors={noErrors}\r\n                    color='secondary'\r\n                    variant='contained'\r\n                    type='submit'\r\n                    className={classes.editLinkButton}\r\n                    style={{ marginLeft: 'auto' }}\r\n                />\r\n            )}\r\n            {create && (\r\n                <Grid item xs={12}>\r\n                    <Typography variant='subtitle1' className={classes.title}>\r\n                        Artefacts are belongings of the family, enter as much or\r\n                        as little detail as you like\r\n                    </Typography>\r\n                </Grid>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nexport default ({ mode, states, setters, disabled, name }) => {\r\n    var { view } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n    return (\r\n        <TextField\r\n            // style={{ height: '100%' }}\r\n            // InputProps={{ style: {height: '100%'} }}\r\n            id='artefact-name'\r\n            label='Artefact name'\r\n            variant='outlined'\r\n            autoFocus={!view}\r\n            required\r\n            fullWidth\r\n            value={state.name || ''}\r\n            inputProps={{ readOnly: view }}\r\n            onChange={e => handleSetField(name, e.target.value)}\r\n            disabled={disabled}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField, MenuItem } from '@material-ui/core'\r\n\r\nexport default ({ mode, states, setters, artefactStates, disabled, name }) => {\r\n    var { view } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n    return (\r\n        <TextField\r\n            id='state'\r\n            label='Artefact State'\r\n            variant='outlined'\r\n            required\r\n            fullWidth\r\n            value={state.state || ''}\r\n            inputProps={{\r\n                readOnly: view\r\n            }}\r\n            onChange={e => handleSetField(name, e.target.value)}\r\n            select\r\n            disabled={disabled}\r\n        >\r\n            {Object.keys(artefactStates).map(value => {\r\n                return (\r\n                    <MenuItem value={artefactStates[value]} key={value}>\r\n                        {value}\r\n                    </MenuItem>\r\n                )\r\n            })}\r\n        </TextField>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nexport default ({ mode, states, setters, disabled, name, numFams }) => {\r\n    var { view } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n\r\n    return (\r\n        <TextField\r\n            id='description'\r\n            label='Description'\r\n            variant='outlined'\r\n            required\r\n            fullWidth\r\n            multiline\r\n            rows={numFams * 2 > 5 ? numFams*2 : 8}\r\n            value={state.description || ''}\r\n            inputProps={{\r\n                readOnly: view\r\n            }}\r\n            onChange={e => handleSetField(name, e.target.value)}\r\n            disabled={disabled}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\nexport default ({ mode, states, username }) => {\r\n    var { view } = mode\r\n    var { state } = states\r\n    return (\r\n        <TextField\r\n            id='artefact-admin'\r\n            label='Artefact Admin'\r\n            variant='outlined'\r\n            required\r\n            fullWidth\r\n            value={\r\n                state.admin && Object.keys(state.admin).length !== 0\r\n                    ? state.admin.username\r\n                    : username\r\n            }\r\n            inputProps={{\r\n                readOnly: view\r\n            }}\r\n            onChange={e => console.log('admin field was changed')}\r\n            disabled\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport 'date-fns'\r\nimport { KeyboardDatePicker } from '@material-ui/pickers'\r\n\r\nexport default ({ mode, states, setters, disabled, name }) => {\r\n    var { view } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n    return (\r\n        <KeyboardDatePicker\r\n            disabled={view || disabled}\r\n            clearable\r\n            minDate={'1500-01-01'}\r\n            // variant='inline'\r\n            inputVariant='outlined'\r\n            format='dd/MM/yyyy'\r\n            openTo='year'\r\n            label='Date'\r\n            value={state.date}\r\n            onChange={date => handleSetField(name, date)}\r\n            KeyboardButtonProps={{\r\n                'aria-label': 'change date'\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport {\r\n    Switch,\r\n    FormHelperText,\r\n    Typography,\r\n    FormControlLabel\r\n} from '@material-ui/core'\r\n\r\nexport default ({ mode, states, setters, disabled, name, classes }) => {\r\n    var { create, edit } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n\r\n    if (create || edit) {\r\n        return (\r\n            <Fragment>\r\n                <Typography variant='h6' className={classes.fieldTitle}>\r\n                    Privacy\r\n                </Typography>\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={state.isPublic || false}\r\n                            onChange={e =>\r\n                                handleSetField(name, e.target.checked)\r\n                            }\r\n                            // edge='end'\r\n                            disabled={disabled}\r\n                        />\r\n                    }\r\n                    style={{ marginLeft: 3 }}\r\n                    label='Public'\r\n                />\r\n                <FormHelperText className={classes.fieldTitle}>\r\n                    {state.isPublic\r\n                        ? 'Viewable by anyone'\r\n                        : 'Viewable by family members only'}\r\n                </FormHelperText>\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Checkbox,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nexport default ({\r\n    mode,\r\n    states,\r\n    setters,\r\n    families,\r\n    disabled,\r\n    name,\r\n    classes\r\n}) => {\r\n    var { view } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n\r\n    if (\r\n        view && state.belongsToFamiliesBools &&\r\n        Object.values(state.belongsToFamiliesBools).filter(value => value)\r\n            .length === 0\r\n    ) {\r\n        return (\r\n            <Typography variant='h6' className={classes.fieldTitle}>\r\n                This artefact doesn't belong to any of your families\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h6' className={classes.fieldTitle}>\r\n                {!view\r\n                    ? 'Families the artefact belongs to'\r\n                    : 'Belongs to your families'}\r\n            </Typography>\r\n            <List disablePadding>\r\n                {families.map(family => {\r\n                    if (\r\n                        state.belongsToFamiliesBools &&\r\n                        (!view || state.belongsToFamiliesBools[family.id])\r\n                    ) {\r\n                        return (\r\n                            <ListItem key={family.id} dense disabled={disabled}>\r\n                                {!view && (\r\n                                    <ListItemIcon>\r\n                                        <Checkbox\r\n                                            edge='start'\r\n                                            checked={\r\n                                                state.belongsToFamiliesBools[\r\n                                                    family.id\r\n                                                ] || false\r\n                                            }\r\n                                            onClick={e =>\r\n                                                handleSetField(name, {\r\n                                                    ...state.belongsToFamiliesBools,\r\n                                                    [family.id]:\r\n                                                        e.target.checked\r\n                                                })\r\n                                            }\r\n                                            tabIndex={-1}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                )}\r\n                                <ListItemText primary={family.familyName} />\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                    return null\r\n                })}\r\n            </List>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport { Typography } from '@material-ui/core'\r\nimport Image from 'material-ui-image'\r\nimport { useTheme } from '@material-ui/styles'\r\n\r\nimport { config } from '../../../constants'\r\nimport { Loading } from '../../../components'\r\n\r\nexport default ({ mode, classes, states, setters, name }) => {\r\n    const theme = useTheme()\r\n    var { edit, create, view } = mode\r\n    var { state } = states\r\n    var { handleSetField } = setters\r\n    return (\r\n        <Fragment>\r\n            <Typography variant='h6' className={classes.fieldTitle}>\r\n                Images\r\n            </Typography>\r\n            {edit && (\r\n                <Typography variant='caption' className={classes.fieldTitle}>\r\n                    Editing coming soon...\r\n                </Typography>\r\n            )}\r\n\r\n            {create && (\r\n                <DropzoneArea\r\n                    initialFiles={state.files || []}\r\n                    acceptedFiles={['image/*']}\r\n                    dropzoneText=''\r\n                    filesLimit={1}\r\n                    onChange={files => handleSetField(name, files)}\r\n                    dropzoneClass={classes.dropzone}\r\n                    classes={{\r\n                        dropzoneTextStyle: classes.fieldTitle,\r\n                        dropzoneParagraph: classes.fieldTitle\r\n                    }}\r\n                />\r\n            )}\r\n            {(view || edit) && state.upload !== 'False' && (\r\n                <Image\r\n                    src={config.mediaRoot + state.upload}\r\n                    loading={<Loading />}\r\n                    color={theme.palette.background.paper}\r\n                    imageStyle={{ borderRadius: 10 }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport {\r\n    TextField,\r\n    Grid,\r\n    IconButton,\r\n    Popover,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n} from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { Map } from '../../../components'\r\n\r\nexport default ({\r\n    mode,\r\n    states,\r\n    setters,\r\n    classes,\r\n    name,\r\n    handleGeocodeQuery,\r\n    disabled\r\n}) => {\r\n    var { view } = mode\r\n    var {\r\n        handleSetField,\r\n        setAddressIsSearchResult,\r\n        setLocationState,\r\n        handleSetLocationResult\r\n    } = setters\r\n    var { locationState, state } = states\r\n\r\n    const theme = useTheme()\r\n    var mapStyle\r\n    if (theme && theme.palette.type === 'dark') {\r\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\r\n    } else {\r\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TextField\r\n                id='address'\r\n                label='Address'\r\n                variant='outlined'\r\n                fullWidth\r\n                disabled={disabled}\r\n                value={state.address || ''}\r\n                inputProps={{\r\n                    readOnly: view\r\n                }}\r\n                onChange={e => {\r\n                    handleSetField(name, e.target.value)\r\n                    if (e.target.value) {\r\n                        setAddressIsSearchResult(false)\r\n                    } else {\r\n                        // allow blank address\r\n                        setAddressIsSearchResult(true)\r\n                    }\r\n                }}\r\n                error={!!locationState.error}\r\n                InputProps={{\r\n                    endAdornment: !view && (\r\n                        <IconButton\r\n                            className={classes.iconButton}\r\n                            aria-label='search'\r\n                            id='search'\r\n                            onClick={e =>\r\n                                handleGeocodeQuery({\r\n                                    query: state.address,\r\n                                    initial: false\r\n                                })\r\n                            }\r\n                        >\r\n                            <SearchIcon />\r\n                        </IconButton>\r\n                    ),\r\n                    style: { marginBottom: 3 }\r\n                }}\r\n                onKeyDown={e => {\r\n                    if (e.keyCode === 13 && !view) {\r\n                        e.preventDefault()\r\n                        document.getElementById('search').click()\r\n                    }\r\n                }}\r\n                helperText={locationState.error}\r\n            />\r\n            <Popover\r\n                id={locationState.queryResults.length ? 'results' : undefined}\r\n                open={!!locationState.queryResults.length}\r\n                anchorEl={document.getElementById('address')}\r\n                onClose={e =>\r\n                    setLocationState({\r\n                        ...locationState,\r\n                        queryResults: []\r\n                    })\r\n                }\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n            >\r\n                <List component='div' disablePadding>\r\n                    {locationState.queryResults.map(result => (\r\n                        <ListItem\r\n                            key={result.placeName}\r\n                            button\r\n                            className={classes.nested}\r\n                            onClick={e => handleSetLocationResult(result)}\r\n                        >\r\n                            <ListItemText primary={result.placeName} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Popover>\r\n\r\n            <Grid container style={{ marginTop: 1 }}>\r\n                <Map\r\n                    interactive={false}\r\n                    className={classes.map}\r\n                    mapState={locationState.mapState}\r\n                    mapStyle={mapStyle}\r\n                    containerStyle={{\r\n                        height: '60vh',\r\n                        width: '100vw',\r\n                        borderRadius: 20,\r\n                        marginTop: 5\r\n                    }}\r\n                    artefacts={[\r\n                        {\r\n                            center: locationState.mapState.center,\r\n                            id: -1\r\n                        }\r\n                    ]}\r\n                />\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\r\n\r\nexport default ({ save, cancel, updateErrors, classes }) => {\r\n    function MyButton(props) {\r\n        return (\r\n            <Button\r\n                variant='contained'\r\n                color={props.color}\r\n                className={classes.button}\r\n                onClick={props.onClick}\r\n                fullWidth\r\n                padding={1}\r\n            >\r\n                {props.name}\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            justify='space-evenly'\r\n            alignItems='center'\r\n            spacing={1}\r\n            style={{ marginTop: 1 }}\r\n        >\r\n            <Grid item xs={6}>\r\n                <MyButton onClick={save} name='Save' color='primary' />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <MyButton\r\n                    onClick={cancel}\r\n                    name='Cancel'\r\n                    color='secondary'\r\n                />\r\n            </Grid>\r\n\r\n            {updateErrors && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>\r\n                        Error Updating Artefact\r\n                    </FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Grid, FormControl, Paper } from '@material-ui/core'\r\nimport EditButtons from './EditButtons'\r\n\r\nexport default ({\r\n    child: Child,\r\n    childProps,\r\n    name,\r\n    classes,\r\n    editButtonProps,\r\n    ...rest\r\n}) => {\r\n    var { beingEdited, mode } = childProps\r\n    var { edit } = mode\r\n    var thisBeingEdited = beingEdited === name\r\n    var someBeingEdited = edit && !!beingEdited\r\n    return (\r\n        <Paper className={classes.paperWrapper} elevation={3}>\r\n            <FormControl className={classes.formControl} fullWidth>\r\n                <Child\r\n                    {...childProps}\r\n                    disabled={someBeingEdited && !thisBeingEdited}\r\n                    name={name}\r\n                    classes={classes}\r\n                    {...rest}\r\n                />\r\n\r\n                {thisBeingEdited && <EditButtons {...editButtonProps} />}\r\n            </FormControl>\r\n        </Paper>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Snackbar,\r\n    IconButton,\r\n    ClickAwayListener\r\n} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\r\n    return (\r\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n                open={open}\r\n                autoHideDuration={2000}\r\n                onClose={() => setOpen(false)}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id'\r\n                }}\r\n                message={<span id='message-id'>Edit successful</span>}\r\n                action={[\r\n                    <Button\r\n                        key='view'\r\n                        color='secondary'\r\n                        size='small'\r\n                        onClick={e => viewArtefact(id)}\r\n                    >\r\n                        VIEW\r\n                    </Button>,\r\n                    <IconButton\r\n                        key='close'\r\n                        aria-label='close'\r\n                        color='inherit'\r\n                        onClick={() => setOpen(false)}\r\n                        className={classes.close}\r\n                    >\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                ]}\r\n            />\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogActions,\r\n    Button\r\n} from '@material-ui/core'\r\n\r\nexport default ({ open, setOpen, deleteArtefact, artefact }) => {\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth='sm'\r\n            open={open}\r\n            onClose={() => setOpen(false)}\r\n            aria-labelledby='help-title'\r\n        >\r\n            <DialogTitle>Delete Artefact</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>This cannot be undone</DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => setOpen(false)} color='secondary'>\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    onClick={() => deleteArtefact({ variables: { id: artefact.id } })}\r\n                    color='primary'\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useMutation } from '@apollo/react-hooks'\r\n\r\nimport { CssBaseline, Grid } from '@material-ui/core'\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\r\n\r\nimport DateFnsUtils from '@date-io/date-fns'\r\n\r\nimport {\r\n    Loading,\r\n    geocodeQuery,\r\n    artefactFamilyFormUseStyles\r\n} from '../../components'\r\n\r\nimport {\r\n    Head,\r\n    Name,\r\n    State,\r\n    Description,\r\n    Admin,\r\n    Date,\r\n    Privacy,\r\n    Families,\r\n    Images,\r\n    FieldWrapper,\r\n    Address,\r\n    SuccessSnackbar,\r\n    DeleteDialog\r\n} from './components'\r\nimport authContext from '../../authContext'\r\n\r\nimport { Layout } from '../../components'\r\n\r\nimport {\r\n    CREATE_ARTEFACT_MUTATION_STR,\r\n    UPDATE_ARTEFACT_MUTATION,\r\n    DELETE_ARTEFACT_MUTATION\r\n} from '../../gqlQueriesMutations'\r\n\r\nimport { AUTH_TOKEN, config } from '../../constants'\r\nimport axios from 'axios'\r\n\r\nfunction ArtefactView(props) {\r\n    // get the mode\r\n    var { create, edit, view } = props\r\n    var mode = { create: create, edit: edit, view: view }\r\n\r\n    // get families, states, and artefact data\r\n    var { statesLoading, familiesLoading, artefactLoading } = props\r\n    var { artefactStates, families } = props\r\n\r\n    // if viewing an existing artefact get the details (potentially unloaded)\r\n    const context = useContext(authContext)\r\n    const username = context.user.username\r\n    let creationErrors\r\n\r\n    if (!create) {\r\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\r\n        var isAdmin = !artefactLoading\r\n            ? artefact.admin.username === username\r\n            : false\r\n    }\r\n\r\n    // only allow admins to see the edit page\r\n    if (!isAdmin && edit) {\r\n        edit = false\r\n        view = true\r\n    }\r\n\r\n    const classes = artefactFamilyFormUseStyles()\r\n\r\n    // state variables for use in the \"edit\" mode:\r\n    // the name of the field being edited, for use in the \"edit\" mode\r\n    const [beingEdited, setBeingEdited] = useState('')\r\n    // the value of the field being edited before it was changed\r\n    const [prevValue, setPrevValue] = useState({})\r\n    // a message indicating successful edit\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\r\n    const [deleteOpen, setDeleteOpen] = useState(false)\r\n\r\n    // state variables for the map\r\n    const [locationState, setLocationState] = useState({\r\n        mapState: {},\r\n        prevMapState: {},\r\n        error: '',\r\n        queryResults: []\r\n    })\r\n    // the address field of the main state object must be a query result on submit\r\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\r\n\r\n    // makes a geocode query and sets the map's state accordingly\r\n    // <inital> intended for use on loading in an artefact in edit or view mode\r\n    // if <initial> is true then it will set the map to the first\r\n    // result of the query rather than presenting query results\r\n    const handleGeocodeQuery = ({ query, initial }) => {\r\n        if (query) {\r\n            console.log('Query run with argument: ', query)\r\n            return geocodeQuery(query).then(response => {\r\n                var newState = {}\r\n                if (response.noErrors) {\r\n                    newState.error = 'No results'\r\n                } else if (response.error) {\r\n                    newState.error =\r\n                        'Unknown error occurred, check console for details'\r\n                    console.log(response.error)\r\n                }\r\n\r\n                if (initial) {\r\n                    newState.mapState = response.results[0].mapState\r\n                    setAddressIsSearchResult(true)\r\n                } else {\r\n                    newState.queryResults = response.results\r\n                }\r\n                setLocationState({\r\n                    ...locationState,\r\n                    ...newState\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    // state object for the input fields, GQL mutation variables taken from this\r\n    const [state, setState] = useState({})\r\n    // if in edit or view mode load in the data for the artefact into the state\r\n    // only if the artefact has loaded and this hasn't already run\r\n    if (\r\n        (edit || view) &&\r\n        !artefactLoading &&\r\n        Object.keys(state).length === 0 &&\r\n        families\r\n    ) {\r\n        let belong = {}\r\n        families.map(val => (belong[val.id] = false))\r\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\r\n        console.log(artefact)\r\n\r\n        setState({\r\n            ...artefact,\r\n            belongsToFamiliesBools: belong\r\n        })\r\n        handleGeocodeQuery({ query: artefact.address, initial: true })\r\n    }\r\n\r\n    // if in create mode, initialise the booleans for the family checkboxes to false\r\n    if (create && families && !state.belongsToFamiliesBools) {\r\n        let belong = {}\r\n        families.map(val => (belong[val.id] = false))\r\n\r\n        setState({ belongsToFamiliesBools: belong, date: null })\r\n    }\r\n\r\n    // handler for setting the state object\r\n    const handleSetField = (fieldName, value) => {\r\n        if (edit && beingEdited !== fieldName) {\r\n            setBeingEdited(fieldName)\r\n            setPrevValue(state[fieldName])\r\n        }\r\n        setState({\r\n            ...state,\r\n            [fieldName]: value\r\n        })\r\n    }\r\n\r\n    // handler for setting the map state when a user selects a location result\r\n    const handleSetLocationResult = result => {\r\n        var newLocationState = {\r\n            mapState: result.mapState,\r\n            error: '',\r\n            queryResults: []\r\n        }\r\n        if (beingEdited === 'address' && !locationState.prevMapState) {\r\n            newLocationState.prevMapState = locationState.mapState\r\n        }\r\n        handleSetField('address', result.placeName)\r\n\r\n        setLocationState({\r\n            ...locationState,\r\n            ...newLocationState\r\n        })\r\n        setAddressIsSearchResult(true)\r\n    }\r\n\r\n    // reset the map to before the location was edited\r\n    const resetMapToPrevState = () => {\r\n        setLocationState({\r\n            ...locationState,\r\n            mapState: locationState.prevMapState,\r\n            queryResults: [],\r\n            prevMapState: {}\r\n        })\r\n    }\r\n\r\n    // reset the field being edited\r\n    const cancelEditing = () => {\r\n        handleSetField(beingEdited, prevValue)\r\n        setBeingEdited('')\r\n\r\n        if (beingEdited === 'address') {\r\n            resetMapToPrevState()\r\n        }\r\n    }\r\n\r\n    // handle an edited but not finalised search field on submit\r\n    const handleUnselectedSearchField = () => {\r\n        setLocationState({\r\n            ...locationState,\r\n            error: 'Select a search result or clear search field before saving'\r\n        })\r\n    }\r\n\r\n    // send user to view the specified artefact\r\n    const pushViewArtefactURL = id => {\r\n        const { history } = props\r\n        if (history) {\r\n            history.push(`/artefacts/${id}`)\r\n        }\r\n    }\r\n\r\n    // send user to edit the specified artefact\r\n    const pushEditArtefactURL = id => {\r\n        const { history } = props\r\n        if (history) {\r\n            history.push(`/artefacts/edit/${id}`)\r\n        }\r\n    }\r\n\r\n    // send user to home\r\n    const pushHomeURL = () => {\r\n        const { history } = props\r\n        if (history) {\r\n            history.push(`/`)\r\n        }\r\n    }\r\n\r\n    // handlers for GQL mutations\r\n    const handleCreationCompleted = data => {\r\n        console.log(\"here's the data\")\r\n        console.log(data)\r\n        var id = data.data.artefactCreate.artefact.id\r\n        pushViewArtefactURL(id)\r\n    }\r\n    const updateCompleted = async data => {\r\n        setBeingEdited('')\r\n        setSnackbarOpen(true)\r\n    }\r\n    const deleteCompleted = async data => {\r\n        pushHomeURL()\r\n    }\r\n    const handleCreationError = async errors => {\r\n        console.error('Creation errors occurred:', errors)\r\n    }\r\n    const handleUpdateError = async errors => {\r\n        console.error('Update errors occured: ', errors)\r\n    }\r\n    const handleDeleteError = async errors => {\r\n        console.error('Deletion errors occured: ', errors)\r\n    }\r\n\r\n    const createArtefact = async (\r\n        variables,\r\n        successCallback,\r\n        errorCallback\r\n    ) => {\r\n        console.log(\"here's input from call\")\r\n        console.log(variables)\r\n        // const input = \"hello\"\r\n        let form_data = new FormData()\r\n        // Image not passed through by variables\r\n        if (state.files && state.files.length) {\r\n            form_data.append('itemImage', state.files[0])\r\n        }\r\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\r\n        form_data.append('variables', JSON.stringify(variables))\r\n        let url = config.uri\r\n        axios\r\n            .post(url, form_data, {\r\n                headers: {\r\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    'Content-Transfer-Encoding': 'multipart/form-data'\r\n                }\r\n            })\r\n            .then(res => {\r\n                successCallback(res.data)\r\n            })\r\n            .catch(err => {\r\n                // console.error(err);\r\n                errorCallback(err)\r\n            })\r\n    }\r\n\r\n    const [updateArtefact, { error: updateErrors }] = useMutation(\r\n        UPDATE_ARTEFACT_MUTATION,\r\n        {\r\n            onCompleted: updateCompleted,\r\n            onError: handleUpdateError\r\n        }\r\n    )\r\n\r\n    const [deleteArtefact, { error: deleteErrors }] = useMutation(\r\n        DELETE_ARTEFACT_MUTATION,\r\n        {\r\n            onCompleted: deleteCompleted,\r\n            onError: handleDeleteError\r\n        }\r\n    )\r\n\r\n    const parseDate = date => {\r\n        return date ? date.toISOString().slice(0, -1) : null\r\n    }\r\n\r\n    // for creation of a new artefact\r\n    const submitForm = async event => {\r\n        if (!addressIsSearchResult) {\r\n            handleUnselectedSearchField()\r\n            return\r\n        }\r\n\r\n        var famIDs = []\r\n        if (state.belongsToFamiliesBools) {\r\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\r\n                id => state.belongsToFamiliesBools[id]\r\n            )\r\n        }\r\n\r\n        // File/uploaded included directly from state, multipart request\r\n        var input = {\r\n            name: state.name,\r\n            description: state.description,\r\n            state: state.state,\r\n            isPublic: state.isPublic ? state.isPublic : false,\r\n            belongsToFamilies: famIDs,\r\n            address: state.address ? state.address : ''\r\n        }\r\n        if (state.date) {\r\n            input.date = parseDate(state.date)\r\n        }\r\n        createArtefact(input, handleCreationCompleted, handleCreationError)\r\n    }\r\n\r\n    // for updating an existing artefact\r\n    const saveChange = async event => {\r\n        if (edit) {\r\n            var input = {}\r\n            if (!addressIsSearchResult) {\r\n                handleUnselectedSearchField()\r\n                return\r\n            } else if (beingEdited === 'belongsToFamiliesBools') {\r\n                input['belongsToFamilies'] = Object.keys(\r\n                    state.belongsToFamiliesBools\r\n                ).filter(id => state.belongsToFamiliesBools[id])\r\n            } else if (beingEdited === 'date') {\r\n                input[beingEdited] = parseDate(state[beingEdited])\r\n            } else {\r\n                input[beingEdited] = state[beingEdited]\r\n            }\r\n\r\n            console.log('Input to GQL update mutation: input', input)\r\n            updateArtefact({\r\n                variables: {\r\n                    id: artefact.id,\r\n                    artefactInput: input\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const noErrors = !creationErrors\r\n    const dataLoading = familiesLoading || statesLoading\r\n\r\n    // select the submit handler\r\n    const submitHandler = e => {\r\n        e.preventDefault()\r\n        create ? submitForm(e) : saveChange(e)\r\n    }\r\n\r\n    if ((edit || view) && dataLoading) {\r\n        return <Loading />\r\n    }\r\n\r\n    const editButtonProps = {\r\n        save: saveChange,\r\n        cancel: cancelEditing,\r\n        updateErrors: updateErrors,\r\n        classes: classes\r\n    }\r\n\r\n    const componentProps = {\r\n        beingEdited: beingEdited,\r\n        mode: mode,\r\n        artefactStates: artefactStates,\r\n        username: context.user.username,\r\n        families: families,\r\n        states: {\r\n            state: state,\r\n            locationState: locationState\r\n        },\r\n        setters: {\r\n            handleSetField: handleSetField\r\n        },\r\n    }\r\n    const numFams = state.families ? state.families.length : 0\r\n\r\n    const addressProps = {\r\n        ...componentProps,\r\n        handleGeocodeQuery: handleGeocodeQuery,\r\n        setters: {\r\n            ...componentProps.setters,\r\n            setLocationState: setLocationState,\r\n            setAddressIsSearchResult: setAddressIsSearchResult,\r\n            handleSetLocationResult: handleSetLocationResult\r\n        }\r\n    }\r\n\r\n    const LeftPaneComponents = [\r\n        { comp: Name, name: 'name' },\r\n        { comp: State, name: 'state' },\r\n        { comp: Description, name: 'description' },\r\n        { comp: Admin, name: 'admin' },\r\n        { comp: Date, name: 'date' }\r\n    ]\r\n\r\n    const RightPaneComponents = [\r\n        { comp: view ? null : Privacy, name: 'isPublic' },\r\n        { comp: Families, name: 'belongsToFamiliesBools' },\r\n        { comp: Images, name: 'files' }\r\n    ]\r\n\r\n    const components = [\r\n        { comp: Name, name: 'name' },\r\n        { comp: State, name: 'state' },\r\n        { comp: Admin, name: 'admin' },\r\n        { comp: Date, name: 'date' },\r\n        { comp: Families, name: 'belongsToFamiliesBools' },\r\n        { comp: Description, name: 'description' },\r\n        { comp: view ? null : Privacy, name: 'isPublic' },\r\n        { comp: Images, name: 'files', widthProps: {xs: 7} }\r\n    ]\r\n\r\n    const Panes = [LeftPaneComponents, RightPaneComponents]\r\n\r\n    return (\r\n        <form onSubmit={submitHandler} className={classes.form}>\r\n            <Grid container className={classes.outerContainer} spacing={1}>\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    container\r\n                    justify='center'\r\n                    alignItems='center'\r\n                    spacing={1}\r\n                >\r\n                    <Head\r\n                        mode={mode}\r\n                        classes={classes}\r\n                        isAdmin={isAdmin}\r\n                        goToEdit={() => pushEditArtefactURL(artefact.id)}\r\n                        openDelete={() => setDeleteOpen(true)}\r\n                        noErrors={noErrors}\r\n                    />\r\n                </Grid>\r\n\r\n                {components.map(({ comp, name, widthProps }) => {\r\n                    if (comp === null) return null\r\n                    if (!widthProps) widthProps = {xs:12, md:6}\r\n                    return (\r\n                        <Grid container item {...widthProps} key={name}>\r\n                            <FieldWrapper\r\n                                key={comp}\r\n                                child={comp}\r\n                                name={name}\r\n                                childProps={componentProps}\r\n                                editButtonProps={editButtonProps}\r\n                                classes={classes}\r\n                                numFams={numFams}\r\n                            />\r\n                        </Grid>\r\n                    )\r\n                })}\r\n\r\n                <Grid item xs={12}>\r\n                    <FieldWrapper\r\n                        child={Address}\r\n                        name='address'\r\n                        childProps={addressProps}\r\n                        editButtonProps={editButtonProps}\r\n                        classes={classes}\r\n                    />\r\n                </Grid>\r\n\r\n                <SuccessSnackbar\r\n                    open={snackbarOpen}\r\n                    setOpen={setSnackbarOpen}\r\n                    viewArtefact={pushViewArtefactURL}\r\n                    classes={classes}\r\n                    id={artefact ? artefact.id : '-1'}\r\n                />\r\n\r\n                <DeleteDialog\r\n                    open={deleteOpen}\r\n                    setOpen={setDeleteOpen}\r\n                    deleteArtefact={deleteArtefact}\r\n                    artefact={artefact}\r\n                />\r\n            </Grid>\r\n        </form>\r\n    )\r\n}\r\n\r\nfunction Wrapped(props) {\r\n    return (\r\n        <Layout>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction='column'\r\n                    alignItems='center'\r\n                    justify='center'\r\n                    style={{ minHeight: '80vh' }}\r\n                >\r\n                    <Grid item xs={11} md={8}>\r\n                        <CssBaseline />\r\n                        <ArtefactView {...props} />\r\n                    </Grid>\r\n                </Grid>\r\n            </MuiPickersUtilsProvider>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default withRouter(Wrapped)\r\n","import React from 'react'\r\nimport ArtefactView from './ArtefactView'\r\nimport {\r\n    GetArtefactWrapper,\r\n    GetFamiliesWrapper,\r\n    GetStatesWrapper\r\n} from '../../components'\r\n\r\nexport default function CreateArtefactView(props) {\r\n    const childProps = {\r\n        child: GetArtefactWrapper,\r\n        childProps: {\r\n            child: ArtefactView\r\n        },\r\n        create: true\r\n    }\r\n    return (\r\n        <GetStatesWrapper\r\n            {...props}\r\n            {...childProps}\r\n            child={GetFamiliesWrapper}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ArtefactView from './ArtefactView'\r\nimport {\r\n    GetArtefactWrapper,\r\n    GetFamiliesWrapper,\r\n    GetStatesWrapper\r\n} from '../../components'\r\n\r\nexport default function EditArtefactView(props) {\r\n    const thisChildProps = {\r\n        child: GetArtefactWrapper,\r\n        childProps: {\r\n            child: ArtefactView\r\n        },\r\n        view: true\r\n    }\r\n    return (\r\n        <GetStatesWrapper\r\n            {...props}\r\n            child={GetFamiliesWrapper}\r\n            childProps={thisChildProps}\r\n        />\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { CssBaseline, Grid } from '@material-ui/core'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport ArtefactCard from '../../components/ArtefactCard'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        // marginLeft: theme.spacing(1),\r\n        // marginRight: theme.spacing(1),\r\n        padding: theme.spacing(1),\r\n        backgroundColor: theme.palette.background.paper,\r\n        textAlign: 'center',\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    container: {\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1)\r\n    }\r\n}))\r\n\r\nconst LIST_OF_ARTEFACTS = gql`\r\n    query artefactsQuery($first: Int!) {\r\n        me {\r\n            artefactAdministratorOf(first: $first) {\r\n                edges {\r\n                    node {\r\n                        id\r\n                        name\r\n                        description\r\n                        upload\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nfunction ManageArtefactsView(props) {\r\n\r\n    const classes = useStyles()\r\n    const numArtefactsFetched = 10\r\n    const [artefactEdges, SetArtefactEdges] = useState([])\r\n\r\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\r\n        variables: {\r\n            first: numArtefactsFetched\r\n        },\r\n        onCompleted: data =>\r\n            SetArtefactEdges(data.me.artefactAdministratorOf.edges)\r\n    })\r\n\r\n    console.log('The data is: ', data)\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n    return (\r\n        <Layout>\r\n            <CssBaseline />\r\n            <Grid container spacing={2} className={classes.container}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify='center' spacing={2}>\r\n                        {artefactEdges.map(edge => (\r\n                            <Grid item key={edge.node.id}>\r\n                                <ArtefactCard\r\n                                    artefact={edge.node}\r\n                                />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ManageArtefactsView\r\n","import React from 'react'\r\nimport ArtefactView from './ArtefactView'\r\nimport {\r\n    GetArtefactWrapper,\r\n    GetFamiliesWrapper,\r\n    GetStatesWrapper\r\n} from '../../components'\r\n\r\nexport default function EditArtefactView(props) {\r\n    const thisChildProps = {\r\n        child: GetArtefactWrapper,\r\n        childProps: {\r\n            child: ArtefactView\r\n        },\r\n        edit: true\r\n    }\r\n\r\n    return (\r\n            <GetStatesWrapper\r\n                {...props}\r\n                child={GetFamiliesWrapper}\r\n                childProps={thisChildProps}\r\n            />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Error404View(props) {\r\n    return (\r\n        <div style={{padding:'50px'}}>\r\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\r\n            <h3>If you're seeing this page...</h3>\r\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt=''/>\r\n            <p><a href=\"/\">Return home</a></p>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useState } from 'react'\r\nimport Layout from '../components/Layout'\r\nimport authContext from '../authContext'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport GridList from '@material-ui/core/GridList'\r\nimport GridListTile from '@material-ui/core/GridListTile'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport {\r\n    Typography,\r\n    CssBaseline,\r\n    Button,\r\n    TextField,\r\n    Grid,\r\n    FormControl\r\n} from '@material-ui/core'\r\nimport Select from '@material-ui/core/Select'\r\nimport gql from 'graphql-tag'\r\nimport { useMutation, useQuery } from '@apollo/react-hooks'\r\nimport ArtefactCard from '../components/ArtefactCard'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    icon: {\r\n        color: 'rgba(255, 255, 255, 0.54)'\r\n    }\r\n}))\r\n\r\nconst HOMEPAGE_INFO = gql`\r\n    query {\r\n        me {\r\n            isMemberOf {\r\n                id\r\n                familyName\r\n                joinCode\r\n                hasArtefacts {\r\n                    edges {\r\n                        node {\r\n                            id\r\n                            name\r\n                            admin {\r\n                                username\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            profile {\r\n                id\r\n                selectedFamily {\r\n                    id\r\n                    familyName\r\n                    joinCode\r\n                    hasArtefacts {\r\n                        edges {\r\n                            node {\r\n                                id\r\n                                name\r\n                                description\r\n                                upload\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst JOIN_FAMILY_MUTATION = gql`\r\n    mutation JoinFamily($joinCode: String!) {\r\n        familyJoin(joinCode: $joinCode) {\r\n            family {\r\n                familyName\r\n                familyAdmin {\r\n                    username\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst SELECT_FAMILY_MUTATION = gql`\r\n    mutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\r\n        updateProfile(input: { id: $profileId, selectedFamily: $toFamily }) {\r\n            id\r\n            selectedFamily\r\n        }\r\n    }\r\n`\r\n\r\nfunction UserHomeView(props) {\r\n    const classes = useStyles()\r\n\r\n    const context = useContext(authContext)\r\n    const username = context.user.username\r\n    const [formJoinCode, setFormJoinCode] = useState('')\r\n\r\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(\r\n        JOIN_FAMILY_MUTATION,\r\n        {\r\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\r\n        }\r\n    )\r\n\r\n    const handleJoinFamily = () => {\r\n        if (formJoinCode.length === 0) {\r\n            console.error('Enter a valid joinCode')\r\n            return\r\n        }\r\n\r\n        joinFamilyMutation({ variables: { joinCode: formJoinCode } })\r\n    }\r\n\r\n    const _homepageInfoCompleted = data => {\r\n        const selectedFamily = data.me.profile.selectedFamily\r\n        if (!selectedFamily) {\r\n            console.error('User has not selected a family')\r\n            return\r\n        }\r\n    }\r\n\r\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(\r\n        HOMEPAGE_INFO,\r\n        {\r\n            onCompleted: data => {\r\n                _homepageInfoCompleted(data)\r\n            }\r\n        }\r\n    )\r\n\r\n    const [selectFamily, { data: mutation_data }] = useMutation(\r\n        SELECT_FAMILY_MUTATION,\r\n        {\r\n            refetchQueries: data => [{ query: HOMEPAGE_INFO }]\r\n        }\r\n    )\r\n\r\n    const inputLabel = React.useRef(null)\r\n\r\n    const handleChange = event => {\r\n        event.preventDefault()\r\n        const newFamily = event.target.value\r\n        selectFamily({\r\n            variables: { profileId: profileId, toFamily: newFamily }\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    const selectedFamily = home_data.me.profile.selectedFamily\r\n    const families = home_data.me.isMemberOf\r\n    const profileId = home_data.me.profile.id\r\n    let artefacts = []\r\n\r\n    // If the user has selected a family there will be a list of artefacts\r\n    // Though the list may be empty\r\n    if (selectedFamily) {\r\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <CssBaseline />\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={9}>\r\n                    {selectedFamily && (\r\n                        <div>\r\n                            <Typography variant='h1'>\r\n                                {selectedFamily.familyName}\r\n                            </Typography>\r\n                            <Typography variant='h5'>\r\n                                Join code: {selectedFamily.joinCode}\r\n                            </Typography>\r\n                        </div>\r\n                    )}\r\n                    {!selectedFamily && (\r\n                        <Typography variant='h2'>\r\n                            Join and/or Select a Family\r\n                        </Typography>\r\n                    )}\r\n                    <h4>Your username is (temp, for testing): {username}</h4>\r\n                    <GridList cellHeight={'auto'} cols={2}>\r\n                        {artefacts.map((artefact, key) => (\r\n                            <GridListTile key={key}>\r\n                                <ArtefactCard\r\n                                    key={key}\r\n                                    artefact={artefact.node}\r\n                                />\r\n                            </GridListTile> \r\n                        ))}\r\n                    </GridList>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\r\n                        Select Family\r\n                    </InputLabel>\r\n                    <Select\r\n                        variant='outlined'\r\n                        fullWidth\r\n                        disabled={families.length <= 1}\r\n                        value={selectedFamily ? selectedFamily.id : null}\r\n                        onChange={handleChange}\r\n                        inputProps={{\r\n                            name: 'age',\r\n                            id: 'outlined-age-simple'\r\n                        }}\r\n                    >\r\n                        {families &&\r\n                            families.map((item, key) => (\r\n                                <MenuItem key={item.id} value={item.id}>\r\n                                    {item.familyName}\r\n                                </MenuItem>\r\n                            ))}\r\n                    </Select>\r\n                    <FormControl fullWidth>\r\n                        <TextField\r\n                            id='joinCodeField'\r\n                            label='Join a family'\r\n                            value={formJoinCode}\r\n                            className={classes.textField}\r\n                            margin='normal'\r\n                            onChange={e => setFormJoinCode(e.target.value)}\r\n                            fullWidth\r\n                        />\r\n                        <Button variant='outlined' onClick={handleJoinFamily}>\r\n                            Join Family\r\n                        </Button>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default UserHomeView\r\n","import React, { useState, Fragment } from 'react'\r\nimport { useTheme } from '@material-ui/styles'\r\nimport {\r\n    MenuItem,\r\n    TextField,\r\n    Grid,\r\n    Paper,\r\n    IconButton,\r\n    Snackbar,\r\n    SnackbarContent,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle\r\n} from '@material-ui/core'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\nimport ErrorIcon from '@material-ui/icons/Error'\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\r\nimport { green } from '@material-ui/core/colors'\r\n\r\nimport { Map } from '../components'\r\nimport { artefactGeocodeQuery } from '../components/MapAPI'\r\n\r\nimport { GetFamiliesWrapper, Layout } from '../components'\r\n\r\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    overlay: {\r\n        position: 'absolute',\r\n        top: '70px',\r\n        right: '5px',\r\n        // backgroundColor: theme.palette.background.paper,\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        margin: theme.spacing(1),\r\n        borderRadius: 10\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark\r\n    },\r\n    success: {\r\n        backgroundColor: green[600]\r\n    },\r\n    icon: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n        fontSize: 20\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    }\r\n}))\r\n\r\nconst MyDialogContent = () => (\r\n    <Fragment>\r\n        <DialogTitle id='help-title'>Help</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>\r\n                Select from your families in the corner to view their artefacts\r\n            </DialogContentText>\r\n            <DialogContentText>\r\n                Only artefacts with a location will be shown\r\n            </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>Scroll to zoom</DialogContentText>\r\n            <DialogContentText>Click and drag to move</DialogContentText>\r\n            <DialogContentText>\r\n                Click on an artefact to open a popup\r\n            </DialogContentText>\r\n        </DialogContent>\r\n    </Fragment>\r\n)\r\n\r\nconst MapStyles = [\r\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\r\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\r\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\r\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\r\n    {\r\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\r\n        name: 'Ugly'\r\n    }\r\n]\r\n\r\nfunction MapView(props) {\r\n    const theme = useTheme()\r\n    const classes = useStyles()\r\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\r\n    if (theme.palette.type === 'dark') {\r\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\r\n    }\r\n\r\n    var { families, familiesLoading } = props\r\n\r\n    // initally query is run with invalid ID\r\n    const [state, setState] = useState({\r\n        family: { id: '-1' },\r\n        defaultMapStyle: defaultMapStyle,\r\n        mapStyle: defaultMapStyle,\r\n        selectedArtefact: {}\r\n    })\r\n\r\n    if (state.defaultMapStyle !== defaultMapStyle) {\r\n        // avoid unnecessary rerender of map\r\n        if (state.mapStyle !== defaultMapStyle) {\r\n            setState({\r\n                ...state,\r\n                defaultMapStyle: defaultMapStyle,\r\n                mapStyle: defaultMapStyle\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                defaultMapStyle: defaultMapStyle\r\n            })\r\n        }\r\n    }\r\n\r\n    const [mapArtefacts, setMapArtefacts] = useState([])\r\n    const [mapState, setMapState] = useState({\r\n        zoom: [2]\r\n    })\r\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\r\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\r\n    const [helpOpen, setHelpOpen] = useState(false)\r\n    const getArtefactMapData = data => {\r\n        if (!data) return\r\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\r\n\r\n        var promiseArr = []\r\n        for (var i = 0; i < artefacts.length; i++) {\r\n            if (artefacts[i].address) {\r\n                promiseArr.push(\r\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\r\n                        var { response, artefact } = result\r\n                        if (response.error) {\r\n                            console.log(response.error)\r\n                            setErrorSnackbar({\r\n                                open: true,\r\n                                msg: 'Error loading artefacts'\r\n                            })\r\n                        } else {\r\n                            var mapArtefact = {\r\n                                ...artefact,\r\n                                popup: true,\r\n                                center: response.results[0].mapState.center,\r\n                                initPopupOpen: false\r\n                            }\r\n                            return mapArtefact\r\n                        }\r\n                    })\r\n                )\r\n            }\r\n        }\r\n        Promise.all(promiseArr).then(result => {\r\n            setMapArtefacts(result)\r\n            setSnackbarOpen(true)\r\n        })\r\n    }\r\n\r\n    useQuery(GET_FAMILY_ARTEFACTS, {\r\n        variables: { id: state.family.id },\r\n        onCompleted: getArtefactMapData,\r\n        onError: error => {\r\n            if (state.family.id > 0) {\r\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\r\n                console.log(error)\r\n            }\r\n        }\r\n    })\r\n\r\n    var artefacts = []\r\n\r\n    const handleChange = event => {\r\n        if (event.target.value === state.family) return\r\n\r\n        if (event.target.name === 'family') {\r\n            setMapArtefacts([])\r\n        }\r\n\r\n        if (event.target.name === 'selectedArtefact'){\r\n            setMapState({\r\n                ...mapState,\r\n                center: event.target.value.center\r\n            })\r\n            event.target.value.initPopupOpen = true\r\n        }\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={10}>\r\n            <Grid container>\r\n                <Map\r\n                    interactive\r\n                    mapStyle={state.mapStyle}\r\n                    mapState={mapState}\r\n                    containerStyle={{\r\n                        height: '87vh',\r\n                        width: '100vw',\r\n                        position: 'relative',\r\n                        zIndex: 0,\r\n                        borderRadius: 10\r\n                    }}\r\n                    artefacts={mapArtefacts}\r\n                />\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                item\r\n                xs={4}\r\n                sm={1}\r\n                className={classes.overlay}\r\n                justify='flex-end'\r\n            >\r\n                {!familiesLoading && (\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Family'\r\n                                variant='outlined'\r\n                                value={state.family || {}}\r\n                                select\r\n                                onChange={handleChange}\r\n                                SelectProps={{\r\n                                    name: 'family',\r\n                                    autoWidth: true\r\n                                }}\r\n                            >\r\n                                {families.map(fam => (\r\n                                    <MenuItem value={fam} key={fam.id}>\r\n                                        {fam.familyName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Paper>\r\n                    </Grid>\r\n                )}\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <TextField\r\n                            fullWidth\r\n                            label='Map Style'\r\n                            variant='outlined'\r\n                            value={state.mapStyle}\r\n                            select\r\n                            onChange={handleChange}\r\n                            SelectProps={{\r\n                                name: 'mapStyle',\r\n                                autoWidth: true\r\n                            }}\r\n                        >\r\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\r\n                            {MapStyles.map(style => (\r\n                                <MenuItem value={style.value}>\r\n                                    {style.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                {/* {mapArtefacts && (\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <TextField\r\n                                fullWidth\r\n                                label='Go to artefact'\r\n                                variant='outlined'\r\n                                value={state.selectedArtefact}\r\n                                select\r\n                                onChange={handleChange}\r\n                                SelectProps={{\r\n                                    name: 'selectedArtefact',\r\n                                    autoWidth: true\r\n                                }}\r\n                            >\r\n                                <MenuItem value={{}}>None</MenuItem>\r\n                                {mapArtefacts.map(artefact => (\r\n                                    <MenuItem value={artefact}>\r\n                                        {artefact.name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Paper>\r\n                    </Grid>\r\n                )} */}\r\n\r\n                <IconButton\r\n                    edge='start'\r\n                    color='inherit'\r\n                    aria-label='menu'\r\n                    onClick={() => setHelpOpen(true)}\r\n                >\r\n                    <HelpIcon />\r\n                </IconButton>\r\n            </Grid>\r\n\r\n            <Dialog\r\n                fullWidth\r\n                maxWidth='sm'\r\n                open={helpOpen}\r\n                onClose={() => setHelpOpen(false)}\r\n                aria-labelledby='help-title'\r\n            >\r\n                <MyDialogContent />\r\n                <DialogActions>\r\n                    <Button onClick={() => setHelpOpen(false)} color='primary'>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n                open={snackbarOpen}\r\n                autoHideDuration={2000}\r\n                onClose={e => setSnackbarOpen(false)}\r\n            >\r\n                <SnackbarContent\r\n                    className={classes.success}\r\n                    aria-describedby='success-message-id'\r\n                    message={\r\n                        <span\r\n                            id='success-message-id'\r\n                            className={classes.message}\r\n                        >\r\n                            <CheckCircleIcon className={classes.icon} />\r\n                            {mapArtefacts.length} Artefacts Loaded\r\n                        </span>\r\n                    }\r\n                />\r\n            </Snackbar>\r\n\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left'\r\n                }}\r\n                open={errorSnackbar.open}\r\n                autoHideDuration={2000}\r\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\r\n            >\r\n                <SnackbarContent\r\n                    className={classes.error}\r\n                    aria-describedby='err-message-id'\r\n                    message={\r\n                        <span id='err-message-id' className={classes.message}>\r\n                            <ErrorIcon className={classes.icon} />\r\n                            {errorSnackbar.msg}\r\n                        </span>\r\n                    }\r\n                />\r\n            </Snackbar>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default props => (\r\n    <Layout>\r\n        <GetFamiliesWrapper {...props} child={MapView} />\r\n    </Layout>\r\n)\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { PrivateRoute } from './components/PrivateRoute'\r\nimport { CssBaseline } from '@material-ui/core'\r\n\r\n// Views\r\nimport Login from './views/LoginView'\r\nimport Signup from './views/SignupView'\r\nimport Logout from './components/Logout'\r\n\r\n// Family views\r\nimport CreateFamilyView from './views/CreateFamilyView'\r\n// Artefact Views\r\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\r\nimport DetailView from './views/artefactViews/DetailView'\r\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\r\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\r\nimport Error404View from './views/Error404View'\r\n\r\nimport UserHomeView from './views/UserHomeView'\r\n\r\nimport MapView from './views/MapView'\r\n\r\nfunction App(props) {\r\n    return (\r\n        <Router>\r\n            <CssBaseline />\r\n            <div>\r\n                <Switch>\r\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \r\n                        has the same url as the userHomeView */}\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/'\r\n                        loggedIn={UserHomeView}\r\n                        landingPage\r\n                    />\r\n                    {/* User auth routes */}\r\n                    <Route exact path='/login/' component={Login} />\r\n                    <Route exact path='/signup/' component={Signup} />\r\n                    <Route exact path='/logout/' component={Logout} />\r\n\r\n                    {/* Artefact routes */}\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/artefacts/create/'\r\n                        loggedIn={CreateArtefactView}\r\n                        landingPage\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/artefacts/manage/'\r\n                        loggedIn={ManageArtefactsView}\r\n                        landingPage\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/artefacts/:id/'\r\n                        loggedIn={DetailView}\r\n                        landingPage\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/artefacts/edit/:id/'\r\n                        loggedIn={EditArtefactView}\r\n                        landingPage\r\n                    />\r\n\r\n                    {/* Family routes */}\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/family/create/'\r\n                        loggedIn={CreateFamilyView}\r\n                        landingPage\r\n                    />\r\n\r\n                    {/* Map */}\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/map/'\r\n                        loggedIn={MapView}\r\n                        landingPage\r\n                    />\r\n\r\n                    <Route component={Error404View} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { setContext } from 'apollo-link-context'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport Auth from './components/Auth'\r\n\r\nimport App from './App'\r\nimport { AUTH_TOKEN, config } from './constants'\r\n\r\n// Depending on prod or dev, set the appropriate uri for the graphql queries\r\nconst httpLink = createHttpLink({\r\n    uri: config.uri\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    // get the authentication token from local storage if it exists\r\n    const token = localStorage.getItem(AUTH_TOKEN)\r\n    // return the headers to the context so httpLink can read them\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `JWT ${token}` : ''\r\n        }\r\n    }\r\n})\r\n\r\n// Set up Apollo client using Jwt auth\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache()\r\n})\r\n\r\n// Wrap application with Apollo and Auth providers to give access across the application\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n        <Auth>\r\n            <App />\r\n        </Auth>\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}