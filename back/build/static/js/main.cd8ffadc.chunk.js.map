{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","components/Loading.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/ArtefactFamilyFormStyling.js","components/HelpDialog.js","views/LandingPage.js","components/PrivateRoute.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/artefactViews/components/CreateButton.js","views/artefactViews/components/Head.js","views/artefactViews/components/Name.js","views/artefactViews/components/State.js","views/artefactViews/components/Description.js","views/artefactViews/components/Admin.js","views/artefactViews/components/Date.js","views/artefactViews/components/Privacy.js","views/artefactViews/components/Families.js","views/artefactViews/components/Images.js","views/artefactViews/components/Address.js","views/artefactViews/components/EditButtons.js","views/artefactViews/components/FieldWrapper.js","views/artefactViews/components/SuccessSnackbar.js","views/artefactViews/components/DeleteDialog.js","views/artefactViews/components/HelpContent.js","views/artefactViews/ArtefactView.js","views/artefactViews/CreateArtefactView.js","views/artefactViews/DetailView.js","views/artefactViews/ManageArtefactsView.js","views/artefactViews/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","mediaRoot","VERIFY_TOKEN_MUTATION","gql","useStyles","makeStyles","theme","drawer","width","marginTop","spacing","ComingSoon","style","position","marginLeft","padding","fontSize","color","backgroundColor","borderRadius","zIndex","drawerOpen","setDrawerOpen","setHelpOpen","classes","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Drawer","anchor","onClose","e","className","role","onClick","onKeyDown","List","name","path","icon","Home","Group","Apps","Create","Map","map","Icon","ListItem","button","key","component","RouterLink","to","ListItemIcon","ListItemText","primary","IconButton","edge","aria-label","Help","aria-controls","aria-haspopup","event","currentTarget","AccountCircle","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","disabled","LoginLink","forwardRef","props","ref","innerRef","SignupLink","Button","underline","root","flexGrow","iconButton","marginRight","title","alignText","MenuAppBar","loggedIn","useTheme","dark","palette","type","setOpen","AppBar","elevation","Toolbar","Menu","Typography","variant","noWrap","onToggleDarkTheme","Brightness7","Brightness4","LoggedInBar","username","NotLoggedInBar","typography","fontFamily","h1","fontWeight","h2","h3","h4","h5","h6","lightPalette","indigo","secondary","main","teal","darkPalette","deepPurple","error","background","paper","default","lightTheme","createMuiTheme","responsiveFontSizes","darkTheme","localStorage","getItem","setItem","setTheme","helpOpen","children","Children","child","cloneElement","ThemeProvider","CssBaseline","newTheme","Grid","container","alignItems","justify","height","CircularProgress","Trianglify","require","textField","textAlign","margin","card","media","ArtefactCard","artefact","upload","description","admin","patternURI","setPatternURI","mediaURI","x_colors","light","y_colors","png","Card","CardMedia","image","CardContent","item","xs","gutterBottom","align","CardActions","size","fullWidth","popup","minWidth","mapProps","accessToken","attributionControl","maxZoom","minZoom","Mapbox","ReactMapboxGl","interactive","InteractiveMapbox","artefacts","openArtefactID","setOpenArtefactID","handleSetOpenArtefact","mapStyle","containerStyle","mapState","center","initPopupOpen","length","coordinates","src","alt","offset","bottom","geocodingService","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","console","log","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION_STR","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","DELETE_ARTEFACT_MUTATION","GetFamiliesWrapper","Child","childProps","rest","families","setFamilies","thisChildProps","familiesLoading","useQuery","onCompleted","data","me","isMemberOf","onError","loading","GetStatesWrapper","artefactStates","setArtefactStates","_saveArtefactStates","statesData","a","temp","__type","enumValues","state","desc","statesLoading","variables","GetArtefactWrapper","params","fetchError","artefactData","artefactLoading","justifyContent","formControl","fieldTitle","paperWrapper","editLinkButton","deleteButton","form","marginBottom","display","flexWrap","dropzone","dropzoneText","outerContainer","alignContent","switch","MyDialogContent","content","Dialog","maxWidth","aria-labelledby","DialogActions","HomePageButton","linkTo","LandingPage","landingTheme","typing","setTyping","useEffect","href","rel","top","right","cursor","show","onTypingDone","Delay","ms","Backspace","count","delay","left","particles","number","value","density","enable","value_area","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","WaitWraper","checkAuthenticated","this","setState","localToken","Component","contextType","UnwrappedPrivateRoute","LoggedIn","loggedOut","landingPage","Loading","render","PrivateRoute","Layout","submit","Login","history","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","login","submitForm","preventDefault","fields","label","helperText","onChange","Paper","onSubmit","field","index","TextField","target","required","autoComplete","toLowerCase","autoFocus","FormHelperText","Link","CenterWrapping","minHeight","sm","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","invalidEmail","disableSubmit","emailErrMsg","Logout","HelpContent","DialogTitle","DialogContent","DialogContentText","FamilyCreatedDialog","familyName","joinCode","setCopied","text","onCopy","CreateFamilyView","artefactFamilyFormUseStyles","setFamilyName","about","setAbout","setJoinCode","copied","_completed","familyCreate","family","createFamily","multiline","rows","defaultValue","FormControl","HelpDialog","Snackbar","autoHideDuration","noErrors","withGetScreen","states","setters","isAdmin","openDelete","isMobile","create","edit","view","showEditButton","showDeleteButton","showButton","marginLeftButton","visibility","setMode","CreateButton","handleSetField","inputProps","readOnly","select","Object","keys","numFams","clearable","minDate","inputVariant","format","openTo","date","KeyboardButtonProps","FormControlLabel","control","Switch","checked","isPublic","belongsToFamiliesBools","values","filter","disablePadding","dense","Checkbox","tabIndex","initialFiles","files","acceptedFiles","filesLimit","dropzoneClass","dropzoneTextStyle","dropzoneParagraph","imageStyle","handleGeocodeQuery","setAddressIsSearchResult","setLocationState","handleSetLocationResult","locationState","InputProps","endAdornment","initial","keyCode","document","getElementById","click","Popover","queryResults","undefined","nested","save","cancel","updateErrors","MyButton","editButtonProps","beingEdited","thisBeingEdited","someBeingEdited","EditButtons","viewArtefact","ClickAwayListener","onClickAway","ContentProps","action","close","deleteArtefact","FetchArtefactError","ArtefactView","setBeingEdited","prevValue","setPrevValue","snackbarOpen","setSnackbarOpen","deleteOpen","setDeleteOpen","creating","setCreating","prevMapState","addressIsSearchResult","newState","belong","val","belongsToFamilies","fieldName","handleUnselectedSearchField","pushViewArtefactURL","pushManageArtefactsURL","handleCreationCompleted","artefactCreate","updateCompleted","deleteCompleted","handleCreationError","handleUpdateError","handleDeleteError","createArtefact","successCallback","errorCallback","form_data","FormData","append","JSON","stringify","url","axios","post","headers","Authorization","res","catch","err","updateArtefact","parseDate","toISOString","slice","famIDs","input","saveChange","artefactInput","componentProps","addressProps","newLocationState","showPrivacy","regularView","componentsRegView","comp","Name","State","Admin","Date","Description","Privacy","Families","Images","renderingComponents","Head","FieldWrapper","widthProps","Address","SuccessSnackbar","DeleteDialog","withRouter","utils","DateFnsUtils","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","artefactAdministratorOf","edges","fetchPolicy","Container","node","Error404View","overflow","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","selectedFamily","profileId","formJoinCode","setFormJoinCode","joinError","setJoinError","joined","setJoined","refetchQueries","joinFamilyMutation","home_data","home_data_loading","selectFamily","profile","hasArtefacts","newFamily","toFamily","SelectProps","autoWidth","fam","includes","overlay","success","green","MapStyles","MapView","defaultMapStyle","selectedArtefact","mapArtefacts","setMapArtefacts","setMapState","msg","errorSnackbar","setErrorSnackbar","promiseArr","all","handleChange","newCenter","coord","SnackbarContent","aria-describedby","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","defaultOptions","watchQuery","errorPolicy","ReactDOM","setAuthenticated","setUser","VerifyToken","authToken","_callback","setSession","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd8ffadc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * @summary Creates a context for authentication\n * @author Kyle Zsembery\n */\n\n\nimport { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","/**\n * @summary contains constants throughout app. Some change whether\n * in build or dev\n * @author Kyle Zsembery, Zane Duffield\n */\n\nexport const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/',\n    mediaRoot: 'https://artefact-picture.s3.amazonaws.com/media/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/',\n    mediaRoot: 'http://localhost:8000/media/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","/**\n * @summary Auth provider created to give all parts of\n * the application access to the credentials required\n * @author Kyle Zsembery\n */\n\n\nimport React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\n// Component that allows for Authentication throughout the application\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        \n        // const token = localStorage.getItem(AUTH_TOKEN)\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            setAuthenticated(false)\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.error(error);\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Loading...\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        const username = data.data.verifyToken.payload.username\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        setAuthenticated(false);\n        setUser({});\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","/**\n * @summary Renders the RHS of the appbar for logged in users\n * @author Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:04:10\n */\n\nimport React, { useContext } from 'react'\nimport {\n    IconButton,\n    Menu,\n    MenuItem,\n    makeStyles,\n    Drawer,\n    List,\n    ListItem,\n    ListItemText,\n    ListItemIcon\n} from '@material-ui/core'\n\nimport {\n    Home,\n    Group,\n    Create,\n    Map,\n    Apps,\n    AccountCircle,\n    Help\n} from '@material-ui/icons'\n\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: 'auto',\n        marginTop: theme.spacing(5)\n    }\n}))\n\nconst ComingSoon = () => {\n    return (\n            <span style={{\n                position: \"absolute\",\n                marginTop: \"15px\",\n                marginLeft: \"2px\",\n                padding: \"1px\",\n                fontSize: \"10px\",\n                color: \"white\",\n                backgroundColor: \"#00BCD4\",\n                borderRadius: \"4px\",\n                zIndex: 2\n            }}>\n                Coming Soon\n            </span>\n    )\n}\n\nexport default ({ drawerOpen, setDrawerOpen, setHelpOpen }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Drawer\n                anchor='left'\n                open={drawerOpen}\n                onClose={e => setDrawerOpen(false)}\n            >\n                <div\n                    className={classes.drawer}\n                    role='presentation'\n                    onClick={e => setDrawerOpen(false)}\n                    onKeyDown={e => setDrawerOpen(false)}\n                >\n                    <List>\n                        {[\n                            { name: 'Home', path: '/', icon: Home },\n                            {\n                                name: 'Create Family',\n                                path: '/family/create/',\n                                icon: Group\n                            },\n                            {\n                                name: 'Manage Artefacts',\n                                path: '/artefacts/manage/',\n                                icon: Apps\n                            },\n                            {\n                                name: 'Create Artefact',\n                                path: '/artefacts/create/',\n                                icon: Create\n                            },\n                            { name: 'Artefact Map', path: '/map/', icon: Map }\n                        ].map(({ name, path, icon: Icon }) => (\n                            <ListItem\n                                button\n                                key={path}\n                                component={RouterLink}\n                                to={path}\n                                style={{ borderRadius: 10 }}\n                            >\n                                <ListItemIcon>\n                                    <Icon />\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={name}\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n\n            <IconButton\n                edge='start'\n                color='inherit'\n                aria-label='menu'\n                onClick={() => setHelpOpen(true)}\n            >\n                <Help />\n            </IconButton>\n\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose} disabled>\n                    Profile\n                    <ComingSoon />\n                </MenuItem>\n                <MenuItem onClick={handleClose} disabled>\n                    Settings\n                    <ComingSoon />\n                </MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","/**\n * @summary Renders the RHS of the appbar for logged out users\n * @author Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:05:00\n */\n\nimport React from 'react'\nimport { Button } from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to='/login' {...props} />\n))\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to='/signup' {...props} />\n))\n\nexport default props => {\n    return (\n        <div>\n            <Button color='inherit' underline='none' component={SignupLink}>\n                Sign up\n            </Button>\n            <Button color='inherit' underline='none' component={LoginLink}>\n                Login\n            </Button>\n        </div>\n    )\n}\n","/**\n * @summary Renders an appbar for logged in and out users\n * @author Zane Duffield, Kyle Zsembery\n *\n * Last modified  : 2019-10-26 17:59:17\n */\n\nimport React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Toolbar,\n    AppBar,\n    makeStyles,\n    Typography\n} from '@material-ui/core'\n\nimport { Home, Menu, Brightness4, Brightness7 } from '@material-ui/icons'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    iconButton: {\n        marginRight: theme.spacing(1)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n\n    const [open, setOpen] = useState(false)\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color='primary' elevation={6}>\n                <Toolbar>\n                    <IconButton\n                        className={classes.iconButton}\n                        edge='start'\n                        color='inherit'\n                        aria-label='menu'\n                        onClick={e => setOpen(true)}\n                    >\n                        <Menu />\n                    </IconButton>\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='home'\n                        component={RouterLink}\n                        to='/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant='h6' className={classes.title} noWrap>\n                        AMS\n                    </Typography>\n\n                    <IconButton\n                        className={classes.iconButton}\n                        color='inherit'\n                        aria-label='theme-toggle'\n                        onClick={props.onToggleDarkTheme}\n                    >\n                        {!dark ? <Brightness4 /> : <Brightness7 />}\n                    </IconButton>\n\n                    {loggedIn ? (\n                        <LoggedInBar\n                            username={username}\n                            drawerOpen={open}\n                            setDrawerOpen={setOpen}\n                            setHelpOpen={props.setHelpOpen}\n                        />\n                    ) : (\n                        <NotLoggedInBar />\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","/**\n * This file renders it's children below a header and provides\n * a theme to it's children to be accessed via the useTheme hook\n *\n * @summary Provides the basic structure and theming for most pages\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:02:38\n */\n\nimport React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { teal, deepPurple, indigo } from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nconst typography = {\n    fontFamily: 'Dosis, Roboto, sans-serif',\n    h1: {\n        fontFamily: 'Roboto, sans-serif',\n        fontWeight: 100\n    },\n    h2: {\n        fontFamily: 'Roboto, sans-serif',\n        fontWeight: 100\n    },\n    h3: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n    h4: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n    h5: {\n        fontFamily: 'Roboto, sans-serif'\n    },\n    h6: {\n        fontFamily: 'Roboto, sans-serif'\n    }\n}\n\nconst lightPalette = {\n    primary: indigo,\n    secondary: {\n        main: teal[400]\n    },\n    type: 'light'\n}\n\nconst darkPalette = {\n    primary: {\n        main: deepPurple['A100']\n    },\n    secondary: teal,\n    error: {\n        main: '#CF6679'\n    },\n    background: {\n        paper: '#303030',\n        default: '#121212'\n    },\n    type: 'dark'\n}\n\nlet lightTheme = createMuiTheme({\n    palette: lightPalette,\n    type: 'light',\n    typography: typography\n})\nlightTheme = responsiveFontSizes(lightTheme)\n\nlet darkTheme = createMuiTheme({\n    palette: darkPalette,\n    type: 'dark',\n    typography: typography\n})\ndarkTheme = responsiveFontSizes(darkTheme)\n\nexport default props => {\n    // Get the user's theme from local storage. This will clear if localStorage.clear()\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n    }\n\n    const [theme, setTheme] = useState(\n        localStorage.getItem(THEME_TYPE) === 'light' ? lightTheme : darkTheme\n    )\n\n    // Called on click of dark theme button\n    const toggleDarkTheme = () => {\n        var newTheme = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newTheme)\n        setTheme(newTheme === 'light' ? lightTheme : darkTheme)\n    }\n\n    const [helpOpen, setHelpOpen] = useState(false)\n    const children = React.Children.map(props.children, child => {\n        return React.cloneElement(child, {\n            helpOpen: helpOpen,\n            setHelpOpen: setHelpOpen\n        })\n    })\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Header\n                onToggleDarkTheme={toggleDarkTheme}\n                setHelpOpen={setHelpOpen}\n            />\n            {children}\n        </ThemeProvider>\n    )\n}\n","/**\n * @summary renders a loading symbol centered in the closest container\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:03:27\n */\n\nimport React from 'react'\nimport { CircularProgress, Grid } from '@material-ui/core'\n\n// So user knows the page is loading, present a nice spinny circle\nexport default () => (\n    <Grid\n        container\n        alignItems='center'\n        justify='center'\n        style={{ height: '90vh' }}\n    >\n        <CircularProgress />\n    </Grid>\n)\n","/**\n * Requires as input an artefact as provided by GQL backend.\n *\n * @summary Provides a material card-like summary of an artefact\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 17:47:35\n */\n\nimport React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { config } from '../constants'\n\nvar Trianglify = require('trianglify')\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        // maxWidth: 345,\n        borderRadius: 10\n        // height: '100%'\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 170\n    }\n}))\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ artefact }) {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const { upload, name, description, id, admin } = artefact\n    const [patternURI, setPatternURI] = useState('')\n\n    var mediaURI = config.mediaRoot + upload\n    if (upload === 'False' && !patternURI) {\n        // use primary and seconary colours of theme as a seed for the random colour generation\n        var pattern = Trianglify({\n            width: 500,\n            height: 500,\n            x_colors: [\n                theme.palette.primary.dark,\n                theme.palette.secondary.light\n            ],\n            y_colors: 'random'\n        })\n        setPatternURI(pattern.png())\n    }\n\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardMedia\n                className={classes.media}\n                image={patternURI ? patternURI : mediaURI}\n                title={name}\n            />\n            <CardContent>\n                <Grid container>\n                    <Grid item xs={9}>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Typography\n                            gutterBottom\n                            variant='overline'\n                            component='h2'\n                            noWrap\n                            align='right'\n                        >\n                            {admin.username}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardActions>\n                <Button\n                    size='small'\n                    fullWidth\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                {/* <Button\n                    size='small'\n                    color='secondary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button> */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { makeStyles } from '@material-ui/core/styles'\nimport './popup.css'\n\nconst useStyles = makeStyles(theme => ({\n    popup: {\n        zIndex: '50 !important',\n        minWidth: '300px'\n    }\n}))\n\nconst mapProps = {\n    accessToken: MY_ACCESS_TOKEN,\n    attributionControl: false,\n    maxZoom: 18,\n    minZoom: 2\n}\nconst Mapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: false\n})\n\nconst InteractiveMapbox = ReactMapboxGl({\n    ...mapProps,\n    interactive: true\n})\n\nexport default function Map(props) {\n    const classes = useStyles()\n\n    const Map = props.interactive ? InteractiveMapbox : Mapbox\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [openArtefactID, setOpenArtefactID] = useState('')\n\n    const handleSetOpenArtefact = id => {\n        if (openArtefactID === id) {\n            setOpenArtefactID('')\n        } else {\n            setOpenArtefactID(id)\n        }\n    }\n\n    const onMapClick = () => {\n        handleSetOpenArtefact('')\n        if (props.onClick) {\n            props.onClick()\n        }\n    }\n\n    return (\n        <Map\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n            onClick={onMapClick}\n        >\n            {/* place a marker on each provided artefact */}\n            {artefacts.map(artefact => {\n                var { center, popup, initPopupOpen, id } = artefact\n                if (initPopupOpen) {\n                    artefact.initPopupOpen = false\n                    setOpenArtefactID(id)\n                }\n                if (!center || !center.length) {\n                    return null\n                }\n                return (\n                    <Fragment key={id}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => handleSetOpenArtefact(id)}\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup && openArtefactID === id && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                                className={classes.popup}\n                            >\n                                <ArtefactCard artefact={artefact} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </Map>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            if (bboxCoords) {\n                const bbox = [\n                    [bboxCoords[0], bboxCoords[1]],\n                    [bboxCoords[2], bboxCoords[3]]\n                ]\n                result.mapState.fitBounds = bbox\n            }\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const CREATE_ARTEFACT_MUTATION_STR = `\nmutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n        $date: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n                date: $date\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n            date\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                        upload\n                        admin {\n                            username\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`\n\nexport const DELETE_ARTEFACT_MUTATION = gql`\n    mutation ArtefactDelete($id: ID!) {\n        artefactDelete(id: $id) {\n            ok\n        }\n    }\n`\n","/**\n * @summary A wrapper component that provides the details of the users families via props\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 17:54:49\n */\n\nimport React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_FAMILIES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","/**\n * @summary A wrapper component that provides the possible states for an artefact\n * according to the database\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 17:55:51\n */\n\nimport React, { useState } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","/**\n * The parent component must provide via props \"match\" as used by the Route react\n * component so the artefact ID can be found in the URL.\n *\n * @summary A wrapper component that provides details for the artefact in\n * the URL via props\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 17:52:21\n */\n\nimport React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const { loading, error: fetchError, data } = useQuery(ARTEFACT_DETAIL, {\n        onError: error => console.error('Error fetching artefact: ', error),\n        variables: {\n            id: rest.match.params.id\n        }\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n        fetchError: fetchError\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'flex-start',\n        textAlign: 'left'\n    },\n    fieldTitle: {\n        textAlign: 'left',\n        marginLeft: theme.spacing(1)\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        borderRadius: 10\n    },\n    button: {\n        height: '100%'\n    },\n    editLinkButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1)\n    },\n    deleteButton: {\n        width: '60px',\n        height: '30px',\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.error.main\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper + '!important',\n        height: '100%',\n        borderRadius: 10,\n        alignItems: 'flex-start !important'\n    },\n    dropzoneText: {\n        fontSize: 'medium !important'\n        // margin: '0 !important'\n    },\n    outerContainer: {\n        spacing: theme.spacing(1),\n        alignItems: 'stretch',\n        alignContent: 'stretch',\n        justifyContent: 'center'\n    },\n    switch: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    }\n}))\n","/**\n * Must be provided a component \"content\" via props which renders the\n * specific help DialogContent for the page it appears on\n *\n * @summary Provides a generic template for the help dialog on each page\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:00:41\n */\n\nimport React from 'react'\nimport { Button, Dialog, DialogActions } from '@material-ui/core'\n\nexport default ({ open, setOpen, content: MyDialogContent, ...rest }) => (\n    <Dialog\n        fullWidth\n        maxWidth='sm'\n        open={open}\n        onClose={() => setOpen(false)}\n        aria-labelledby='help-title'\n    >\n        <MyDialogContent {...rest} />\n        <DialogActions>\n            <Button onClick={() => setOpen(false)} color='primary'>\n                Close\n            </Button>\n        </DialogActions>\n    </Dialog>\n)\n","/**\n * @summary Renders a landing page for new / logged out users\n * @author Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:16:46\n */\n\nimport React, { useState, useEffect } from 'react'\nimport Particles from 'react-particles-js'\nimport { Button } from '@material-ui/core'\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Typist from 'react-typist'\nimport { Link as RouterLink } from 'react-router-dom'\n\n/*\nThe page that users come to when they first encounter our app. It's a marketing page\n\n*/\nfunction HomePageButton(props) {\n    const { linkTo } = props\n    return (\n        <Button\n            style={{\n                color: '#f0f0f0',\n                padding: '12px',\n                margin: '4px',\n                marginTop: '8px'\n            }}\n            component={RouterLink}\n            to={linkTo}\n        >\n            {props.children}\n        </Button>\n    )\n}\n\nfunction LandingPage(props) {\n    // Help the landing page be mobile friendly\n    let landingTheme = createMuiTheme()\n    landingTheme = responsiveFontSizes(landingTheme)\n\n    // Allow for looping of the typing animation\n    const [typing, setTyping] = useState(true)\n    useEffect(() => {\n        setTyping(true)\n    }, [typing])\n\n    const typingDone = () => {\n        setTyping(false)\n    }\n\n    return (\n        <div>\n            <ThemeProvider theme={landingTheme}>\n                <link\n                    href='https://fonts.googleapis.com/css?family=Dosis&display=swap'\n                    rel='stylesheet'\n                ></link>\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: 0,\n                        right: '20px',\n                        zIndex: 4\n                    }}\n                >\n                    <HomePageButton linkTo='/signup'>Sign up</HomePageButton>\n                    <HomePageButton linkTo='/login'>Login</HomePageButton>\n                </div>\n                <Typography\n                    theme={landingTheme}\n                    variant='h1'\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '10%',\n                        zIndex: 3,\n                        position: 'relative',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    Artefact Management System\n                </Typography>\n                <Typography\n                    variant='h2'\n                    theme={landingTheme}\n                    style={{\n                        marginLeft: '8%',\n                        marginRight: '8%',\n                        marginTop: '1%',\n                        zIndex: 3,\n                        position: 'relative',\n                        top: '8rem',\n                        fontWeight: 'lighter',\n                        fontFamily: 'Dosis',\n                        color: '#f0f0f0'\n                    }}\n                >\n                    {typing ? (\n                        <Typist\n                            cursor={{ show: false }}\n                            onTypingDone={typingDone}\n                        >\n                            <Typist.Delay ms={400} />\n                            <span>Connecting you to your family</span>\n                            <span> and your familys history.</span>\n                            <Typist.Backspace count={10} delay={200} />\n                            <span>'s history.</span>\n                            <Typist.Backspace count={56} delay={5000} />\n                        </Typist>\n                    ) : (\n                        ''\n                    )}\n                </Typography>\n                <Particles\n                    style={{\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        background:\n                            'linear-gradient(90deg, rgba(103, 58, 183, 1) 25%, rgba(63, 81, 181, 1) 100%, rgba(255, 255, 255, 1) 100%)'\n                    }}\n                    params={{\n                        particles: {\n                            number: {\n                                value: 120,\n                                density: {\n                                    enable: true,\n                                    value_area: 800\n                                }\n                            },\n                            color: {\n                                value: '#ffffff'\n                            },\n                            shape: {\n                                type: 'circle',\n                                stroke: {\n                                    width: 0,\n                                    color: '#FFFFFF'\n                                },\n                                polygon: {\n                                    nb_sides: 5\n                                },\n                                image: {\n                                    src: 'img/github.svg',\n                                    width: 100,\n                                    height: 100\n                                }\n                            },\n                            opacity: {\n                                value: 0.44093831673801875,\n                                random: false,\n                                anim: {\n                                    enable: false,\n                                    speed: 1,\n                                    opacity_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            size: {\n                                value: 4.008530152163807,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 40,\n                                    size_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            line_linked: {\n                                enable: true,\n                                distance: 150,\n                                color: '#ffffff',\n                                opacity: 0.4,\n                                width: 1\n                            },\n                            move: {\n                                enable: true,\n                                speed: 6,\n                                direction: 'none',\n                                random: false,\n                                straight: false,\n                                out_mode: 'out',\n                                bounce: false,\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200\n                                }\n                            }\n                        },\n                        interactivity: {\n                            detect_on: 'canvas',\n                            events: {\n                                onhover: {\n                                    enable: true,\n                                    mode: 'grab'\n                                },\n                                onclick: {\n                                    enable: true,\n                                    mode: 'push'\n                                },\n                                resize: true\n                            },\n                            modes: {\n                                grab: {\n                                    distance: 400,\n                                    line_linked: {\n                                        opacity: 1\n                                    }\n                                },\n                                bubble: {\n                                    distance: 400,\n                                    size: 40,\n                                    duration: 2,\n                                    opacity: 8,\n                                    speed: 3\n                                },\n                                repulse: {\n                                    distance: 200,\n                                    duration: 0.4\n                                },\n                                push: {\n                                    particles_nb: 4\n                                },\n                                remove: {\n                                    particles_nb: 2\n                                }\n                            }\n                        },\n                        retina_detect: true\n                    }}\n                ></Particles>\n            </ThemeProvider>\n        </div>\n    )\n}\nexport default LandingPage\n","/**\n * @summary Renders one component if the user is authenticated (via JWT tokens)\n * and another otherwise\n * @author Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:10:48\n */\n\nimport React, { Component, useContext } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport authContext from '../authContext'\nimport { AUTH_TOKEN } from '../constants'\nimport { Loading, Layout } from './'\nimport LandingPage from '../views/LandingPage'\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({ checkAuthenticated: true })\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN)\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                this.setState({ checkAuthenticated: true })\n            })\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated)\n    }\n}\n\nconst UnwrappedPrivateRoute = ({\n    loggedIn: LoggedIn,\n    loggedOut,\n    path,\n    landingPage,\n    ...rest\n}) => {\n    const context = useContext(authContext)\n    const authenticated = context.authenticated\n\n    if (!loggedOut) {\n        loggedOut = '/login'\n    }\n\n    console.log('Authenticated: ', authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated =>\n                checkAuthenticated === false ? (\n                    <Loading />\n                ) : (\n                    <Route\n                        {...rest}\n                        render={props => {\n                            if (authenticated) {\n                                return <LoggedIn {...props} {...rest} />\n                            } else if (!authenticated && landingPage) {\n                                return <LandingPage />\n                            } else {\n                                return <Redirect to={loggedOut} />\n                            }\n                        }}\n                    />\n                )\n            }\n        </WaitWraper>\n    )\n}\n\nexport const PrivateRoute = props => (\n    <Layout>\n        <UnwrappedPrivateRoute {...props} />\n    </Layout>\n)\n","/**\n * @summary Renders a simple login form\n * @author Zane Duffield, Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:17:09\n */\n\nimport React, { useState, useContext } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper,\n    makeStyles\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nfunction Login({ history }) {\n    const context = useContext(authContext)\n    const classes = useStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    const fields = [\n        {\n            label: 'Username',\n            error: invalidCred,\n            helperText: '',\n            onChange: setUsername\n        },\n        {\n            label: 'Password',\n            error: invalidCred,\n            helperText: invalidCred ? 'Please enter valid credentials' : '',\n            onChange: setPassword\n        }\n    ]\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n\n                {fields.map((field, index) => (\n                    <TextField\n                        key={index}\n                        className={classes.root}\n                        onChange={e => field.onChange(e.target.value)}\n                        variant='outlined'\n                        required\n                        fullWidth\n                        autoComplete={field.label.toLowerCase()}\n                        label={field.label}\n                        type={field.label.toLowerCase()}\n                        autoFocus={index === 0}\n                        error={field.error}\n                        helperText={field.helperText}\n                    />\n                ))}\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='secondary'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nconst CenterWrapping = props => (\n    <Grid\n        container\n        spacing={0}\n        direction='column'\n        alignItems='center'\n        justify='center'\n        style={{ minHeight: '80vh' }}\n    >\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n            <Login {...props} />\n        </Grid>\n    </Grid>\n)\n\nexport default props => (\n    <Layout>\n        <CenterWrapping {...props} />\n    </Layout>\n)\n","/**\n * PASSWORD_SCHEMA provides a \"validate\" method\n * parseFailedRules interprets the output of PASSWORD_SCHEMA\n * see SignupView.js for example usage\n *\n * @summary Handles password validation via it's exports\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:08:11\n */\n\nvar passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","/**\n * @summary Renders a simple signup form\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:19:09\n */\n\nimport React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper,\n    makeStyles\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Layout } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center',\n        borderRadius: 10\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = useStyles()\n\n    // ran after successful signup\n    const _confirm = async data => {\n        props.history.push(`/login`)\n    }\n\n    // ran after unsuccessful sign up\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            // handle specific error for taken username\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    // form validation and error messages\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const disableSubmit = errorPassword || errorConfirmPassword || invalidEmail\n\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    // textfield properties\n    const fields = [\n        {\n            label: 'Username',\n            error: usernameIsTaken,\n            helperText: usernameIsTaken ? 'Username is taken' : '',\n            onChange: setUsername\n        },\n        {\n            label: 'Email',\n            error: emailError,\n            helperText: emailErrMsg,\n            onChange: setEmail\n        },\n        {\n            label: 'Password',\n            error: errorPassword,\n            helperText: errorPassword ? parseFailedRules(failedPassRules) : '',\n            onChange: changePassword\n        },\n        {\n            label: 'Confirm Password',\n            error: errorConfirmPassword,\n            helperText: errorConfirmPassword ? 'Passwords must match' : '',\n            onChange: setConfirmPassword\n        }\n    ]\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                {fields.map((field, index) => (\n                    <TextField\n                        key={index}\n                        className={classes.root}\n                        onChange={e => field.onChange(e.target.value)}\n                        variant='outlined'\n                        required\n                        fullWidth\n                        autoComplete={field.label.toLowerCase()}\n                        label={field.label}\n                        type={field.label.toLowerCase()}\n                        autoFocus={index === 0}\n                        error={field.error}\n                        helperText={field.helperText}\n                    />\n                ))}\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='secondary'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nconst CenterWrapping = props => (\n    <Grid\n        container\n        spacing={0}\n        direction='column'\n        alignItems='center'\n        justify='center'\n        style={{ minHeight: '80vh' }}\n    >\n        <Grid item xs={10} sm={8} md={6} lg={4}>\n            <Signup {...props} />\n        </Grid>\n    </Grid>\n)\n\nexport default props => (\n    <Layout>\n        <CenterWrapping {...props} />\n    </Layout>\n)\n","/**\n * @summary Used by route to allow logout for user\n * @author Kyle Zsembery\n */\n\nimport React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","/**\n * @summary Renders a simple family creation form\n * @author Zane Duffield, Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:16:12\n */\n\nimport React, { useContext, useState, Fragment } from 'react'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Grid,\n    Paper,\n    FormControl,\n    Snackbar\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nimport { HelpDialog } from '../components'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nconst HelpContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Create a family by filling out the form and clicking \"create\"\n            </DialogContentText>\n            <DialogContentText>\n                On creation you will receive a join code which will allow others\n                to join your new family\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\n// dialog shown after successful family creation\nconst FamilyCreatedDialog = ({\n    open,\n    handleClose,\n    familyName,\n    joinCode,\n    setCopied\n}) => (\n    <Dialog open={open} onClose={handleClose}>\n        <DialogTitle onClose={handleClose}>\n            Begin adding members to '{familyName}'!\n        </DialogTitle>\n        <DialogContent>\n            <Typography align='left'>\n                You can now add artefacts to this family. To view them simply\n                select '{familyName}' from the Select Family dropdown on your\n                home dashboard.\n                <br />\n                Begin getting members to join your family! Simply share the code\n                below to your family members, get them to sign up and then they\n                can join!\n                <br />\n                <br />\n                {joinCode} &nbsp;\n                <CopyToClipboard text={joinCode} onCopy={() => setCopied(true)}>\n                    <Button variant='outlined'>Copy</Button>\n                </CopyToClipboard>\n                <br />\n                <br />\n                (This code will also be available on the home page)\n            </Typography>\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color='primary' autoFocus>\n                Continue\n            </Button>\n        </DialogActions>\n    </Dialog>\n)\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n    const [copied, setCopied] = useState(false)\n\n    const _completed = async data => {\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    // back to const once done\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    // Call the mutation on form submission\n    const submitForm = async event => {\n        event.preventDefault()\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n        props.history.push(`/`)\n    }\n\n    // text field properties\n    const fields = [\n        {\n            label: 'Family name',\n            onChange: e => setFamilyName(e.target.value),\n            autoFocus: true\n        },\n        {\n            label: 'Tell people about your family',\n            multiline: true,\n            rows: 6,\n            onChange: e => setAbout(e.target.value)\n        },\n        {\n            label: 'Family Admin',\n            onChange: e =>\n                console.error(\n                    'The admin value was changed, how is this even possible?'\n                ),\n            defaultValue: username,\n            disabled: true\n        }\n    ]\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid container spacing={1} className={classes.outerContainer}>\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4'>Create Family</Typography>\n\n                    <Typography variant='subtitle1'>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                {fields.map(field => (\n                    <Grid item xs={12} key={field.label}>\n                        <Paper className={classes.paperWrapper} elevation={3}>\n                            <FormControl\n                                className={classes.formControl}\n                                fullWidth\n                            >\n                                <TextField\n                                    variant='outlined'\n                                    required\n                                    fullWidth\n                                    {...field}\n                                />\n                            </FormControl>\n                        </Paper>\n                    </Grid>\n                ))}\n\n                <Grid item xs={12}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='secondary'\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={HelpContent}\n            />\n\n            <FamilyCreatedDialog\n                open={open}\n                handleClose={handleClose}\n                familyName={familyName}\n                joinCode={joinCode}\n                setCopied={setCopied}\n            />\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={copied}\n                autoHideDuration={2000}\n                onClose={() => setCopied(false)}\n                message={\n                    <span id='message-id'>\n                        Join code copied to clipboard\n                        <br />\n                        {joinCode}\n                    </span>\n                }\n            />\n        </form>\n    )\n}\n\nexport default props => (\n    <Fragment>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={11} md={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\n\nimport { Button, FormHelperText } from '@material-ui/core'\n\nexport default ({ noErrors, ...rest }) => (\n    <Fragment>\n        <Button\n            {...rest}\n            color='secondary'\n            variant='contained'\n            type='submit'\n        >\n            Save\n        </Button>\n        {!noErrors && (\n            <FormHelperText error={!noErrors}>\n                Unknown Error Occurred\n            </FormHelperText>\n        )}\n    </Fragment>\n)\n","import React, { Fragment } from 'react'\nimport { Grid, Typography, Button } from '@material-ui/core'\nimport CreateButton from './CreateButton'\nimport { withGetScreen } from 'react-getscreen'\n\nexport default withGetScreen(\n    ({ states, setters, classes, isAdmin, openDelete, noErrors, isMobile }) => {\n        const { create, edit, view } = states.mode\n        const showEditButton = view && isAdmin\n        const showDeleteButton = edit && isAdmin\n        const showButton = showEditButton || showDeleteButton || create\n        const marginLeftButton = isMobile() ? 18 : 'auto'\n\n        return (\n            <Fragment>\n                {((showButton && !isMobile()) || !showButton) && (\n                    <Grid item>\n                        <div\n                            className={classes.editLinkButton}\n                            style={{\n                                marginRight: 'auto',\n                                // width: '65px',\n                                height: '20px',\n                                visibility: 'hidden'\n                            }}\n                        />\n                    </Grid>\n                )}\n                <Grid item>\n                    <Typography variant='h4' align='center'>\n                        {create && 'Create'} {edit && 'Edit'} {view && 'View'}{' '}\n                        Artefact\n                    </Typography>\n                </Grid>\n                {!showButton && (\n                    <Grid item>\n                        <div\n                            className={classes.editLinkButton}\n                            style={{\n                                marginLeft: 'auto',\n                                // width: '65px',\n                                height: '20px',\n                                visibility: 'hidden'\n                            }}\n                        />\n                    </Grid>\n                )}\n                {showButton && (\n                    <Grid item>\n                        {showEditButton && (\n                            <Button\n                                color='secondary'\n                                variant='contained'\n                                onClick={e => setters.setMode({ edit: true })}\n                                className={classes.editLinkButton}\n                                style={{ marginLeft: marginLeftButton }}\n                            >\n                                Edit\n                            </Button>\n                        )}\n                        {showDeleteButton && (\n                            <Button\n                                color='default'\n                                variant='contained'\n                                onClick={openDelete}\n                                className={classes.editLinkButton}\n                                style={{ marginLeft: marginLeftButton }}\n                            >\n                                Delete\n                            </Button>\n                        )}\n\n                        {create && (\n                            <CreateButton\n                                noErrors={noErrors}\n                                className={classes.editLinkButton}\n                                style={{ marginLeft: marginLeftButton }}\n                            />\n                        )}\n                    </Grid>\n                )}\n                {create && (\n                    <Grid item xs={12}>\n                        <Typography\n                            variant='subtitle1'\n                            align={isMobile() ? 'left' : 'center'}\n                        >\n                            Artefacts are belongings of the family, enter as\n                            much or as little detail as you like\n                        </Typography>\n                    </Grid>\n                )}\n            </Fragment>\n        )\n    }\n)\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            // style={{ height: '100%' }}\n            // InputProps={{ style: {height: '100%'} }}\n            id='artefact-name'\n            label='Artefact name'\n            variant='outlined'\n            autoFocus={!view}\n            required\n            fullWidth\n            value={state.name || ''}\n            inputProps={{ readOnly: view }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField, MenuItem } from '@material-ui/core'\n\nexport default ({ states, setters, artefactStates, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <TextField\n            id='state'\n            label='Artefact Condition'\n            variant='outlined'\n            required\n            fullWidth\n            value={state.state || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            select\n            disabled={disabled}\n        >\n            {Object.keys(artefactStates).map(value => {\n                return (\n                    <MenuItem value={artefactStates[value]} key={value}>\n                        {value}\n                    </MenuItem>\n                )\n            })}\n        </TextField>\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, setters, disabled, name, numFams }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    return (\n        <TextField\n            id='description'\n            label='Description'\n            variant='outlined'\n            required\n            fullWidth\n            multiline\n            value={state.description || ''}\n            inputProps={{\n                readOnly: view\n            }}\n            onChange={e => handleSetField(name, e.target.value)}\n            disabled={disabled}\n        />\n    )\n}\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\nexport default ({ states, username }) => {\n    var { state } = states\n    return (\n        <TextField\n            id='artefact-admin'\n            label='Artefact Admin'\n            variant='outlined'\n            required\n            fullWidth\n            value={\n                state.admin && Object.keys(state.admin).length !== 0\n                    ? state.admin.username\n                    : username\n            }\n            inputProps={{\n                readOnly: true\n            }}\n            onChange={e => console.log('admin field was changed')}\n        />\n    )\n}\n","import React from 'react'\n\nimport 'date-fns'\nimport { KeyboardDatePicker } from '@material-ui/pickers'\n\nexport default ({ states, setters, disabled, name }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <KeyboardDatePicker\n            disabled={view || disabled}\n            clearable\n            minDate={'1500-01-01'}\n            // variant='inline'\n            inputVariant='outlined'\n            format='dd/MM/yyyy'\n            openTo='year'\n            label='Date (dd/mm/yyyy)'\n            value={state.date}\n            onChange={date => handleSetField(name, date)}\n            KeyboardButtonProps={{\n                'aria-label': 'change date'\n            }}\n        />\n    )\n}\n","import React, { Fragment, useState } from 'react'\nimport {\n    Switch,\n    FormHelperText,\n    Typography,\n    FormControlLabel,\n    Button,\n    Snackbar\n} from '@material-ui/core'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nexport default ({ states, setters, disabled, name, classes }) => {\n    var { create, edit, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    const [copied, setCopied] = useState(false)\n\n    if (create || edit) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    Privacy\n                </Typography>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={state.isPublic || false}\n                            onChange={e =>\n                                handleSetField(name, e.target.checked)\n                            }\n                            // edge='end'\n                            disabled={disabled}\n                        />\n                    }\n                    style={{ marginLeft: 3 }}\n                    label='Public'\n                />\n                <FormHelperText className={classes.fieldTitle}>\n                    {state.isPublic\n                        ? 'Viewable by anyone'\n                        : 'Viewable by family members only'}\n                </FormHelperText>\n            </Fragment>\n        )\n    } else if (view && state.isPublic) {\n        return (\n            <Fragment>\n                <Typography variant='h6' className={classes.fieldTitle}>\n                    This artefact is public, accessible by link\n                </Typography>\n                <CopyToClipboard\n                    text={window.location.href}\n                    onCopy={() => setCopied(true)}\n                >\n                    <Button variant='outlined'>Copy Link</Button>\n                </CopyToClipboard>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    open={copied}\n                    autoHideDuration={2000}\n                    onClose={() => setCopied(false)}\n                    message={\n                        <span id='message-id'>\n                            Link copied to clipboard\n                            <br />\n                            {window.location.href}\n                        </span>\n                    }\n                />\n            </Fragment>\n        )\n    } else {\n        return null\n    }\n}\n","import React, { Fragment } from 'react'\nimport {\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox,\n    Typography\n} from '@material-ui/core'\n\n/*\nHandles the families list as part of an artefact view\nWill only show the artefact as part of the families that you are a part of.\ni.e. Will maintain other family's privacy.\n */\nexport default ({ states, setters, families, disabled, name, classes }) => {\n    var { view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n\n    if (\n        view &&\n        state.belongsToFamiliesBools &&\n        Object.values(state.belongsToFamiliesBools).filter(value => value)\n            .length === 0\n    ) {\n        return (\n            <Typography variant='h6' className={classes.fieldTitle}>\n                This artefact doesn't belong to any of your families\n            </Typography>\n        )\n    }\n\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                {!view\n                    ? 'Families the artefact belongs to'\n                    : 'Belongs to your families'}\n            </Typography>\n            <List disablePadding>\n                {families.map(family => {\n                    if (\n                        state.belongsToFamiliesBools &&\n                        (!view || state.belongsToFamiliesBools[family.id])\n                    ) {\n                        return (\n                            <ListItem key={family.id} dense disabled={disabled}>\n                                {!view && (\n                                    <ListItemIcon>\n                                        <Checkbox\n                                            edge='start'\n                                            checked={\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] || false\n                                            }\n                                            onClick={e =>\n                                                handleSetField(name, {\n                                                    ...state.belongsToFamiliesBools,\n                                                    [family.id]:\n                                                        e.target.checked\n                                                })\n                                            }\n                                            tabIndex={-1}\n                                        />\n                                    </ListItemIcon>\n                                )}\n                                <ListItemText primary={family.familyName} />\n                            </ListItem>\n                        )\n                    }\n                    return null\n                })}\n            </List>\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport { Typography, CircularProgress } from '@material-ui/core'\nimport Image from 'material-ui-image'\nimport { useTheme } from '@material-ui/styles'\n\nimport { config } from '../../../constants'\n\nexport default ({ classes, states, setters, name }) => {\n    const theme = useTheme()\n    var { edit, create, view } = states.mode\n    var { state } = states\n    var { handleSetField } = setters\n    return (\n        <Fragment>\n            <Typography variant='h6' className={classes.fieldTitle}>\n                Images\n            </Typography>\n            {edit && (\n                <Typography variant='caption' className={classes.fieldTitle}>\n                    Editing coming soon...\n                </Typography>\n            )}\n\n            {create && (\n                <DropzoneArea\n                    initialFiles={state.files || []}\n                    acceptedFiles={['image/*']}\n                    dropzoneText=''\n                    filesLimit={1}\n                    onChange={files => handleSetField(name, files)}\n                    dropzoneClass={classes.dropzone}\n                    classes={{\n                        dropzoneTextStyle: classes.fieldTitle,\n                        dropzoneParagraph: classes.fieldTitle\n                    }}\n                />\n            )}\n            {(view || edit) && state.upload !== 'False' && (\n                <Image\n                    src={config.mediaRoot + state.upload}\n                    loading={<CircularProgress />}\n                    color={theme.palette.background.paper}\n                    imageStyle={{ borderRadius: 10 }}\n                />\n            )}\n        </Fragment>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    TextField,\n    Grid,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { Map } from '../../../components'\n\nexport default ({\n    states,\n    setters,\n    classes,\n    name,\n    handleGeocodeQuery,\n    disabled\n}) => {\n    var { view } = states.mode\n    var {\n        handleSetField,\n        setAddressIsSearchResult,\n        setLocationState,\n        handleSetLocationResult\n    } = setters\n    var { locationState, state } = states\n\n    const theme = useTheme()\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    return (\n        <Fragment>\n            <TextField\n                id='address'\n                label='Address'\n                variant='outlined'\n                fullWidth\n                disabled={disabled}\n                value={state.address || ''}\n                inputProps={{\n                    readOnly: view\n                }}\n                onChange={e => {\n                    handleSetField(name, e.target.value)\n                    if (e.target.value) {\n                        setAddressIsSearchResult(false)\n                    } else {\n                        // allow blank address\n                        setAddressIsSearchResult(true)\n                    }\n                }}\n                error={!!locationState.error}\n                InputProps={{\n                    endAdornment: !view && (\n                        <IconButton\n                            className={classes.iconButton}\n                            aria-label='search'\n                            id='search'\n                            onClick={e =>\n                                handleGeocodeQuery({\n                                    query: state.address,\n                                    initial: false\n                                })\n                            }\n                        >\n                            <SearchIcon />\n                        </IconButton>\n                    ),\n                    style: { marginBottom: 3 }\n                }}\n                onKeyDown={e => {\n                    if (e.keyCode === 13 && !view) {\n                        e.preventDefault()\n                        document.getElementById('search').click()\n                    }\n                }}\n                helperText={locationState.error}\n            />\n            <Popover\n                id={locationState.queryResults.length ? 'results' : undefined}\n                open={!!locationState.queryResults.length}\n                anchorEl={document.getElementById('address')}\n                onClose={e =>\n                    setLocationState({\n                        ...locationState,\n                        queryResults: []\n                    })\n                }\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n            >\n                <List component='div' disablePadding>\n                    {locationState.queryResults.map(result => (\n                        <ListItem\n                            key={result.placeName}\n                            button\n                            className={classes.nested}\n                            onClick={e => handleSetLocationResult(result)}\n                        >\n                            <ListItemText primary={result.placeName} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Popover>\n\n            <Grid container style={{ marginTop: 1 }}>\n                <Map\n                    interactive={false}\n                    className={classes.map}\n                    mapState={locationState.mapState}\n                    mapStyle={mapStyle}\n                    containerStyle={{\n                        height: '60vh',\n                        width: '100vw',\n                        borderRadius: 20,\n                        marginTop: 5\n                    }}\n                    artefacts={[\n                        {\n                            center: locationState.mapState.center,\n                            id: -1\n                        }\n                    ]}\n                />\n            </Grid>\n        </Fragment>\n    )\n}\n","import React from 'react'\nimport { Button, Grid, FormHelperText } from '@material-ui/core'\n\nexport default ({ save, cancel, updateErrors, classes }) => {\n    function MyButton(props) {\n        return (\n            <Button\n                variant='contained'\n                color={props.color}\n                className={classes.button}\n                onClick={props.onClick}\n                fullWidth\n                padding={1}\n            >\n                {props.name}\n            </Button>\n        )\n    }\n\n    return (\n        <Grid\n            container\n            justify='space-evenly'\n            alignItems='center'\n            spacing={1}\n            style={{ marginTop: 1 }}\n        >\n            <Grid item xs={6}>\n                <MyButton onClick={save} name='Save' color='primary' />\n            </Grid>\n            <Grid item xs={6}>\n                <MyButton\n                    onClick={cancel}\n                    name='Cancel'\n                    color='secondary'\n                />\n            </Grid>\n\n            {updateErrors && (\n                <Grid item xs={12}>\n                    <FormHelperText error>\n                        Error Updating Artefact\n                    </FormHelperText>\n                </Grid>\n            )}\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { FormControl, Paper } from '@material-ui/core'\nimport EditButtons from './EditButtons'\n\nexport default ({\n    child: Child,\n    childProps,\n    name,\n    classes,\n    editButtonProps,\n    ...rest\n}) => {\n    var { beingEdited, states } = childProps\n    var { edit } = states.mode\n    var thisBeingEdited = beingEdited === name\n    var someBeingEdited = edit && !!beingEdited\n    return (\n        <Paper className={classes.paperWrapper} elevation={3}>\n            <FormControl className={classes.formControl} fullWidth>\n                <Child\n                    {...childProps}\n                    disabled={someBeingEdited && !thisBeingEdited}\n                    name={name}\n                    classes={classes}\n                    {...rest}\n                />\n\n                {thisBeingEdited && <EditButtons {...editButtonProps} />}\n            </FormControl>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport {\n    Button,\n    Snackbar,\n    IconButton,\n    ClickAwayListener\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nexport default ({ open, setOpen, viewArtefact, classes, id }) => {\n    return (\n        <ClickAwayListener onClickAway={() => setOpen(false)}>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={open}\n                autoHideDuration={2000}\n                onClose={() => setOpen(false)}\n                ContentProps={{\n                    'aria-describedby': 'message-id'\n                }}\n                message={<span id='message-id'>Edit successful</span>}\n                action={[\n                    <Button\n                        key='view'\n                        color='secondary'\n                        size='small'\n                        onClick={e => viewArtefact(id)}\n                    >\n                        VIEW\n                    </Button>,\n                    <IconButton\n                        key='close'\n                        aria-label='close'\n                        color='inherit'\n                        onClick={() => setOpen(false)}\n                        className={classes.close}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ]}\n            />\n        </ClickAwayListener>\n    )\n}\n","import React from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button\n} from '@material-ui/core'\n\nexport default ({ open, setOpen, deleteArtefact, artefact }) => {\n    return (\n        <Dialog\n            fullWidth\n            maxWidth='sm'\n            open={open}\n            onClose={() => setOpen(false)}\n            aria-labelledby='help-title'\n        >\n            <DialogTitle>Delete Artefact</DialogTitle>\n            <DialogContent>\n                <DialogContentText>This cannot be undone</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setOpen(false)} color='secondary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() =>\n                        deleteArtefact({ variables: { id: artefact.id } })\n                    }\n                    color='primary'\n                >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import React, { Fragment } from 'react'\nimport {\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\n\nexport default ({ mode }) => {\n    const { edit, create, view } = mode\n    return (\n        <Fragment>\n            <DialogTitle id='help-title'>Help</DialogTitle>\n            {create && (\n                <DialogContent>\n                    <DialogContentText>\n                        Create an artefact by filling out the form and clicking\n                        \"save\".\n                    </DialogContentText>\n                    <DialogContentText>\n                        You can assign the artefact to any number of your\n                        families.\n                    </DialogContentText>\n                    <DialogContentText>\n                        The artefact will only be viewable by members of the\n                        selected families, unless the artefact is set to\n                        \"public\".\n                    </DialogContentText>\n                    <DialogContentText>\n                        Only you will be able to edit the artefact after\n                        creation.\n                    </DialogContentText>\n                </DialogContent>\n            )}\n\n            {edit && (\n                <DialogContent>\n                    <DialogContentText>\n                        Edit a field by clicking on it, save and cancel buttons\n                        will appear.\n                    </DialogContentText>\n                </DialogContent>\n            )}\n\n            {view && (\n                <DialogContent>\n                    <DialogContentText>\n                        Here you can view the details of an artefact.\n                    </DialogContentText>\n                    <DialogContentText>\n                        If you are the admin of the artefact, a button labelled\n                        \"edit\" in the top right corner will enable editing mode.\n                    </DialogContentText>\n                </DialogContent>\n            )}\n        </Fragment>\n    )\n}\n","/**\n * Input props (booleans) create, view, and edit determine the mode.\n * If not in create mode, an artefact should be provided via props,\n * intended use is in conjunction with GetArtefactWrapper.\n *\n * @summary A polymorphic artefact viewing/editing/creating component\n * @author Zane Duffield, Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:13:43\n */\n\nimport React, { useContext, useState, Fragment } from 'react'\nimport { withRouter, Link as RouterLink } from 'react-router-dom'\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { CssBaseline, Grid, Typography, Link } from '@material-ui/core'\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\n\nimport DateFnsUtils from '@date-io/date-fns'\n\nimport {\n    geocodeQuery,\n    artefactFamilyFormUseStyles,\n    Loading\n} from '../../components'\n\nimport {\n    Head,\n    Name,\n    State,\n    Description,\n    Admin,\n    Date,\n    Privacy,\n    Families,\n    Images,\n    FieldWrapper,\n    Address,\n    SuccessSnackbar,\n    DeleteDialog,\n    CreateButton,\n    HelpContent\n} from './components'\nimport authContext from '../../authContext'\n\nimport { HelpDialog } from '../../components'\n\nimport {\n    CREATE_ARTEFACT_MUTATION_STR,\n    UPDATE_ARTEFACT_MUTATION,\n    DELETE_ARTEFACT_MUTATION\n} from '../../gqlQueriesMutations'\n\nimport { AUTH_TOKEN, config } from '../../constants'\nimport axios from 'axios'\n\nconst FetchArtefactError = () => {\n    return (\n        <Grid\n            container\n            justify='center'\n            spacing={1}\n            style={{\n                marginTop: '2vh'\n            }}\n        >\n            <img\n                style={{\n                    width: '200%'\n                }}\n                src='https://media.tenor.com/images/b10411f7f3a9c5df3ce39a9678eac1dd/tenor.gif'\n                alt='artefact-pic'\n            />\n\n            <Typography\n                variant='h5'\n                style={{\n                    textAlign: 'center',\n                    padding: '2rem'\n                }}\n            >\n                This artefact is either not public or does not exist.\n                <br />\n                You do not have access to view this artefact. Join a family that\n                this artefact is assigned to in order to view it. <br />\n                <Link>\n                    <RouterLink to='/'>Return home</RouterLink>\n                </Link>\n            </Typography>\n        </Grid>\n    )\n}\n\nfunction ArtefactView(props) {\n    // get the mode\n    const [mode, setMode] = useState({\n        create: props.create,\n        edit: props.edit,\n        view: props.view\n    })\n\n    // get families, states, and artefact data\n    var { artefactLoading } = props\n    var { artefactStates, families, fetchError } = props\n\n    // if viewing an existing artefact get the details (potentially unloaded)\n    const context = useContext(authContext)\n    const username = context.user.username\n    let creationErrors\n    var isAdmin\n    if (!mode.create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        // No artefact returned, e.g. if no permissions\n        isAdmin =\n            !artefactLoading && artefact\n                ? artefact.admin.username === username\n                : false\n    }\n\n    // only allow admins to see the edit page\n    if (!isAdmin && mode.edit) {\n        setMode({ view: true })\n    }\n\n    const classes = artefactFamilyFormUseStyles()\n\n    // state variables for use in the \"edit\" mode:\n    // the name of the field being edited, for use in the \"edit\" mode\n    const [beingEdited, setBeingEdited] = useState('')\n    // the value of the field being edited before it was changed\n    const [prevValue, setPrevValue] = useState({})\n    // a message indicating successful edit\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [deleteOpen, setDeleteOpen] = useState(false)\n    const [creating, setCreating] = useState(false)\n\n    // state variables for the map\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        error: '',\n        queryResults: []\n    })\n    // the address field of the main state object must be a query result on submit\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n\n    // makes a geocode query and sets the map's state accordingly\n    // <inital> intended for use on loading in an artefact in edit or view mode\n    // if <initial> is true then it will set the map to the first\n    // result of the query rather than presenting query results\n    const handleGeocodeQuery = ({ query, initial }) => {\n        if (query) {\n            return geocodeQuery(query).then(response => {\n                var newState = {}\n                if (response.noErrors) {\n                    newState.error = 'No results'\n                } else if (response.error) {\n                    newState.error =\n                        'Unknown error occurred, check console for details'\n                    console.error(response.error)\n                }\n\n                if (initial) {\n                    newState.mapState = response.results[0].mapState\n                    setAddressIsSearchResult(true)\n                } else {\n                    newState.queryResults = response.results\n                }\n                setLocationState({\n                    ...locationState,\n                    ...newState\n                })\n            })\n        }\n    }\n\n    // state object for the input fields, GQL mutation variables taken from this\n    const [state, setState] = useState({})\n    // if in edit or view mode load in the data for the artefact into the state\n    // only if the artefact has loaded and this hasn't already run\n    if (\n        (mode.edit || mode.view) &&\n        !artefactLoading &&\n        Object.keys(state).length === 0 &&\n        families &&\n        artefact\n    ) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n        handleGeocodeQuery({ query: artefact.address, initial: true })\n    }\n\n    // if in create mode, initialise the booleans for the family checkboxes to false\n    if (mode.create && families && !state.belongsToFamiliesBools) {\n        let belong = {}\n        families.map(val => (belong[val.id] = false))\n\n        setState({ belongsToFamiliesBools: belong, date: null, state: 'OKY' })\n    }\n\n    // handler for setting the state object\n    const handleSetField = (fieldName, value) => {\n        if (mode.edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n            setPrevValue(state[fieldName])\n        }\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n    }\n\n    // handler for setting the map state when a user selects a location result\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            error: '',\n            queryResults: []\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    // reset the map to before the location was edited\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            queryResults: [],\n            prevMapState: {}\n        })\n    }\n\n    // reset the field being edited\n    const cancelEditing = () => {\n        handleSetField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    // handle an edited but not finalised search field on submit\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            error: 'Select a search result or clear search field before saving'\n        })\n    }\n\n    // send user to view the specified artefact\n    const pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n        setMode({ view: true })\n    }\n\n    // send user to home\n    const pushManageArtefactsURL = () => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/manage`)\n        }\n    }\n\n    // handlers for GQL mutations\n    const handleCreationCompleted = data => {\n        var id = data.data.artefactCreate.artefact.id\n        setCreating(false)\n        pushViewArtefactURL(id)\n    }\n    const updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n    const deleteCompleted = async data => {\n        pushManageArtefactsURL()\n    }\n    const handleCreationError = async errors => {\n        console.error('Creation errors occurred:', errors)\n    }\n    const handleUpdateError = async errors => {\n        console.error('Update errors occured: ', errors)\n    }\n    const handleDeleteError = async errors => {\n        console.error('Deletion errors occured: ', errors)\n    }\n\n    const createArtefact = async (\n        variables,\n        successCallback,\n        errorCallback\n    ) => {\n        setCreating(true)\n        let form_data = new FormData()\n        // Image not passed through by variables\n        if (state.files && state.files.length) {\n            form_data.append('itemImage', state.files[0])\n        }\n        form_data.append('query', CREATE_ARTEFACT_MUTATION_STR)\n        form_data.append('variables', JSON.stringify(variables))\n        let url = config.uri\n        axios\n            .post(url, form_data, {\n                headers: {\n                    Authorization: 'JWT ' + localStorage.getItem(AUTH_TOKEN),\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                    'Content-Transfer-Encoding': 'multipart/form-data'\n                }\n            })\n            .then(res => {\n                successCallback(res.data)\n            })\n            .catch(err => {\n                errorCallback(err)\n            })\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: updateCompleted,\n            onError: handleUpdateError\n        }\n    )\n\n    const [deleteArtefact] = useMutation(DELETE_ARTEFACT_MUTATION, {\n        onCompleted: deleteCompleted,\n        onError: handleDeleteError\n    })\n\n    const parseDate = date => {\n        return date ? date.toISOString().slice(0, -1) : null\n    }\n\n    // for creation of a new artefact\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        var famIDs = []\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        }\n\n        // File/uploaded included directly from state, multipart request\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        if (state.date) {\n            input.date = parseDate(state.date)\n        }\n        createArtefact(input, handleCreationCompleted, handleCreationError)\n    }\n\n    // for updating an existing artefact\n    const saveChange = async event => {\n        if (mode.edit) {\n            var input = {}\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            } else if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else if (beingEdited === 'date') {\n                input[beingEdited] = parseDate(state[beingEdited])\n            } else {\n                input[beingEdited] = state[beingEdited]\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    const noErrors = !creationErrors\n\n    // select the submit handler\n    const submitHandler = e => {\n        e.preventDefault()\n        mode.create ? submitForm(e) : saveChange(e)\n    }\n\n    // if ((mode.edit || mode.view) && dataLoading) {\n    //     return <CircularProgress />\n    // }\n\n    const editButtonProps = {\n        save: saveChange,\n        cancel: cancelEditing,\n        updateErrors: updateErrors,\n        classes: classes\n    }\n\n    const componentProps = {\n        classes: classes,\n        beingEdited: beingEdited,\n        artefactStates: artefactStates,\n        username: context.user.username,\n        families: families,\n        states: {\n            state: state,\n            locationState: locationState,\n            mode: mode\n        },\n        setters: {\n            handleSetField: handleSetField,\n            setMode\n        }\n    }\n\n    const addressProps = {\n        ...componentProps,\n        handleGeocodeQuery: handleGeocodeQuery,\n        setters: {\n            ...componentProps.setters,\n            setLocationState: setLocationState,\n            setAddressIsSearchResult: setAddressIsSearchResult,\n            handleSetLocationResult: handleSetLocationResult\n        }\n    }\n\n    const showPrivacy =\n        !mode.view || (Object.keys(state).length !== 0 && state.isPublic)\n    const regularView = !mode.view || state.upload === 'False'\n\n    const componentsRegView = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: showPrivacy ? Privacy : null, name: 'isPublic' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        {\n            comp:\n                (mode.view && state.upload === 'False') ||\n                state.upload === 'undefined'\n                    ? null\n                    : Images,\n            name: 'files'\n        }\n    ]\n\n    const componentsNonRegView = [\n        { comp: Name, name: 'name' },\n        { comp: State, name: 'state' },\n        { comp: Admin, name: 'admin' },\n        { comp: Date, name: 'date' },\n        { comp: Description, name: 'description' },\n        { comp: Families, name: 'belongsToFamiliesBools' },\n        { comp: showPrivacy ? Privacy : null, name: 'isPublic' }\n    ]\n\n    const renderingComponents = regularView\n        ? componentsRegView\n        : componentsNonRegView\n\n    if (fetchError) {\n        return <FetchArtefactError />\n    }\n\n    if (((mode.view || mode.edit) && artefactLoading) || creating) {\n        return <Loading />\n    }\n\n    return (\n        <form onSubmit={submitHandler} className={classes.form}>\n            <Grid container className={classes.outerContainer} spacing={1}>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    justify='space-between'\n                    alignItems='center'\n                    spacing={1}\n                >\n                    <Head\n                        isAdmin={isAdmin}\n                        openDelete={() => setDeleteOpen(true)}\n                        noErrors={noErrors}\n                        {...componentProps}\n                    />\n                </Grid>\n\n                {/* \"non-reglar view\" has the image on one side, separate to the other fields */}\n                {!regularView && (\n                    <Grid container item xs={12} sm={6} alignContent='stretch'>\n                        <FieldWrapper\n                            child={Images}\n                            name={'files'}\n                            childProps={componentProps}\n                            editButtonProps={editButtonProps}\n                            classes={classes}\n                        />\n                    </Grid>\n                )}\n\n                {/* \"non-regular view\" puts this entire container beside the photo for large screens  */}\n                <Grid\n                    container\n                    item\n                    xs={12}\n                    sm={regularView ? 12 : 6}\n                    alignContent='stretch'\n                    spacing={1}\n                >\n                    {renderingComponents.map(({ comp, name, widthProps }) => {\n                        if (comp === null) return null\n                        if (!widthProps) {\n                            if (regularView) {\n                                widthProps = { xs: 12, sm: 6 }\n                            } else {\n                                widthProps = { xs: 12 }\n                            }\n                        }\n                        return (\n                            <Grid\n                                container\n                                item\n                                {...widthProps}\n                                key={name}\n                                alignContent='stretch'\n                                padding={1}\n                            >\n                                <FieldWrapper\n                                    key={comp}\n                                    child={comp}\n                                    name={name}\n                                    childProps={componentProps}\n                                    editButtonProps={editButtonProps}\n                                    classes={classes}\n                                />\n                            </Grid>\n                        )\n                    })}\n                </Grid>\n\n                {/* if viewing only show map if the artefact has an address */}\n                {(!mode.view || state.address) && (\n                    <Grid item xs={12}>\n                        <FieldWrapper\n                            child={Address}\n                            name='address'\n                            childProps={addressProps}\n                            editButtonProps={editButtonProps}\n                            classes={classes}\n                        />\n                    </Grid>\n                )}\n\n                {mode.create && (\n                    <Grid item xs={12} md={12}>\n                        <CreateButton noErrors={noErrors} fullWidth />\n                    </Grid>\n                )}\n\n                <SuccessSnackbar\n                    open={snackbarOpen}\n                    setOpen={setSnackbarOpen}\n                    viewArtefact={pushViewArtefactURL}\n                    classes={classes}\n                    id={artefact ? artefact.id : '-1'}\n                />\n\n                <DeleteDialog\n                    open={deleteOpen}\n                    setOpen={setDeleteOpen}\n                    deleteArtefact={deleteArtefact}\n                    artefact={artefact}\n                />\n\n                <HelpDialog\n                    open={props.helpOpen}\n                    setOpen={props.setHelpOpen}\n                    content={HelpContent}\n                    mode={mode}\n                />\n            </Grid>\n        </form>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid\n                container\n                spacing={0}\n                alignItems='flex-start'\n                justify='center'\n                style={{ minHeight: '80vh' }}\n            >\n                <Grid item xs={11} md={9}>\n                    <CssBaseline />\n                    <ArtefactView {...props} />\n                </Grid>\n            </Grid>\n        </MuiPickersUtilsProvider>\n    )\n}\n\nexport default withRouter(Wrapped)\n","/**\n * @summary Component leveraging the ArtefactView component in create mode\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:14:20\n */\n\nimport React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","/**\n * @summary Component leveraging the ArtefactView component in view mode\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:14:39\n */\n\nimport React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","/**\n * @summary Renders the artefacts a user is admin of in a grid of artefact cards\n * @author Zane Duffield, Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:15:36\n */\n\nimport React, { useState, Fragment } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Grid, Typography, Container } from '@material-ui/core'\nimport {\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Paper,\n    Link\n} from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading, HelpDialog } from '../../components'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: theme.spacing(3)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery {\n        me {\n            artefactAdministratorOf {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                        admin {\n                            username\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst HelpContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Here you can view all of the artefacts which you are an admin\n                of.\n            </DialogContentText>\n            <DialogContentText>\n                Click view to see more about the artefact or to edit it.\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nexport default function ManageArtefactsView(props) {\n    const classes = useStyles()\n    const [state, setState] = useState({ loading: true })\n\n    useQuery(LIST_OF_ARTEFACTS, {\n        variables: {},\n        onCompleted: data =>\n            setState({\n                artefactEdges: data.me.artefactAdministratorOf.edges,\n                loading: false\n            }),\n        onError: errors => console.log(errors),\n        fetchPolicy: 'cache-and-network'\n    })\n\n    return (\n        <Container>\n            <CssBaseline />\n            <Grid\n                container\n                spacing={2}\n                justify='center'\n                className={classes.container}\n            >\n                <Grid item xs={12}>\n                    <Typography variant='h4' align='center'>\n                        Manage Artefacts\n                    </Typography>\n                    <Typography variant='subtitle1' align='center'>\n                        Here you can view all the artefacts you are an admin of\n                    </Typography>\n                </Grid>\n                {state.loading ? (\n                    <Loading />\n                ) : state.artefactEdges.length !== 0 ? (\n                    state.artefactEdges.map(edge => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={6}\n                            md={4}\n                            lg={3}\n                            key={edge.node.id}\n                        >\n                            <ArtefactCard artefact={edge.node} />\n                        </Grid>\n                    ))\n                ) : (\n                    <Paper\n                        className={classes.paper}\n                        style={{\n                            marginTop: 15,\n                            padding: '6px'\n                        }}\n                    >\n                        You are not managing any artefacts, click\n                        <Link\n                            component={RouterLink}\n                            to='/artefacts/create'\n                            color='secondary'\n                        >\n                            {' here '}\n                        </Link>\n                        to create one.\n                    </Paper>\n                )}\n            </Grid>\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={HelpContent}\n            />\n        </Container>\n    )\n}\n","/**\n * @summary Component leveraging the ArtefactView component in edit mode\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:14:54\n */\n\nimport React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt='You are lost - Obi Wan'/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","/**\n * Home page consists of:\n *      A summary of the information for the selected family\n *      A select field for the user's families\n *      An input for a familie's join code\n *      A grid displaying the artefacts belonging to the selected family\n *\n * @summary Renders the home page for a user\n * @author Zane Duffield, Kyle Zsembery\n *\n * Last modified  : 2019-10-26 18:21:42\n */\n\nimport React, { useState, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography,\n    Button,\n    TextField,\n    Grid,\n    Paper,\n    Link,\n    MenuItem,\n    Snackbar,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    CssBaseline\n} from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useMutation, useQuery } from '@apollo/react-hooks'\nimport { ArtefactCard, Loading, HelpDialog } from '../components'\nimport { Redirect } from 'react-router-dom'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    },\n    outerContainer: {\n        padding: theme.spacing(2)\n    },\n    card: {\n        alignContent: 'stretch'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        borderRadius: 10\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n    query {\n        me {\n            isMemberOf {\n                id\n                familyName\n                joinCode\n                hasArtefacts {\n                    edges {\n                        node {\n                            id\n                            name\n                            admin {\n                                username\n                            }\n                        }\n                    }\n                }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                    about\n                    hasArtefacts {\n                        edges {\n                            node {\n                                id\n                                name\n                                description\n                                upload\n                                admin {\n                                    username\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst JOIN_FAMILY_MUTATION = gql`\n    mutation JoinFamily($joinCode: String!) {\n        familyJoin(joinCode: $joinCode) {\n            family {\n                familyName\n                familyAdmin {\n                    username\n                }\n            }\n        }\n    }\n`\n\nconst SELECT_FAMILY_MUTATION = gql`\n    mutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n        updateProfile(input: { id: $profileId, selectedFamily: $toFamily }) {\n            id\n            selectedFamily\n        }\n    }\n`\n\nconst HelpContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families in the corner to view their artefacts.\n            </DialogContentText>\n            <DialogContentText>\n                Enter a family's join code in the box underneath to join a\n                family.\n            </DialogContentText>\n            <DialogContentText>\n                The join code can be copied by clicking the button underneath\n                the family name.\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nexport default function UserHomeView(props) {\n    const classes = useStyles()\n    const [formJoinCode, setFormJoinCode] = useState('')\n    const [copied, setCopied] = useState(false)\n    const [joinError, setJoinError] = useState('')\n    const [joined, setJoined] = useState(false)\n\n    // After a new family has been joined, refetch the home info to update it, so the user\n    // Can now see that family in the bar\n    const [joinFamilyMutation] = useMutation(JOIN_FAMILY_MUTATION, {\n        refetchQueries: data => [{ query: HOMEPAGE_INFO }],\n        onError: errors => setJoinError('Enter a valid join code'),\n        onCompleted: data => {\n            setJoinError('')\n            setJoined(true)\n        }\n    })\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error('Enter a valid joinCode')\n        } else if (\n            home_data &&\n            home_data.me.isMemberOf\n                .map(fam => fam.joinCode)\n                .includes(formJoinCode)\n        ) {\n            setJoinError('You are already a member of this family')\n        } else {\n            joinFamilyMutation({ variables: { joinCode: formJoinCode } })\n            setFormJoinCode('')\n        }\n    }\n\n    let { data: home_data, loading: home_data_loading } = useQuery(\n        HOMEPAGE_INFO,\n        {\n            fetchPolicy: 'cache-and-network'\n        }\n    )\n\n    const [selectFamily] = useMutation(SELECT_FAMILY_MUTATION, {\n        refetchQueries: data => [{ query: HOMEPAGE_INFO }]\n    })\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value\n        selectFamily({\n            variables: { profileId: profileId, toFamily: newFamily }\n        })\n    }\n\n    if (home_data_loading) {\n        console.log('home data is loading on refetch')\n        return <Loading />\n    }\n\n    let selectedFamily;\n    let families;\n    let profileId;\n    \n    if (home_data) {\n        selectedFamily = home_data.me.profile.selectedFamily\n        families = home_data.me.isMemberOf\n        profileId = home_data.me.profile.id\n    } else {\n        // Go to logout to remove token which is normally the cause of this error\n        console.error('User data was not defined, but fetched, logging out')\n        return <Redirect to='/logout' />\n    }\n\n    let artefacts = []\n\n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges\n    }\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <Grid container justify='center'>\n                <Grid\n                    item\n                    xs={12}\n                    lg={10}\n                    container\n                    spacing={3}\n                    justify='space-between'\n                    className={classes.outerContainer}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                        sm={7}\n                        container\n                        justify='center'\n                        alignItems='stretch'\n                        spacing={1}\n                        className={classes.paper}\n                    >\n                        {selectedFamily && (\n                            <Fragment>\n                                <Grid item xs={12}>\n                                    <Typography variant='h1'>\n                                        {selectedFamily.familyName}\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Typography variant='subtitle1'>\n                                        {selectedFamily.about}\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <CopyToClipboard\n                                        text={selectedFamily.joinCode}\n                                        onCopy={() => setCopied(true)}\n                                    >\n                                        <Button variant='outlined'>\n                                            Copy family join code\n                                        </Button>\n                                    </CopyToClipboard>\n                                </Grid>\n                            </Fragment>\n                        )}\n\n                        {!selectedFamily && (\n                            <Typography variant='h2'>\n                                Join or Create a Family\n                            </Typography>\n                        )}\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                        sm={5}\n                        md={3}\n                        container\n                        spacing={1}\n                        justify='center'\n                        alignContent='flex-start'\n                    >\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label='Select Family'\n                                variant='outlined'\n                                value={\n                                    selectedFamily ? selectedFamily.id : null\n                                }\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'age',\n                                    autoWidth: true\n                                }}\n                                disabled={families.length <= 1}\n                            >\n                                {families &&\n                                    families.map((item, key) => (\n                                        <MenuItem key={item.id} value={item.id}>\n                                            {item.familyName}\n                                        </MenuItem>\n                                    ))}\n                            </TextField>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                id='joinCodeField'\n                                variant='outlined'\n                                label='Enter join code'\n                                value={formJoinCode}\n                                className={classes.textField}\n                                onChange={e => {\n                                    setJoinError('')\n                                    setFormJoinCode(e.target.value)\n                                }}\n                                InputProps={{\n                                    endAdornment: (\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleJoinFamily}\n                                            className={classes.button}\n                                            size='small'\n                                        >\n                                            Join\n                                        </Button>\n                                    ),\n                                    style: {}\n                                }}\n                                helperText={joinError}\n                                error={!!joinError}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        justify='flex-start'\n                        alignItems='stretch'\n                        spacing={1}\n                        item\n                        xs={12}\n                    >\n                        {artefacts.map((artefact, key) => (\n                            <Grid item xs={12} sm={6} md={4} key={key}>\n                                <ArtefactCard\n                                    artefact={artefact.node}\n                                    className={classes.card}\n                                />\n                            </Grid>\n                        ))}\n                        {artefacts.length === 0 && selectedFamily && (\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    marginTop: 15,\n                                    padding: '6px'\n                                }}\n                            >\n                                This family has no artefacts, click\n                                <Link\n                                    component={RouterLink}\n                                    to='/artefacts/create'\n                                    color='secondary'\n                                >\n                                    {' here '}\n                                </Link>\n                                to create one. Make sure to asign them to this\n                                family\n                            </Paper>\n                        )}\n                        {artefacts.length === 0 && !selectedFamily && (\n                            <Paper\n                                className={classes.paper}\n                                style={{\n                                    marginTop: 15,\n                                    padding: '6px'\n                                }}\n                            >\n                                You are not yet a member of a family. Click\n                                <Link\n                                    component={RouterLink}\n                                    to='/family/create'\n                                    color='secondary'\n                                >\n                                    {' here '}\n                                </Link>\n                                to create one. Or join using a join code.\n                            </Paper>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n            {selectedFamily && (\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}\n                    open={copied}\n                    autoHideDuration={2000}\n                    onClose={() => setCopied(false)}\n                    message={\n                        <span id='message-id'>\n                            Join code copied to clipboard\n                            <br />\n                            {selectedFamily.joinCode}\n                        </span>\n                    }\n                />\n            )}\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={joined}\n                autoHideDuration={2000}\n                onClose={() => setJoined(false)}\n                message={\n                    <span id='message-id'>Joined family successfully</span>\n                }\n            />\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={HelpContent}\n            />\n        </Fragment>\n    )\n}\n","/**\n * Leverages the mapbox APIs via both Map.js and MapAPI.js within ../components\n *\n * @summary Renders an interactive map displaying artefacts of the users families\n * @author Zane Duffield\n *\n * Last modified  : 2019-10-26 18:18:41\n */\n\nimport React, { useState, Fragment } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    MenuItem,\n    TextField,\n    Grid,\n    Paper,\n    Snackbar,\n    SnackbarContent,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport { green } from '@material-ui/core/colors'\n\nimport { Map } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, HelpDialog } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    overlay: {\n        position: 'absolute',\n        top: '70px',\n        right: '5px',\n        // backgroundColor: theme.palette.background.paper,\n        margin: theme.spacing(1),\n        minWidth: 140\n    },\n    paper: {\n        padding: theme.spacing(1),\n        margin: theme.spacing(1),\n        borderRadius: 10\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    success: {\n        backgroundColor: green[600]\n    },\n    icon: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1),\n        fontSize: 20\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center'\n    }\n}))\n\nconst MyDialogContent = () => (\n    <Fragment>\n        <DialogTitle id='help-title'>Help</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                Select from your families to view artefacts from that family as\n                pins on the map.\n            </DialogContentText>\n            <DialogContentText>\n                Only artefacts with a location will be shown.\n            </DialogContentText>\n        </DialogContent>\n\n        <DialogTitle id='help-title'>Map Controls</DialogTitle>\n        <DialogContent>\n            <DialogContentText>Scroll to zoom</DialogContentText>\n            <DialogContentText>Click and drag to move</DialogContentText>\n            <DialogContentText>\n                Click on an artefact to show more information.\n            </DialogContentText>\n        </DialogContent>\n    </Fragment>\n)\n\nconst MapStyles = [\n    { value: 'mapbox://styles/mapbox/streets-v11', name: 'Streets' },\n    { value: 'mapbox://styles/mapbox/satellite-v9', name: 'Satellite' },\n    { value: 'mapbox://styles/mapbox/light-v10', name: 'Light' },\n    { value: 'mapbox://styles/mapbox/dark-v10', name: 'Dark' },\n    {\n        value: 'mapbox://styles/zduffield/ck1q1hwgo2idy1cl3jt3rh1vk',\n        name: 'Ugly'\n    }\n]\n\nfunction MapView(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    var defaultMapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        defaultMapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    var { families, familiesLoading } = props\n\n    // initally query is run with invalid ID\n    const [state, setState] = useState({\n        family: { id: '-1' },\n        defaultMapStyle: defaultMapStyle,\n        mapStyle: defaultMapStyle,\n        selectedArtefact: {}\n    })\n\n    if (state.defaultMapStyle !== defaultMapStyle) {\n        // avoid unnecessary rerender of map\n        if (state.mapStyle !== defaultMapStyle) {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle,\n                mapStyle: defaultMapStyle\n            })\n        } else {\n            setState({\n                ...state,\n                defaultMapStyle: defaultMapStyle\n            })\n        }\n    }\n\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const initMapState = { zoom: [2] }\n    const [mapState, setMapState] = useState(initMapState)\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n    const [errorSnackbar, setErrorSnackbar] = useState({ open: false, msg: '' })\n    const getArtefactMapData = data => {\n        console.log('Query resulted')\n        if (!data || !data.family) return\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                            setErrorSnackbar({\n                                open: true,\n                                msg: 'Error loading artefacts'\n                            })\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center,\n                                initPopupOpen: false\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n        Promise.all(promiseArr).then(result => {\n            setMapArtefacts(result)\n            setSnackbarOpen(true)\n        })\n    }\n\n    useQuery(GET_FAMILY_ARTEFACTS, {\n        variables: { id: state.family.id },\n        onCompleted: getArtefactMapData,\n        onError: error => {\n            if (state.family.id > 0) {\n                setErrorSnackbar({ open: true, msg: 'Error loading family' })\n                console.log(error)\n            }\n        }\n    })\n\n    var artefacts = []\n\n    const handleChange = event => {\n        if (event.target.value === state.family) return\n\n        if (event.target.name === 'family') {\n            setMapArtefacts([])\n        }\n\n        if (event.target.name === 'selectedArtefact') {\n            if (event.target.value !== null) {\n                var newCenter = event.target.value.center\n                if (newCenter === mapState.center) {\n                    newCenter = newCenter.map(coord => 0.99999999 * coord)\n                }\n                setMapState({\n                    center: newCenter\n                })\n                event.target.value.initPopupOpen = true\n            }\n        }\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={10}>\n            <Grid container>\n                <Map\n                    interactive\n                    mapStyle={state.mapStyle}\n                    mapState={mapState}\n                    containerStyle={{\n                        height: '87vh',\n                        width: '100vw',\n                        position: 'relative',\n                        zIndex: 0,\n                        borderRadius: 10\n                    }}\n                    artefacts={mapArtefacts}\n                />\n            </Grid>\n            <Grid\n                container\n                item\n                xs={4}\n                sm={1}\n                className={classes.overlay}\n                justify='flex-end'\n            >\n                {!familiesLoading && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Family'\n                                variant='outlined'\n                                value={state.family || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'family',\n                                    autoWidth: true\n                                }}\n                            >\n                                {families.map(fam => (\n                                    <MenuItem value={fam} key={fam.id}>\n                                        {fam.familyName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <TextField\n                            fullWidth\n                            label='Map Style'\n                            variant='outlined'\n                            value={state.mapStyle}\n                            select\n                            onChange={handleChange}\n                            SelectProps={{\n                                name: 'mapStyle',\n                                autoWidth: true\n                            }}\n                        >\n                            <MenuItem value={defaultMapStyle}>Default</MenuItem>\n                            {MapStyles.map(style => (\n                                <MenuItem value={style.value} key={style.value}>\n                                    {style.name}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n\n                {mapArtefacts.length > 0 && (\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                fullWidth\n                                label='Jump to'\n                                variant='outlined'\n                                value={state.selectedArtefact || {}}\n                                select\n                                onChange={handleChange}\n                                SelectProps={{\n                                    name: 'selectedArtefact',\n                                    autoWidth: true\n                                }}\n                            >\n                                {mapArtefacts.map(artefact => (\n                                    <MenuItem\n                                        value={artefact}\n                                        key={artefact.id}\n                                    >\n                                        {artefact.name}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        </Paper>\n                    </Grid>\n                )}\n            </Grid>\n\n            <HelpDialog\n                open={props.helpOpen}\n                setOpen={props.setHelpOpen}\n                content={MyDialogContent}\n            />\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={snackbarOpen}\n                autoHideDuration={2000}\n                onClose={e => setSnackbarOpen(false)}\n            >\n                <SnackbarContent\n                    className={classes.success}\n                    aria-describedby='success-message-id'\n                    message={\n                        <span\n                            id='success-message-id'\n                            className={classes.message}\n                        >\n                            <CheckCircleIcon className={classes.icon} />\n                            {mapArtefacts.length} Artefacts Loaded\n                        </span>\n                    }\n                />\n            </Snackbar>\n\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left'\n                }}\n                open={errorSnackbar.open}\n                autoHideDuration={2000}\n                onClose={e => setErrorSnackbar({ open: false, msg: '' })}\n            >\n                <SnackbarContent\n                    className={classes.error}\n                    aria-describedby='err-message-id'\n                    message={\n                        <span id='err-message-id' className={classes.message}>\n                            <ErrorIcon className={classes.icon} />\n                            {errorSnackbar.msg}\n                        </span>\n                    }\n                />\n            </Snackbar>\n        </Paper>\n    )\n}\n\nexport default props => <GetFamiliesWrapper {...props} child={MapView} />\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/artefactViews/CreateArtefactView'\nimport DetailView from './views/artefactViews/DetailView'\nimport ManageArtefactsView from './views/artefactViews/ManageArtefactsView'\nimport EditArtefactView from './views/artefactViews/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","/**\n * @summary Configure everything from Apollo and link back to the configurations\n * set in constants\n * @author Kyle Zsembery\n */\n\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\nconst defaultOptions = {\n    watchQuery: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n    query: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all',\n    },\n}\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    defaultOptions: defaultOptions\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}