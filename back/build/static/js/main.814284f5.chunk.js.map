{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/Loading.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","views/LandingPage.js","components/PrivateRoute.js","gqlQueriesMutations.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","views/ArtefactView.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","views/CreateArtefactView.js","views/DetailView.js","views/ManageArtefactsView.js","views/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","VERIFY_TOKEN_MUTATION","gql","Loading","classes","makeStyles","theme","progress","margin","spacing","useStyles","CircularProgress","className","props","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Button","component","RouterLink","to","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","root","flexGrow","menuButton","marginRight","title","MenuAppBar","loggedIn","useTheme","dark","palette","type","AppBar","position","Toolbar","edge","Typography","variant","Link","onToggleDarkTheme","LoggedInBar","username","NotLoggedInBar","localStorage","getItem","setItem","console","log","primary","light","main","contrastText","secondary","setTheme","muiTheme","createMuiTheme","ThemeProvider","newPaletteType","Container","children","LandingPage","Layout","WaitWraper","state","checkAuthenticated","this","setState","localToken","Component","contextType","PrivateRoute","LoggedIn","loggedOut","landingPage","path","rest","render","CREATE_ARTEFACT_MUTATION","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","body","backgroundColor","background","paper","marginTop","display","flexDirection","alignItems","form","width","submit","Login","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","data","a","token","tokenAuth","history","push","_handleError","errors","graphQLErrors","subMessage","message","substring","startsWith","useMutation","onCompleted","onError","login","submitForm","variables","preventDefault","onSubmit","justifyContent","Paper","Grid","container","item","xs","TextField","required","fullWidth","label","autoFocus","onChange","e","target","value","error","FormHelperText","name","PASSWORD_SCHEMA","require","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","i","length","rule","SIGNUP_MUTATION","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","autoComplete","disabled","Logout","textField","padding","textAlign","button","CREATE_FAMILY_MUTATION","DialogTitle","withStyles","closeButton","right","top","grey","disableTypography","DialogContent","MuiDialogContent","CreateFamilyView","familyName","setFamilyName","about","setAbout","joinCode","setJoinCode","setOpen","_completed","familyCreate","family","createFamily","CssBaseline","direction","alignContent","justify","multiline","rows","defaultValue","Dialog","align","card","maxWidth","media","height","ArtefactCard","mediaURI","description","Card","CardActionArea","CardMedia","image","CardContent","zeroMinWidth","gutterBottom","noWrap","CardActions","size","Mapbox","ReactMapboxGl","accessToken","interactive","attributionControl","maxZoom","Map","style","mapStyle","containerStyle","mapState","artefacts","map","artefact","center","showPopup","coordinates","src","alt","offset","bottom","geocodingService","mbxGeocoding","_handleResponse","response","out","features","noResults","results","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","formControl","marginLeft","paperTextWrapper","marginBottom","flexWrap","iconButton","dropzone","minHeight","withRouter","create","edit","view","statesLoading","familiesLoading","artefactLoading","artefactData","isAdmin","admin","artefactStates","families","beingEdited","setBeingEdited","prevValue","setPrevValue","currValue","setCurrValue","snackbarOpen","setSnackbarOpen","prevMapState","locationError","locationState","setLocationState","addressIsSearchResult","setAddressIsSearchResult","queryResults","setQueryResults","Object","keys","belong","belongsToFamilies","val","belongsToFamiliesBools","address","geocodeQuery","errMsg","_pushViewArtefactURL","_creationCompleted","artefactCreate","_handleCreationError","_handleUpdateError","createArtefact","creationErrors","creationLoading","loading","_updateCompleted","updateArtefact","updateErrors","setField","fieldName","prev","handleSetField","famId","cancelEditing","handleUnselectedSearchField","reader","FileReader","onabort","onerror","onload","binaryStr","files","forEach","file","readAsArrayBuffer","famIDs","filter","input","isPublic","saveChange","artefactInput","SaveButton","CancelButton","EditButtons","handleCloseSnackbar","reason","noErrors","dataLoading","sm","FormControl","inputProps","readOnly","select","key","List","subheader","ListSubheader","dense","ListItem","ListItemIcon","Checkbox","checked","tabIndex","ListItemText","initialFiles","dropzoneClass","InputProps","endAdornment","_handleGeocodeQuery","onKeyDown","keyCode","document","getElementById","click","helperText","Popover","undefined","disablePadding","nested","newLocationState","handleSetLocationResult","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","action","close","GetFamiliesWrapper","Child","child","childProps","setFamilies","thisChildProps","useQuery","me","isMemberOf","GetStatesWrapper","setArtefactStates","_saveArtefactStates","statesData","temp","__type","enumValues","desc","GetArtefactWrapper","params","CreateArtefactView","ArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","Error404View","href","overflow","gridList","icon","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","selectedFamily","_homepageInfoCompleted","home_data","called","selectFamily","inputLabel","useRef","profileId","hasArtefacts","GridList","cellHeight","cols","GridListTile","upload","InputLabel","htmlFor","Select","newFamily","toFamily","styles","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","catch","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.814284f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", \n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Loading() {\n    const useStyles = makeStyles(theme => ({\n        progress: {\n            margin: theme.spacing(2)\n        }\n    }))\n\n    const classes = useStyles()\n\n    return <CircularProgress className={classes.progress} />\n}\n\nexport default Loading\n","import React, { useContext } from 'react';\nimport { IconButton, Menu, MenuItem, Button } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport authContext from '../authContext';\nimport { Link as RouterLink } from 'react-router-dom'\n\nexport default props => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const context = useContext(authContext);\n    const open = Boolean(anchorEl);\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handleClose() {\n        setAnchorEl(null);\n    }\n\n    function handleLogout() {\n        context.logout();\n    }\n\n    return (\n        <div>\n            <Button component={RouterLink} to='/family/create' color='inherit'>\n                Create Family\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/manage'\n                color='inherit'\n            >\n                Manage Artefacts\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/create'\n                color='inherit'\n            >\n                Create Artefact\n            </Button>\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n};\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    IconButton,\n    Typography,\n    Toolbar,\n    AppBar\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh';\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Link } from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n    const theme = useTheme()\n    const dark = (theme && theme.palette.type === 'dark')\n    return (\n        <div className={classes.root}>\n            <AppBar position='static'>\n                <Toolbar>\n                    <IconButton\n                        edge='start'\n                        className={classes.menuButton}\n                        color='inherit'\n                        aria-label='menu'\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant='h6' className={classes.title}>\n                        <Link\n                            component={RouterLink}\n                            to='/'\n                            color='inherit'\n                            variant='inherit'\n                            underline='none'\n                        >\n                            Family AR\n                        </Link>\n                    </Typography>\n\n                    <IconButton\n                        edge='start'\n                        className={classes.menuButton}\n                        color='inherit'\n                        aria-label='menu'\n                        onClick={props.onToggleDarkTheme}\n                    >\n                        {!dark ? <Brightness3Icon /> : <BrightnessHighIcon />}\n                    </IconButton>\n\n                    {loggedIn && <LoggedInBar username={username} />}\n                    {!loggedIn && <NotLoggedInBar />}\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Container } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\n\nimport { THEME_TYPE } from '../constants.js'\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)){\n        localStorage.setItem(THEME_TYPE, 'light')\n        console.log(\"here\")\n    }\n\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: {\n                light: '#757ce8',\n                main: '#3f50b5',\n                dark: '#002884',\n                contrastText: '#fff'\n            },\n            secondary: {\n                light: '#ff7961',\n                main: '#f44336',\n                dark: '#ba000d',\n                contrastText: '#000'\n            },\n            type: localStorage.getItem(THEME_TYPE) || 'light'\n        }\n    })\n\n    const toggleDarkTheme = () => {\n        var newPaletteType = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newPaletteType)\n        setTheme({\n            palette: {\n                ...theme.palette,\n                type: newPaletteType\n            }\n        })\n    }\n\n    const muiTheme = createMuiTheme(theme)\n\n    return (\n        <div>\n            <ThemeProvider theme={muiTheme}>\n                <Header onToggleDarkTheme={toggleDarkTheme} />\n                <Container>{props.children}</Container>\n            </ThemeProvider>\n        </div>\n    )\n}\n","import React from 'react'\nimport Layout from '../components/Layout'\n\n// NB: REMOVE THE LAYOUT, THIS SHOULD NOT HAVE THE APP BAR, THIS SHOULD BE EXTRA COOL DESIGNED PAGE\nfunction LandingPage(props) {\n    return (\n        <Layout>\n            This is some cool landing page yo. Welcome!\n            <br />\n            Also, in the future, this page should not have a navigation bar,\n            it'll have cooler design stuff. It only has the nav bar for easier\n            linking to signup / login for now\n        </Layout>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n","import React, { useState, useContext } from 'react'\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper,\n    Container\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\nimport authContext from '../authContext'\nimport { useMutation } from '@apollo/react-hooks'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.background.paper\n        }\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    form: {\n        width: '50%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n        backgroundColor: theme.palette.background.paper\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = useStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        console.log('getting token first in confirm mutation')\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n\n        // this._saveUserData(token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Container justifyContent='center'>\n                <Paper className={classes.paper}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography component='h1' variant='h5'>\n                                Log In\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='username'\n                                label='Username'\n                                autoFocus\n                                onChange={e => setUsername(e.target.value)}\n                                error={invalidCred}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                label='Password'\n                                type='password'\n                                id='password'\n                                onChange={e => setPassword(e.target.value)}\n                                error={invalidCred}\n                            />\n                            {invalidCred && (\n                                <FormHelperText\n                                    id='password'\n                                    error={invalidCred}\n                                >\n                                    Please enter valid credentials\n                                </FormHelperText>\n                            )}\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Button\n                                name='submit'\n                                label='Submit'\n                                type='submit'\n                                fullWidth\n                                variant='contained'\n                                color='primary'\n                            >\n                                Log In\n                            </Button>\n                            {unknownError && (\n                                <FormHelperText\n                                    id='password'\n                                    error={unknownError}\n                                >\n                                    Unknown Error Occurred\n                                </FormHelperText>\n                            )}\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Grid item>\n                                <Link component={RouterLink} to='/signup'>\n                                    Need an account? Sign up\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Container>\n        </form>\n    )\n}\n\nexport default Login\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport Link from '@material-ui/core/Link'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Layout from '../components/Layout'\n\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\nimport { Paper } from '@material-ui/core'\n\nconst SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.background.paper\n        }\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    form: {\n        width: '50%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = useStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    return (\n        <Paper className={classes.paper}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography component='h1' variant='h5'>\n                            Sign up\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            autoComplete='username'\n                            name='username'\n                            variant='outlined'\n                            required\n                            fullWidth\n                            id='username'\n                            label='Username'\n                            autoFocus\n                            error={usernameIsTaken}\n                            onChange={e => setUsername(e.target.value)}\n                        />\n                        {usernameIsTaken && (\n                            <FormHelperText\n                                id='username'\n                                error={usernameIsTaken}\n                            >\n                                Username is taken\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            variant='outlined'\n                            required\n                            fullWidth\n                            id='email'\n                            label='Email Address'\n                            name='email'\n                            autoComplete='email'\n                            type='email'\n                            error={\n                                emailIsTaken ||\n                                (!!email && !emailValidator.validate(email))\n                            }\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        {!!email && !emailValidator.validate(email) && (\n                            <FormHelperText\n                                id='email'\n                                error={!emailValidator.validate(email)}\n                            >\n                                Email is invalid\n                            </FormHelperText>\n                        )}\n                        {emailIsTaken && (\n                            <FormHelperText id='email' error={emailIsTaken}>\n                                Email is taken\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            variant='outlined'\n                            required\n                            fullWidth\n                            name='password'\n                            label='Password'\n                            type='password'\n                            id='password'\n                            autoComplete='current-password'\n                            onChange={e => changePassword(e.target.value)}\n                            error={errorPassword}\n                        />\n                        {errorPassword && (\n                            <FormHelperText id='password' error={errorPassword}>\n                                {parseFailedRules(failedPassRules)}\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            variant='outlined'\n                            required\n                            fullWidth\n                            name='confirmPassword'\n                            label='Confirm Password'\n                            type='password'\n                            id='confirmPassword'\n                            autoComplete='current-password'\n                            onChange={e => setConfirmPassword(e.target.value)}\n                            error={errorConfirmPassword}\n                        />\n                        {errorConfirmPassword && (\n                            <FormHelperText\n                                id='confirmPassword'\n                                error={errorConfirmPassword}\n                            >\n                                Passwords must match\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Button\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            fullWidth\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText error={unknownError}>\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Grid item>\n                            <Link component={RouterLink} to='/login'>\n                                Already have an account? Log in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Signup\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/react-hooks'\nimport Dialog from '@material-ui/core/Dialog'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport { IconButton } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { Paper } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nconst CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`\n\nconst styles = theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2)\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500]\n    }\n})\n\nconst DialogTitle = withStyles(styles)(props => {\n    const { children, classes, onClose } = props\n    return (\n        <MuiDialogTitle disableTypography className={classes.root}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label='close'\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    )\n})\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        padding: theme.spacing(2)\n    }\n}))(MuiDialogContent)\n\nexport default function CreateFamilyView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        console.log(data)\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('Family name: ' + familyName)\n        console.log('About: ' + about)\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n    }\n\n    return (\n        <Layout>\n            <CssBaseline />\n            <form className={classes.form} onSubmit={submitForm}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction='row'\n                    alignItems='stretch'\n                    alignContent='stretch'\n                    justify='space-evenly'\n                >\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <Typography variant='h4'>Create Family</Typography>\n                            <Typography variant='subtitle1'>\n                                Families are how you manage your artefacts. We\n                                recognise there is often complex overlap between\n                                families. That's why you can create and be a\n                                part of several families, so you can separate\n                                which of the artefacts you manage belong to\n                                which family.\n                            </Typography>\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                className={classes.textField}\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                className={classes.textField}\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Paper className={classes.paper}>\n                            <TextField\n                                className={classes.textField}\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e => console.log('hello')}\n                            />\n                        </Paper>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Button\n                            name='create'\n                            label='Create'\n                            type='submit'\n                            fullWidth\n                            variant='contained'\n                            color='primary'\n                        >\n                            Create\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <DialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </DialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </Layout>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        maxWidth: 345\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 140\n    }\n}))\n\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ mediaURI, title, description, id }) {\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.card}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={\"https://img1.cgtrader.com/items/995815/731bda0123/antique-old-clock-3d-model-low-poly-animated-obj-3ds-fbx-blend-dae-mtl.jpg\"}\n                    title={title}\n                />\n                <CardContent>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {title}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    size='small'\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                <Button\n                    size='small'\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment } from 'react'\nimport ReactMapboxGl, { Layer, Feature, Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\n\nconst Mapbox = ReactMapboxGl({\n    accessToken: MY_ACCESS_TOKEN,\n    interactive: true,\n    attributionControl: false,\n    maxZoom: 18\n})\n\nexport default function Map(props) {\n    return (\n        <Mapbox\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n        >\n            {props.artefacts.map(artefact => {\n                var { center, showPopup, ...rest } = artefact\n\n                if (!center || !center.length){\n                    return\n                }\n                return (\n                    <Fragment>\n                        <Marker coordinates={center}>\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {showPopup && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                            >\n                                <ArtefactCard {...rest} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </Mapbox>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            const bbox = [\n                [bboxCoords[0], bboxCoords[1]],\n                [bboxCoords[2], bboxCoords[3]]\n            ]\n            result.mapState.fitBounds = bbox\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default (query, types) => {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n","import React, { useContext, useState, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Grid,\n    Typography,\n    MenuItem,\n    Snackbar,\n    IconButton,\n    FormControl,\n    Popover,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListSubheader,\n    ListItemText,\n    Collapse,\n    Checkbox,\n    Paper,\n    FormHelperText,\n    ClickAwayListener,\n    Popper\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useTheme } from '@material-ui/styles'\nimport { Loading, Map, geocodeQuery } from '../components'\nimport authContext from '../authContext'\nimport { useMutation } from '@apollo/react-hooks'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport {\n    CREATE_ARTEFACT_MUTATION,\n    UPDATE_ARTEFACT_MUTATION\n} from '../gqlQueriesMutations'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center'\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'center'\n    },\n    title: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper\n    },\n    paperTextWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        height: '100%',\n        alignItems: 'center'\n    },\n    button: {\n        height: '100%'\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '80px'\n    }\n}))\n\nfunction ArtefactView(props) {\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    // get the mode\n    var { create, edit, view } = props\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    if (!create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n    var { artefactStates, families } = props\n\n    // only allow admins to see the edit page\n    if (!isAdmin && edit) {\n        edit = false\n        view = true\n    }\n\n    const theme = useTheme()\n    const classes = useStyles()\n\n    const [beingEdited, setBeingEdited] = useState('')\n    const [prevValue, setPrevValue] = useState({})\n    const [currValue, setCurrValue] = useState({})\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        locationError: ''\n    })\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n    const [queryResults, setQueryResults] = useState([])\n\n    const [state, setState] = useState({})\n\n    if (\n        (edit || view) &&\n        !artefactLoading &&\n        Object.keys(artefact).length !== 0 &&\n        Object.keys(state).length === 0\n    ) {\n        var belong = {}\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n\n        // run geocode query here and process result\n        // if the query is blank an empty promise is immediately returned\n        console.log('Query run with argument: ', artefact.address)\n        geocodeQuery(artefact.address).then(response => {\n            if (artefact.address) {\n                var address = ''\n                var errMsg = ''\n                console.log('response: ', response)\n                if (response.error) {\n                    errMsg = 'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                } else if (response.noResults) {\n                    errMsg = 'No results'\n                }\n\n                if (errMsg) {\n                    setLocationState({\n                        ...locationState,\n                        locationError: errMsg\n                    })\n                } else {\n                    setLocationState({\n                        mapState: response.results[0].mapState,\n                        locationError: ''\n                    })\n                    address = response.results[0].placeName\n                }\n                setAddressIsSearchResult(artefact.address === address)\n            }\n        })\n    }\n\n    if (create && families && !state.belongsToFamiliesBools) {\n        var belong = {}\n        families.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n    }\n\n    const _pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n    }\n\n    const _creationCompleted = async data => {\n        var id = data.artefactCreate.artefact.id\n        _pushViewArtefactURL(id)\n    }\n\n    const _handleCreationError = async errors => {\n        // TO DO\n        console.log('Creation errors occurred:', errors)\n    }\n\n    const _handleUpdateError = async errors => {\n        console.log('update error occured: ', errors)\n    }\n\n    const [\n        createArtefact,\n        { error: creationErrors, loading: creationLoading }\n    ] = useMutation(CREATE_ARTEFACT_MUTATION, {\n        onCompleted: _creationCompleted,\n        onError: _handleCreationError\n    })\n\n    const _updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: _updateCompleted,\n            onError: _handleUpdateError\n        }\n    )\n\n    const setField = (fieldName, value) => {\n        var prev = state[fieldName]\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n\n        if (edit && beingEdited !== fieldName) {\n            setPrevValue(prev)\n        }\n    }\n\n    const handleSetField = (fieldName, value, famId) => {\n        if (fieldName === 'belongsToFamiliesBools') {\n            value = {\n                ...state.belongsToFamiliesBools,\n                [famId]: value\n            }\n        }\n\n        setField(fieldName, value)\n        setCurrValue(value)\n        if (edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n        }\n    }\n\n    const _handleGeocodeQuery = query => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query, ['place', 'address']).then(response => {\n                var errMsg = ''\n                if (response.error) {\n                    errMsg = 'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n                if (response.noErrors) errMsg = 'No results'\n                if (errMsg) {\n                    setLocationState({\n                        ...locationState,\n                        locationError: errMsg\n                    })\n                } else {\n                    setQueryResults(response.results)\n                }\n                return response\n            })\n        }\n    }\n\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            locationError: ''\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n        setQueryResults([])\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            prevMapState: {}\n        })\n        setQueryResults([])\n    }\n\n    const cancelEditing = () => {\n        setField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            locationError: 'Select a search result or clear search field'\n        })\n    }\n\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        // read image files\n        // TO DO\n        const reader = new FileReader()\n\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = () => {\n            // Do whatever you want with the file contents\n            const binaryStr = reader.result\n            console.log(binaryStr)\n        }\n\n        if (state.files) {\n            state.files.forEach(file => reader.readAsArrayBuffer(file))\n        }\n\n        var famIDs\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        } else {\n            famIDs = []\n        }\n\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        console.log('Input to GQL creation mutation:', input)\n\n        createArtefact({\n            variables: input\n        })\n    }\n\n    const saveChange = async event => {\n        if (edit) {\n            var input = {}\n\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            }\n\n            if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else {\n                input[beingEdited] = currValue\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    function SaveButton() {\n        return (\n            <Button\n                variant='contained'\n                color='primary'\n                type='submit'\n                className={classes.button}\n                onClick={saveChange}\n                fullWidth\n                padding={1}\n            >\n                Save\n            </Button>\n        )\n    }\n\n    function CancelButton() {\n        return (\n            <Button\n                variant='contained'\n                color='default'\n                className={classes.button}\n                onClick={cancelEditing}\n                fullWidth\n                padding={1}\n            >\n                Cancel\n            </Button>\n        )\n    }\n\n    function EditButtons() {\n        return (\n            <Grid\n                container\n                justify='space-evenly'\n                alignItems='center'\n                spacing={1}\n                style={{ marginTop: 1 }}\n            >\n                <Grid item xs={6}>\n                    <SaveButton />\n                </Grid>\n                <Grid item xs={6}>\n                    <CancelButton />\n                </Grid>\n\n                {updateErrors && (\n                    <Grid item xs={12}>\n                        <FormHelperText error>\n                            Error Updating Artefact\n                        </FormHelperText>\n                    </Grid>\n                )}\n            </Grid>\n        )\n    }\n\n    function handleCloseSnackbar(event, reason) {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        setSnackbarOpen(false)\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n        create ? submitForm(e) : saveChange(e)\n    }\n\n    if (edit && dataLoading) {\n        return <Loading />\n    }\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <form onSubmit={submitHandler} className={classes.form}>\n                <Grid\n                    container\n                    spacing={1}\n                    alignItems='stretch'\n                    alignContent='stretch'\n                    justify='space-evenly'\n                >\n                    <Grid item xs={12} container justify='center'>\n                        <Grid item xs={12} sm={8}>\n                            <Typography variant='h4' className={classes.title}>\n                                {create && 'Create'} {edit && 'Edit'}{' '}\n                                {view && 'View'} Artefact\n                            </Typography>\n                            {!view && (\n                                <Typography\n                                    variant='subtitle1'\n                                    className={classes.title}\n                                >\n                                    {create &&\n                                        'Artefacts are belongings of the family, enter as much or as little detail as you like'}\n                                    {edit && 'Click to start editing'}\n                                </Typography>\n                            )}\n                        </Grid>\n                    </Grid>\n                    {/* Left Pane */}\n                    <Grid item xs={12} sm={6} container spacing={1}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperTextWrapper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        // style={{ height: '100%' }}\n                                        // InputProps={{ style: {height: '100%'} }}\n                                        id='artefact-name'\n                                        label='Artefact name'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={state.name || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'name',\n                                                e.target.value\n                                            )\n                                        }\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'name'\n                                        }\n                                    />\n\n                                    {edit && beingEdited === 'name' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperTextWrapper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='state'\n                                        label='Artefact State'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={state.state || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'state',\n                                                e.target.value\n                                            )\n                                        }\n                                        select\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'state'\n                                        }\n                                    >\n                                        {Object.keys(artefactStates).map(\n                                            value => {\n                                                return (\n                                                    <MenuItem\n                                                        value={\n                                                            props\n                                                                .artefactStates[\n                                                                value\n                                                            ]\n                                                        }\n                                                        key={value}\n                                                    >\n                                                        {value}\n                                                    </MenuItem>\n                                                )\n                                            }\n                                        )}\n                                    </TextField>\n\n                                    {edit && beingEdited === 'state' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperTextWrapper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        multiline\n                                        rows={6}\n                                        value={state.description || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'description',\n                                                e.target.value\n                                            )\n                                        }\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'description'\n                                        }\n                                    />\n\n                                    {edit && beingEdited === 'description' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperTextWrapper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='artefact-admin'\n                                        label='Artefact Admin'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={\n                                            state.admin &&\n                                            Object.keys(state.admin).length !==\n                                                0\n                                                ? state.admin.username\n                                                : context.user.username\n                                        }\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            console.log(\n                                                'admin field was changed'\n                                            )\n                                        }\n                                        disabled\n                                    />\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    {/* Right Pane */}\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        spacing={1}\n                        alignContent='stretch'\n                    >\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <List\n                                        subheader={\n                                            <ListSubheader component='div'>\n                                                Privacy\n                                            </ListSubheader>\n                                        }\n                                        dense\n                                    >\n                                        <ListItem\n                                            disabled={\n                                                edit &&\n                                                !!beingEdited &&\n                                                beingEdited !== 'isPublic'\n                                            }\n                                        >\n                                            {!view && (\n                                                <ListItemIcon>\n                                                    <Checkbox\n                                                        edge='start'\n                                                        checked={\n                                                            state.isPublic ||\n                                                            false\n                                                        }\n                                                        tabIndex={-1}\n                                                        onClick={e =>\n                                                            handleSetField(\n                                                                'isPublic',\n                                                                e.target.checked\n                                                            )\n                                                        }\n                                                    />\n                                                </ListItemIcon>\n                                            )}\n                                            <ListItemText primary={'Public'} />\n                                        </ListItem>\n                                    </List>\n\n                                    {edit && beingEdited === 'isPublic' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <List\n                                        subheader={\n                                            <ListSubheader component='div'>\n                                                {!view\n                                                    ? 'Select which of your families the artefact belongs to'\n                                                    : 'Belongs to'}\n                                            </ListSubheader>\n                                        }\n                                    >\n                                        {families.map(family => {\n                                            if (!state.belongsToFamiliesBools) {\n                                                return\n                                            }\n\n                                            if (\n                                                state.belongsToFamiliesBools &&\n                                                !state.belongsToFamiliesBools[\n                                                    family.id\n                                                ]\n                                            ) {\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] = false\n                                            }\n\n                                            if (\n                                                !view ||\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ]\n                                            ) {\n                                                return (\n                                                    <ListItem\n                                                        key={family.id}\n                                                        dense\n                                                        disabled={\n                                                            edit &&\n                                                            !!beingEdited &&\n                                                            beingEdited !==\n                                                                'belongsToFamiliesBools'\n                                                        }\n                                                    >\n                                                        {!view && (\n                                                            <ListItemIcon>\n                                                                <Checkbox\n                                                                    edge='start'\n                                                                    checked={\n                                                                        (state.belongsToFamiliesBools &&\n                                                                            state\n                                                                                .belongsToFamiliesBools[\n                                                                                family\n                                                                                    .id\n                                                                            ]) ||\n                                                                        false\n                                                                    }\n                                                                    onClick={e =>\n                                                                        handleSetField(\n                                                                            'belongsToFamiliesBools',\n                                                                            e\n                                                                                .target\n                                                                                .checked,\n                                                                            family.id\n                                                                        )\n                                                                    }\n                                                                    tabIndex={\n                                                                        -1\n                                                                    }\n                                                                />\n                                                            </ListItemIcon>\n                                                        )}\n                                                        <ListItemText\n                                                            primary={\n                                                                family.familyName\n                                                            }\n                                                        />\n                                                    </ListItem>\n                                                )\n                                            }\n                                        })}\n                                    </List>\n\n                                    {edit &&\n                                        beingEdited ===\n                                            'belongsToFamiliesBools' && (\n                                            <EditButtons />\n                                        )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        {/* TO DO: show images in different way on view page */}\n                        {!view && (\n                            <Grid item xs={12}>\n                                <Paper className={classes.paper}>\n                                    <DropzoneArea\n                                        initialFiles={state.files || []}\n                                        onChange={files =>\n                                            handleSetField('files', files)\n                                        }\n                                        dropzoneClass={classes.dropzone}\n                                    />\n                                </Paper>\n                            </Grid>\n                        )}\n                    </Grid>\n\n                    <Grid container item xs={12} spacing={1}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperTextWrapper}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='address'\n                                        label='Address'\n                                        variant='outlined'\n                                        fullWidth\n                                        value={state.address || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e => {\n                                            // setState({\n                                            //     ...state,\n                                            //     address: e.target.value\n                                            // })\n                                            handleSetField(\n                                                'address',\n                                                e.target.value\n                                            )\n                                            if (e.target.value) {\n                                                setAddressIsSearchResult(false)\n                                            } else {\n                                                // allow blank address\n                                                setAddressIsSearchResult(true)\n                                            }\n                                        }}\n                                        error={!!locationState.locationError}\n                                        InputProps={{\n                                            endAdornment: !view && (\n                                                <IconButton\n                                                    className={\n                                                        classes.iconButton\n                                                    }\n                                                    aria-label='search'\n                                                    id='search'\n                                                    onClick={e =>\n                                                        _handleGeocodeQuery(\n                                                            state.address\n                                                        )\n                                                    }\n                                                >\n                                                    <SearchIcon />\n                                                </IconButton>\n                                            ),\n                                            style: { marginBottom: 3 }\n                                        }}\n                                        onKeyDown={e => {\n                                            if (e.keyCode === 13 && !view) {\n                                                e.preventDefault()\n                                                document\n                                                    .getElementById('search')\n                                                    .click()\n                                            }\n                                        }}\n                                        helperText={locationState.locationError}\n                                    />\n                                    <Popover\n                                        id={\n                                            queryResults.length\n                                                ? 'results'\n                                                : undefined\n                                        }\n                                        open={!!queryResults.length}\n                                        anchorEl={document.getElementById(\n                                            'address'\n                                        )}\n                                        onClose={e => setQueryResults([])}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'left'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'left'\n                                        }}\n                                    >\n                                        <List component='div' disablePadding>\n                                            {queryResults.map(result => (\n                                                <ListItem\n                                                    key={result.placeName}\n                                                    button\n                                                    className={classes.nested}\n                                                    onClick={e =>\n                                                        handleSetLocationResult(\n                                                            result\n                                                        )\n                                                    }\n                                                >\n                                                    <ListItemText\n                                                        primary={\n                                                            result.placeName\n                                                        }\n                                                    />\n                                                </ListItem>\n                                            ))}\n                                        </List>\n                                    </Popover>\n\n                                    {edit && beingEdited === 'address' && (\n                                        <EditButtons />\n                                    )}\n\n                                    <Grid container style={{ marginTop: 1 }}>\n                                        <Map\n                                            className={classes.map}\n                                            mapStyle={mapStyle}\n                                            mapState={locationState.mapState}\n                                            containerStyle={{\n                                                height: '60vh',\n                                                width: '100vw'\n                                            }}\n                                            artefacts={[\n                                                {\n                                                    center:\n                                                        locationState.mapState\n                                                            .center\n                                                }\n                                            ]}\n                                        />\n                                    </Grid>\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    {create && (\n                        <Grid item xs={6}>\n                            <Button\n                                name='create'\n                                label='Create'\n                                type='submit'\n                                fullWidth\n                                variant='contained'\n                                color='primary'\n                                disabled={creationLoading}\n                            >\n                                Create\n                            </Button>\n                            {!noErrors && (\n                                <FormHelperText error={!noErrors}>\n                                    Unknown Error Occurred\n                                </FormHelperText>\n                            )}\n                        </Grid>\n                    )}\n                </Grid>\n\n                <ClickAwayListener onClickAway={handleCloseSnackbar}>\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left'\n                        }}\n                        open={snackbarOpen}\n                        autoHideDuration={2000}\n                        onClose={handleCloseSnackbar}\n                        ContentProps={{\n                            'aria-describedby': 'message-id'\n                        }}\n                        message={<span id='message-id'>Edit successful</span>}\n                        action={[\n                            <Button\n                                key='view'\n                                color='secondary'\n                                size='small'\n                                onClick={e => {\n                                    _pushViewArtefactURL(artefact.id) &&\n                                        handleCloseSnackbar(e)\n                                }}\n                            >\n                                VIEW\n                            </Button>,\n                            <IconButton\n                                key='close'\n                                aria-label='close'\n                                color='inherit'\n                                onClick={handleCloseSnackbar}\n                                className={classes.close}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        ]}\n                    />\n                </ClickAwayListener>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default withRouter(ArtefactView)\n","import React, { useState } from 'react'\nimport ArtefactView from '../views/ArtefactView'\nimport { Layout } from '.'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport ArtefactView from '../views/ArtefactView'\nimport { Layout } from '../components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState, useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\nimport authContext from '../authContext'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React from 'react'\nimport { Layout } from '../components'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <Layout>\n            <GetStatesWrapper\n                {...props}\n                {...childProps}\n                child={GetFamiliesWrapper}\n            />\n        </Layout>\n    )\n}\n","import React from 'react'\nimport { Layout } from '../components'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <Layout>\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n        </Layout>\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { CssBaseline } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport ArtefactCard from '../components/ArtefactCard'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery($first: Int!) {\n        me {\n            artefactAdministratorOf(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n    const tempImgURI =\n        'https://assets.pernod-ricard.com/nz/media_images/test.jpg?hUV74FvXQrWUBk1P2.fBvzoBUmjZ1wct'\n\n    const classes = useStyles()\n    const numArtefactsFetched = 10\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        variables: {\n            first: numArtefactsFetched\n        },\n        onCompleted: data => SetArtefactEdges(data.me.artefactAdministratorOf.edges)\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Grid container justify='center' spacing={2}>\n                        {artefactEdges.map(edge => (\n                            <Grid item key={edge.node.id}>\n                                <ArtefactCard\n                                    mediaURI={tempImgURI}\n                                    title={edge.node.name}\n                                    description={edge.node.description}\n                                    id={edge.node.id}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport { Layout } from '../components'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n        <Layout>\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n        </Layout>\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt=''/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Typography, CssBaseline, Button, TextField, Grid,\nFormControl } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport ArtefactCard from '../components/ArtefactCard';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n        width: '80%',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n        query {\n            me {\n            isMemberOf {\n            id\n            familyName\n            joinCode\n            hasArtefacts {\n                edges {\n                node {\n                    id\n                    name\n                    admin {\n                    username\n                    }\n                }\n                }\n            }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                        hasArtefacts {\n                            edges {\n                                node {\n                                    id\n                                    name\n                                    description\n                                    upload\n                                }\n                            }\n                        }\n                    }\n                }\n        }\n    }`\n\nconst JOIN_FAMILY_MUTATION = gql`\nmutation JoinFamily($joinCode: String!) {\n  familyJoin(joinCode: $joinCode) {\n    family {\n      familyName\n      familyAdmin {\n          username\n      }\n    }\n  }\n}`\n\nconst SELECT_FAMILY_MUTATION = gql`\nmutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n    updateProfile(input: {\n        id: $profileId,\n        selectedFamily: $toFamily\n    }) {\n        id\n        selectedFamily\n    }\n}`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n    const [formJoinCode, setFormJoinCode] = useState(\"\")\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error(\"Enter a valid joinCode\");\n            return;\n        }\n\n        joinFamilyMutation({variables: {joinCode: formJoinCode }})\n    }\n\n    const _homepageInfoCompleted = (data) => {\n        const selectedFamily = data.me.profile.selectedFamily\n        if (!selectedFamily) {\n            console.error(\"User has not selected a family\");\n            return;\n        }\n    }\n\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(HOMEPAGE_INFO, {\n        onCompleted: (data) => {\n            _homepageInfoCompleted(data)\n        }\n    })\n\n\n    const [selectFamily, { data: mutation_data }] = useMutation(SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const inputLabel = React.useRef(null);\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value;\n        selectFamily({ variables: { profileId: profileId, toFamily: newFamily } })\n    };\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    const selectedFamily = home_data.me.profile.selectedFamily\n    const families = home_data.me.isMemberOf;\n    const profileId = home_data.me.profile.id;\n    let artefacts = []\n    \n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges;\n    }\n    \n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    {selectedFamily && (\n                        <div>\n                        <Typography variant=\"h1\">{selectedFamily.familyName}</Typography>\n                        <Typography variant=\"h5\">Join code: {selectedFamily.joinCode}</Typography>\n                        </div>\n                    )}\n                    {!selectedFamily && (\n                        <Typography variant=\"h2\">Join and/or Select a Family</Typography>\n                    )}\n                    <h4>Your username is (temp, for testing): {username}</h4>\n                    <GridList cellHeight={\"auto\"} className={classes.gridList} cols={2}>\n                        {artefacts.map((artefact, key) => (\n                            <GridListTile\n                                key={key}>\n                                <ArtefactCard\n                                    key={key}\n                                    mediaURI={artefact.node.upload}\n                                    title={artefact.node.name}\n                                    description={artefact.node.description}\n                                    id={artefact.node.id} />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={3}>\n                    <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                        Select Family\n                    </InputLabel>\n                    <Select\n                        variant='outlined'\n                        fullWidth\n                        value={selectedFamily ? selectedFamily.id : null}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-simple',\n                            styles: { padding: '4px' }\n                        }}\n                        padding=\"5px\"\n                    >\n                        {families && (families.map((item, key) =>\n                            <MenuItem\n                                key={item.id}\n                                value={item.id}\n                            >\n                                {item.familyName}\n                            </MenuItem>\n                        )\n                        )}\n                    </Select>\n                    <FormControl\n                    fullWidth\n                    >\n                    <TextField \n                        id=\"joinCodeField\"\n                        label=\"Join a family\"\n                        value={formJoinCode}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        onChange={e => setFormJoinCode(e.target.value)}\n                        fullWidth\n                    />\n                    <Button\n                        variant=\"outlined\" \n                        onClick={handleJoinFamily}\n                    >\n                        Join Family\n                    </Button>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\nimport Layout from './components/Layout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/CreateArtefactView'\nimport DetailView from './views/DetailView'\nimport ManageArtefactsView from './views/ManageArtefactsView'\nimport EditArtefactView from './views/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route\n                        exact\n                        path='/login/'\n                        render={props => (\n                            <Layout>\n                                <Login {...props} />\n                            </Layout>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path='/signup/'\n                        render={props => (\n                            <Layout>\n                                <Signup {...props} />\n                            </Layout>\n                        )}\n                    />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}