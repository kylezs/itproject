{"version":3,"sources":["serviceWorker.js","authContext.js","constants.js","components/Auth.js","components/Loading.js","components/LoggedInBar.js","components/NotLoggedInBar.js","components/Header.js","components/Layout.js","views/LandingPage.js","components/PrivateRoute.js","components/ArtefactCard.js","components/Map.js","components/MapAPI.js","gqlQueriesMutations.js","views/ArtefactView.js","components/GetFamiliesWrapper.js","components/GetStatesWrapper.js","components/GetArtefactWrapper.js","components/LoginSignupFormStyling.js","components/ArtefactFamilyFormStyling.js","views/LoginView.js","components/passwordValidator.js","views/SignupView.js","components/Logout.js","views/CreateFamilyView.js","views/CreateArtefactView.js","views/DetailView.js","views/ManageArtefactsView.js","views/EditArtefactView.js","views/Error404View.js","views/UserHomeView.js","views/MapView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","authContext","createContext","authenticated","user","authToken","initiateLogin","handleAuthentication","logout","AuthProvider","Provider","AUTH_TOKEN","Consumer","USERNAME_TAKEN_ERR_MSG","INVALID_CRED_ERR_MSG","MY_ACCESS_TOKEN","config","uri","VERIFY_TOKEN_MUTATION","gql","Loading","classes","makeStyles","theme","progress","margin","spacing","useStyles","CircularProgress","className","props","React","useState","anchorEl","setAnchorEl","context","useContext","open","handleClose","Button","component","RouterLink","to","color","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","LoginLink","forwardRef","ref","innerRef","SignupLink","underline","root","flexGrow","menuButton","marginRight","title","alignText","MenuAppBar","loggedIn","useTheme","dark","palette","type","AppBar","position","Toolbar","Grid","container","item","xs","edge","justify","alignItems","onToggleDarkTheme","LoggedInBar","username","NotLoggedInBar","localStorage","getItem","setItem","console","log","primary","deepPurple","secondary","lightBlue","background","light","setTheme","muiTheme","createMuiTheme","ThemeProvider","CssBaseline","newPaletteType","style","padding","children","LandingPage","Layout","WaitWraper","state","checkAuthenticated","this","setState","localToken","Component","contextType","PrivateRoute","LoggedIn","loggedOut","landingPage","path","rest","render","textField","backgroundColor","paper","textAlign","marginTop","button","card","maxWidth","media","height","ArtefactCard","mediaURI","description","Card","elevation","CardActionArea","CardMedia","image","CardContent","zeroMinWidth","Typography","gutterBottom","variant","noWrap","CardActions","size","Mapbox","ReactMapboxGl","accessToken","interactive","attributionControl","maxZoom","Map","artefacts","popupOpen","setPopupOpen","mapStyle","containerStyle","mapState","map","artefact","center","popup","length","artefactID","key","coordinates","e","src","alt","offset","bottom","geocodingService","require","mbxGeocoding","_handleResponse","response","out","features","body","noResults","results","i","feature","result","place_type","bboxCoords","bbox","fitBounds","zoom","placeName","place_name","locationType","push","_handleError","error","geocodeQuery","query","types","Promise","resolve","reject","args","limit","reverseGeocode","send","then","forwardGeocode","artefactGeocodeQuery","address","CREATE_ARTEFACT_MUTATION","GET_ARTEFACT_STATES_QUERY","GET_FAMILIES_QUERY","ARTEFACT_DETAIL","UPDATE_ARTEFACT_MUTATION","LOGIN_MUTATION","GET_FAMILY_ARTEFACTS","SIGNUP_MUTATION","CREATE_FAMILY_MUTATION","ArtefactView","create","edit","view","statesLoading","familiesLoading","artefactLoading","artefactData","isAdmin","admin","artefactStates","families","artefactFamilyFormUseStyles","beingEdited","setBeingEdited","prevValue","setPrevValue","currValue","setCurrValue","snackbarOpen","setSnackbarOpen","prevMapState","locationError","locationState","setLocationState","addressIsSearchResult","setAddressIsSearchResult","queryResults","setQueryResults","Object","keys","belong","belongsToFamilies","val","belongsToFamiliesBools","errMsg","_pushViewArtefactURL","history","_creationCompleted","data","a","artefactCreate","_handleCreationError","errors","_handleUpdateError","useMutation","onCompleted","onError","createArtefact","creationErrors","creationLoading","loading","_updateCompleted","updateArtefact","updateErrors","setField","fieldName","value","prev","handleSetField","famId","cancelEditing","handleUnselectedSearchField","submitForm","reader","FileReader","onabort","onerror","onload","binaryStr","files","forEach","file","readAsArrayBuffer","famIDs","filter","input","name","isPublic","variables","saveChange","artefactInput","SaveButton","fullWidth","CancelButton","EditButtons","FormHelperText","handleCloseSnackbar","reason","noErrors","dataLoading","onSubmit","preventDefault","form","alignContent","sm","Paper","paperWrapper","FormControl","formControl","TextField","label","required","inputProps","readOnly","onChange","target","disabled","select","multiline","rows","List","subheader","ListSubheader","dense","ListItem","ListItemIcon","Checkbox","checked","tabIndex","ListItemText","family","familyName","initialFiles","dropzoneClass","dropzone","InputProps","endAdornment","iconButton","_handleGeocodeQuery","marginBottom","onKeyDown","keyCode","document","getElementById","click","helperText","Popover","undefined","disablePadding","nested","newLocationState","handleSetLocationResult","width","ClickAwayListener","onClickAway","Snackbar","autoHideDuration","ContentProps","message","action","close","withRouter","direction","minHeight","GetFamiliesWrapper","Child","child","childProps","setFamilies","thisChildProps","useQuery","me","isMemberOf","GetStatesWrapper","setArtefactStates","_saveArtefactStates","statesData","temp","__type","enumValues","desc","GetArtefactWrapper","params","marginLeft","display","flexWrap","submit","justifyContent","Login","formUseStyles","setUsername","password","setPassword","invalidCred","setInvalidCred","unknownError","setUnknownError","_confirm","token","tokenAuth","graphQLErrors","subMessage","substring","startsWith","login","autoFocus","Link","md","lg","PASSWORD_SCHEMA","is","min","max","has","uppercase","digits","not","oneOf","parseFailedRules","rules","output","rule","Signup","email","setEmail","confirmPassword","setConfirmPassword","usernameIsTaken","setUsernameIsTaken","emailIsTaken","validPassword","setValidPassword","failedPassRules","setFailedPassRules","emailValidator","signup","changePassword","pass","failedRules","validate","list","errorPassword","errorConfirmPassword","disableSubmit","invalidEmail","emailError","emailErrMsg","autoComplete","Logout","MyDialogTitle","DialogTitle","disableTypography","closeButton","CreateFamilyView","setFamilyName","about","setAbout","joinCode","setJoinCode","setOpen","_completed","familyCreate","createFamily","defaultValue","Dialog","DialogContent","align","CreateArtefactView","EditArtefactView","LIST_OF_ARTEFACTS","ManageArtefactsView","artefactEdges","SetArtefactEdges","first","artefactAdministratorOf","edges","node","upload","Error404View","href","overflow","icon","HOMEPAGE_INFO","JOIN_FAMILY_MUTATION","SELECT_FAMILY_MUTATION","UserHomeView","formJoinCode","setFormJoinCode","refetchQueries","joinFamilyMutation","profile","selectedFamily","_homepageInfoCompleted","home_data","called","selectFamily","inputLabel","useRef","profileId","hasArtefacts","GridList","cellHeight","cols","GridListTile","InputLabel","htmlFor","Select","newFamily","toFamily","MapView","useLazyQuery","getArtefacts","mapArtefacts","setMapArtefacts","init","setInit","promiseArr","all","App","exact","DetailView","httpLink","createHttpLink","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","setAuthenticated","setUser","setAuthToken","VerifyToken","_callback","setSession","catch","verifyToken","payload","authProviderValue","pushState","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94a96b4c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createContext } from \"react\";\n\nconst authContext = createContext({\n    authenticated: false, // to check if authenticated or not\n    user: {}, // store all the user details\n    authToken: \"\", \n    initiateLogin: () => { }, \n    handleAuthentication: () => { }, \n    logout: () => { }\n});\n\nexport default authContext;\nexport const AuthProvider = authContext.Provider;\nexport const AuthConsumer = authContext.Consumer;","export const AUTH_TOKEN = 'auth-token'\nexport const THEME_TYPE = 'theme-type'\nexport const USERNAME_TAKEN_ERR_MSG = `duplicate key`\nexport const INVALID_CRED_ERR_MSG = `Please, enter valid credentials`\nexport const MY_ACCESS_TOKEN =\n           'pk.eyJ1IjoiemR1ZmZpZWxkIiwiYSI6ImNrMWdkODhpOTBiM28zZG03eDdjZ2dmN24ifQ.vAzlFYY5S9O82SKnwX69kQ'\n\n// GQL API for prod vs dev\n\n// Whatever server the app is on, /graphql/\nconst prod = {\n    uri: '/graphql/'\n}\n\n// In case running dev on either :8000 or :3000, this must be specified as full path\nconst dev = {\n    uri: 'http://localhost:8000/graphql/'\n}\n\n// If npm run build => production, if npm start => development (built into react)\nexport const config = process.env.NODE_ENV === 'development' ? dev : prod\n","import React, { useState } from \"react\";\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthProvider } from \"../authContext\";\nimport { AUTH_TOKEN } from '../constants'\n\n\nconst VERIFY_TOKEN_MUTATION = gql`\nmutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n        payload\n    }\n}\n`\n\nexport default function Auth(props) {\n    const [authenticated, setAuthenticated] = useState(false)\n    const [user, setUser] = useState({})\n    const [authToken, setAuthToken] = useState(\"\");\n    const [VerifyToken, {error, loading }] = useMutation(VERIFY_TOKEN_MUTATION)\n\n    const handleAuthentication = async (authToken, _callback) => {\n        if (!authToken) {\n            authToken = localStorage.getItem(AUTH_TOKEN)\n        }\n\n        await VerifyToken({ variables: { token: authToken } }).then((data) => {\n            setSession(data)\n            if (_callback) {\n                _callback();\n            }\n        }).catch((errors) => {\n            // If could not validate it, remove it to stop unnecessary requests\n            localStorage[AUTH_TOKEN] = \"\"\n            if (_callback) {\n                _callback();\n            }\n        }\n\n        );\n        if (error) {\n            console.log(\"[Error] handleAuthentication()\")\n            return;\n        }\n\n        if (loading) {\n            console.log(\"Thing is loading\");\n        }\n\n    };\n\n    const setSession = (data) => {\n\n        if (error) {\n            console.log(\"Invalid data, please sign in again\");\n            return;\n        }\n\n        const username = data.data.verifyToken.payload.username\n        console.log(\"Here's the user id: \", data.data.verifyToken.payload.id);\n        const user = {\n            username: username,\n        };\n        setAuthenticated(true);\n        setAuthToken(data.verifyToken);\n        setUser(user);\n    }\n\n    const initiateLogin = () => {\n        this.history.pushState(null, 'login');\n    };\n\n    const logout = () => {\n        console.log(\"Logout called\");\n        setAuthenticated(false);\n        setUser({});\n        setAuthToken(\"\");\n        localStorage[AUTH_TOKEN] = \"\";\n    };\n\n    const authProviderValue = {\n        authenticated,\n        authToken,\n        user,\n        initiateLogin: initiateLogin,\n        handleAuthentication: handleAuthentication,\n        logout: logout\n    };\n\n    return (\n        <AuthProvider value={authProviderValue}>\n            {props.children}\n        </AuthProvider>\n    );\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction Loading() {\n    const useStyles = makeStyles(theme => ({\n        progress: {\n            margin: theme.spacing(2)\n        }\n    }))\n\n    const classes = useStyles()\n\n    return <CircularProgress className={classes.progress} />\n}\n\nexport default Loading\n","import React, { useContext } from 'react'\nimport { IconButton, Menu, MenuItem, Button } from '@material-ui/core'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport authContext from '../authContext'\nimport { Link as RouterLink } from 'react-router-dom'\n\nexport default props => {\n    const [anchorEl, setAnchorEl] = React.useState(null)\n    const context = useContext(authContext)\n    const open = Boolean(anchorEl)\n\n    function handleMenu(event) {\n        setAnchorEl(event.currentTarget)\n    }\n\n    function handleClose() {\n        setAnchorEl(null)\n    }\n\n    function handleLogout() {\n        context.logout()\n    }\n\n    return (\n        <div>\n            <Button component={RouterLink} to='/family/create' color='inherit'>\n                Create Family\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/manage'\n                color='inherit'\n            >\n                Manage Artefacts\n            </Button>\n            <Button\n                component={RouterLink}\n                to='/artefacts/create'\n                color='inherit'\n            >\n                Create Artefact\n            </Button>\n            <Button component={RouterLink} to='/map/' color='inherit'>\n                Artefact Map\n            </Button>\n            <IconButton\n                aria-label='account of current user'\n                aria-controls='menu-appbar'\n                aria-haspopup='true'\n                onClick={handleMenu}\n                color='inherit'\n            >\n                <AccountCircle />\n            </IconButton>\n            <Menu\n                id='menu-appbar'\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </Menu>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst LoginLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/login\" {...props} />\n));\n\nconst SignupLink = React.forwardRef((props, ref) => (\n    <RouterLink innerRef={ref} to=\"/signup\" {...props} />\n));\n\n\nexport default props => {\n    return (\n        <div>\n            <Button color=\"inherit\" underline=\"none\" component={SignupLink}>Sign up</Button>\n            <Button color=\"inherit\" underline=\"none\" component={LoginLink}>Login</Button>\n        </div>\n    );\n};\n","import React, { useContext } from 'react'\nimport {\n    IconButton,\n    Typography,\n    Toolbar,\n    AppBar,\n    Button,\n    makeStyles,\n    Grid\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\n\nimport Brightness3Icon from '@material-ui/icons/Brightness3'\nimport BrightnessHighIcon from '@material-ui/icons/BrightnessHigh'\n\nimport LoggedInBar from './LoggedInBar'\nimport NotLoggedInBar from './NotLoggedInBar'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Link } from '@material-ui/core'\nimport { useTheme } from '@material-ui/styles'\n\nimport authContext from '../authContext'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1,\n        alignText: 'left'\n    }\n}))\n\nexport default function MenuAppBar(props) {\n    const classes = useStyles()\n    const context = useContext(authContext)\n    let loggedIn = context.authenticated\n    let username = null\n    const theme = useTheme()\n    const dark = theme && theme.palette.type === 'dark'\n    return (\n        <div className={classes.root}>\n            <AppBar position='static' color={dark ? 'inherit' : 'primary'}>\n                <Toolbar>\n                    <Grid container>\n                        <Grid item xs={4} container>\n                            <IconButton\n                                edge='start'\n                                className={classes.menuButton}\n                                color='inherit'\n                                aria-label='menu'\n                            >\n                                <MenuIcon />\n                            </IconButton>\n\n                            <Button\n                                className={classes.title}\n                                component={RouterLink}\n                                to='/'\n                                color='inherit'\n                            >\n                                Home\n                            </Button>\n                        </Grid>\n\n                        <Grid item xs={8} container justify='flex-end' alignItems='center'>\n                            <IconButton\n                                className={classes.menuButton}\n                                color='inherit'\n                                aria-label='menu'\n                                onClick={props.onToggleDarkTheme}\n                            >\n                                {!dark ? (\n                                    <Brightness3Icon />\n                                ) : (\n                                    <BrightnessHighIcon />\n                                )}\n                            </IconButton>\n\n                            {loggedIn && <LoggedInBar username={username} />}\n                            {!loggedIn && <NotLoggedInBar />}\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { CssBaseline } from '@material-ui/core'\nimport Header from './Header'\n\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { deepPurple, lightBlue } from '@material-ui/core/colors'\n\nimport { THEME_TYPE } from '../constants.js'\n\nexport default props => {\n    if (!localStorage.getItem(THEME_TYPE)) {\n        localStorage.setItem(THEME_TYPE, 'light')\n        console.log('here')\n    }\n\n    const [theme, setTheme] = useState({\n        palette: {\n            primary: deepPurple,\n            secondary: lightBlue,\n            background: {\n                light: '#000000',\n                dark: '#121212'\n            },\n            type: localStorage.getItem(THEME_TYPE) || 'light'\n        }\n    })\n\n    const toggleDarkTheme = () => {\n        var newPaletteType = theme.palette.type === 'light' ? 'dark' : 'light'\n        localStorage.setItem(THEME_TYPE, newPaletteType)\n        setTheme({\n            palette: {\n                ...theme.palette,\n                type: newPaletteType\n            }\n        })\n    }\n\n    const muiTheme = createMuiTheme(theme)\n\n    return (\n        <ThemeProvider theme={muiTheme}>\n            <CssBaseline />\n            <Header onToggleDarkTheme={toggleDarkTheme} />\n            <div style={{padding: '30px'}}>\n            {props.children}\n            </div>\n        </ThemeProvider>\n    )   \n}\n","import React from 'react'\nimport Layout from '../components/Layout'\n\n// NB: REMOVE THE LAYOUT, THIS SHOULD NOT HAVE THE APP BAR, THIS SHOULD BE EXTRA COOL DESIGNED PAGE\nfunction LandingPage(props) {\n    return (\n        <Layout>\n            This is some cool landing page yo. Welcome!\n            <br />\n            Also, in the future, this page should not have a navigation bar,\n            it'll have cooler design stuff. It only has the nav bar for easier\n            linking to signup / login for now\n        </Layout>\n    )\n}\nexport default LandingPage\n","import React, { Component, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\nimport { AUTH_TOKEN } from '../constants';\nimport Loading from './Loading';\nimport LandingPage from '../views/LandingPage';\n\n\nclass WaitWraper extends Component {\n    state = { checkAuthenticated: false }\n    static contextType = authContext;\n\n    componentDidMount() {\n        if (this.context.authenticated) {\n            this.setState({checkAuthenticated: true})\n        }\n        const localToken = localStorage.getItem(AUTH_TOKEN);\n\n        // If there's no token, then they can't have been logged in i.e. checkauthenticated complete\n        if (!this.context.authenticated && localToken) {\n            this.context.handleAuthentication(localToken, () => {\n                console.log(\"Setting state\");\n                this.setState({checkAuthenticated: true})\n            });\n        } else {\n            this.setState({ checkAuthenticated: true })\n        }\n    }\n\n    render() {\n        // Render the children with a function using state as the argument\n        return this.props.children(this.state.checkAuthenticated);\n    }\n}\n\nexport const PrivateRoute = ({loggedIn: LoggedIn, loggedOut, path, landingPage, ...rest}) => {\n    const context = useContext(authContext);\n    const authenticated = context.authenticated;\n\n    if (!loggedOut) {\n        loggedOut = \"/login\"\n    }\n\n    console.log(\"Authenticated: \", authenticated)\n    return (\n        <WaitWraper>\n            {checkAuthenticated => checkAuthenticated === false\n            ? <Loading />\n            : <Route {...rest}\n                render={props => {\n                    if (authenticated) {\n                        return <LoggedIn {...props} />\n                    } else if (!authenticated && landingPage) {\n                        return <LandingPage />;\n                    } else {\n                        return (\n                            <Redirect to={loggedOut} />\n                        )\n                    }\n                }} />\n            }\n        </WaitWraper>\n    )\n}","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    },\n    card: {\n        backgroundColor: theme.palette.background.paper,\n        maxWidth: 345\n    },\n    media: {\n        backgroundColor: theme.palette.background.paper,\n        height: 140\n    }\n}))\n\n\n/*\nThis component is to present a summary of the artefact to a user, it's used in the homepage\nand manage page as a quick way to assist navigating through artefacts\n*/\nfunction ArtefactCard({ mediaURI, title, description, id }) {\n    const classes = useStyles()\n\n    console.log(\"here's the mediaURI: \" + mediaURI)\n    return (\n        <Card className={classes.card} elevation={3}>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.media}\n                    image={mediaURI}\n                    title={title}\n                />\n                <CardContent>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            gutterBottom\n                            variant='h5'\n                            component='h2'\n                            noWrap\n                        >\n                            {title}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs zeroMinWidth>\n                        <Typography\n                            variant='body2'\n                            color='textSecondary'\n                            component='p'\n                            noWrap\n                        >\n                            {description}\n                        </Typography>\n                    </Grid>\n                </CardContent>\n            </CardActionArea>\n            <CardActions>\n                <Button\n                    size='small'\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/${id}`}\n                >\n                    View\n                </Button>\n                <Button\n                    size='small'\n                    color='primary'\n                    component={RouterLink}\n                    to={`/artefacts/edit/${id}`}\n                >\n                    Edit\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default ArtefactCard\n","import React, { Fragment, useState } from 'react'\nimport ReactMapboxGl, { Marker, Popup } from 'react-mapbox-gl'\nimport { MY_ACCESS_TOKEN } from '../constants'\nimport ArtefactCard from '../components/ArtefactCard'\nimport { useTheme } from '@material-ui/styles'\n\nconst Mapbox = ReactMapboxGl({\n    accessToken: MY_ACCESS_TOKEN,\n    interactive: true,\n    attributionControl: false,\n    maxZoom: 18\n})\n\nexport default function Map(props) {\n    const theme = useTheme()\n    var artefacts = props.artefacts\n    if (!artefacts) artefacts = []\n\n    const [popupOpen, setPopupOpen] = useState({})\n\n    return (\n        <Mapbox\n            style={\n                props.mapStyle\n                    ? props.mapStyle\n                    : 'mapbox://styles/mapbox/streets-v9?optimize=true'\n            }\n            containerStyle={props.containerStyle}\n            {...props.mapState}\n        >\n            {artefacts.map(artefact => {\n                var { center, popup, ...rest } = artefact\n                if (!center || !center.length) {\n                    return\n                }\n                var artefactID = artefact.id\n                return (\n                    <Fragment key={artefactID}>\n                        <Marker\n                            coordinates={center}\n                            onClick={e => {\n                                setPopupOpen({\n                                    ...popupOpen,\n                                    [artefactID]: !popupOpen[artefactID]\n                                })\n                            }\n                            }\n                        >\n                            <img\n                                src={\n                                    'http://maps.google.com/mapfiles/ms/icons/red.png'\n                                }\n                                alt='marker-img'\n                            />\n                        </Marker>\n                        {popup && popupOpen[artefact.id] && (\n                            <Popup\n                                coordinates={center}\n                                offset={{\n                                    'bottom-left': [12, -38],\n                                    bottom: [0, -38],\n                                    'bottom-right': [-12, -38]\n                                }}\n                            >\n                                <ArtefactCard {...rest} />\n                            </Popup>\n                        )}\n                    </Fragment>\n                )\n            })}\n        </Mapbox>\n    )\n}\n","import { MY_ACCESS_TOKEN } from '../constants'\n// import { geocodeQuery } from '.'\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding')\nconst geocodingService = mbxGeocoding({ accessToken: MY_ACCESS_TOKEN })\n\nconst _handleResponse = response => {\n    var out = {}\n    // console.log('GEOCODING RESPONSE: ', response.body)\n    const features = response.body.features\n    if (!features) {\n        out.noResults = true\n        return out\n    }\n    var results = []\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i]\n        var result = {}\n        result.mapState = { center: feature.center }\n\n        if (feature.place_type[0] === 'place') {\n            const bboxCoords = feature.bbox\n            const bbox = [\n                [bboxCoords[0], bboxCoords[1]],\n                [bboxCoords[2], bboxCoords[3]]\n            ]\n            result.mapState.fitBounds = bbox\n        } else if (feature.place_type[0] === 'address') {\n            result.mapState.zoom = [15]\n        }\n        result.placeName = feature.place_name\n        result.locationType = feature.place_type[0]\n        results.push(result)\n    }\n    out.results = results\n    return out\n}\n\nconst _handleError = error => {\n    var out = {}\n    console.log('query error occurred')\n    out.error = error\n    return out\n}\n\nexport default function geocodeQuery(query, types) {\n    if (!query) {\n        return new Promise(function(resolve, reject) {\n            resolve()\n        })\n    }\n\n    var args = {\n        query: query,\n        limit: 5,\n        types: ['place', 'address']\n    }\n    if (types) args.types = types\n\n    if (typeof query === 'object') {\n        return geocodingService\n            .reverseGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    } else if (typeof query === 'string') {\n        return geocodingService\n            .forwardGeocode(args)\n            .send()\n            .then(\n                response => _handleResponse(response),\n                error => _handleError(error)\n            )\n    }\n}\n\nexport function artefactGeocodeQuery(artefact) {\n    return geocodeQuery(artefact.address).then(response => {\n        return { artefact: artefact, response: response }\n    })\n}\n","import gql from 'graphql-tag'\n\n// Get the id back to allow for querying for the artefact later\nexport const CREATE_ARTEFACT_MUTATION = gql`\n    mutation CreateArtefactMutation(\n        $name: String!\n        $state: String!\n        $isPublic: Boolean\n        $description: String!\n        $belongsToFamilies: [ID]\n        $address: String\n    ) {\n        artefactCreate(\n            input: {\n                name: $name\n                state: $state\n                description: $description\n                isPublic: $isPublic\n                belongsToFamilies: $belongsToFamilies\n                address: $address\n            }\n        ) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const GET_ARTEFACT_STATES_QUERY = gql`\n    query ArtefactStatesQuery($name: String!) {\n        __type(name: $name) {\n            enumValues {\n                name\n                description\n            }\n        }\n    }\n`\n\nexport const GET_FAMILIES_QUERY = gql`\n    query artefactsQuery {\n        me {\n            isMemberOf {\n                familyName\n                id\n            }\n        }\n    }\n`\n\nexport const GET_MY_ID_QUERY = gql`\n    query artefactsQuery {\n        me {\n            id\n        }\n    }\n`\n\nexport const ARTEFACT_DETAIL = gql`\n    query DetailView($id: ID!) {\n        artefact(id: $id) {\n            id\n            name\n            description\n            admin {\n                id\n                username\n            }\n            state\n            isPublic\n            upload\n            belongsToFamilies {\n                id\n            }\n            addedAt\n            address\n        }\n    }\n`\n\nexport const UPDATE_ARTEFACT_MUTATION = gql`\n    mutation UpdateArtefactMutation(\n        $id: ID!\n        $artefactInput: ArtefactInputType!\n    ) {\n        artefactUpdate(id: $id, input: $artefactInput) {\n            artefact {\n                id\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation TokenAuth($username: String!, $password: String!) {\n        tokenAuth(username: $username, password: $password) {\n            token\n        }\n    }\n`\n\nexport const GET_FAMILY_ARTEFACTS = gql`\n    query getFamilyArtefacts($id: ID!) {\n        family(id: $id) {\n            hasArtefacts {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        address\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation(\n        $email: String!\n        $password: String!\n        $username: String!\n    ) {\n        createUser(email: $email, username: $username, password: $password) {\n            user {\n                id\n                username\n                email\n            }\n        }\n    }\n`\n\n// Get the familyName and joinCode back to present to the user straight away after\n// successful creation\nexport const CREATE_FAMILY_MUTATION = gql`\n    mutation FamilyCreate($familyName: String!, $about: String) {\n        familyCreate(input: { familyName: $familyName, about: $about }) {\n            family {\n                familyName\n                joinCode\n            }\n        }\n    }\n`","import React, { useContext, useState, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport {\n    Button,\n    CssBaseline,\n    TextField,\n    Grid,\n    Typography,\n    MenuItem,\n    Snackbar,\n    IconButton,\n    FormControl,\n    Popover,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListSubheader,\n    ListItemText,\n    Checkbox,\n    Paper,\n    FormHelperText,\n    ClickAwayListener,\n    Popper\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { useTheme } from '@material-ui/styles'\nimport {\n    Loading,\n    Map,\n    geocodeQuery,\n    artefactFamilyFormUseStyles\n} from '../components'\nimport authContext from '../authContext'\nimport { useMutation } from '@apollo/react-hooks'\nimport { DropzoneArea } from 'material-ui-dropzone'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport { Layout } from '../components'\nimport {\n    CREATE_ARTEFACT_MUTATION,\n    UPDATE_ARTEFACT_MUTATION\n} from '../gqlQueriesMutations'\n\nfunction ArtefactView(props) {\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    // get the mode\n    var { create, edit, view } = props\n\n    // get families, states, and artefact data\n    var { statesLoading, familiesLoading, artefactLoading } = props\n    if (!create) {\n        var artefact = !artefactLoading ? props.artefactData.artefact : {}\n        var isAdmin = !artefactLoading\n            ? artefact.admin.username === username\n            : false\n    }\n    var { artefactStates, families } = props\n\n    // only allow admins to see the edit page\n    if (!isAdmin && edit) {\n        edit = false\n        view = true\n    }\n\n    const theme = useTheme()\n    const classes = artefactFamilyFormUseStyles()\n\n    const [beingEdited, setBeingEdited] = useState('')\n    const [prevValue, setPrevValue] = useState({})\n    const [currValue, setCurrValue] = useState({})\n    const [snackbarOpen, setSnackbarOpen] = useState(false)\n\n    const [locationState, setLocationState] = useState({\n        mapState: {},\n        prevMapState: {},\n        locationError: ''\n    })\n    const [addressIsSearchResult, setAddressIsSearchResult] = useState(true)\n    const [queryResults, setQueryResults] = useState([])\n\n    const [state, setState] = useState({})\n\n    if (\n        (edit || view) &&\n        !artefactLoading &&\n        Object.keys(artefact).length !== 0 &&\n        Object.keys(state).length === 0\n    ) {\n        var belong = {}\n        artefact.belongsToFamilies.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n\n        // run geocode query here and process result\n        // if the query is blank an empty promise is immediately returned\n        console.log('Query run with argument: ', artefact.address)\n        geocodeQuery(artefact.address).then(response => {\n            if (artefact.address) {\n                var address = ''\n                var errMsg = ''\n                console.log('response: ', response)\n                if (response.error) {\n                    errMsg = 'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                } else if (response.noResults) {\n                    errMsg = 'No results'\n                }\n\n                if (errMsg) {\n                    setLocationState({\n                        ...locationState,\n                        locationError: errMsg\n                    })\n                } else {\n                    setLocationState({\n                        mapState: response.results[0].mapState,\n                        locationError: ''\n                    })\n                    address = response.results[0].placeName\n                }\n                setAddressIsSearchResult(artefact.address === address)\n            }\n        })\n    }\n\n    if (create && families && !state.belongsToFamiliesBools) {\n        var belong = {}\n        families.map(val => (belong[val.id] = true))\n\n        setState({\n            ...artefact,\n            belongsToFamiliesBools: belong\n        })\n    }\n\n    const _pushViewArtefactURL = id => {\n        const { history } = props\n        if (history) {\n            history.push(`/artefacts/${id}`)\n        }\n    }\n\n    const _creationCompleted = async data => {\n        var id = data.artefactCreate.artefact.id\n        _pushViewArtefactURL(id)\n    }\n\n    const _handleCreationError = async errors => {\n        // TO DO\n        console.log('Creation errors occurred:', errors)\n    }\n\n    const _handleUpdateError = async errors => {\n        console.log('update error occured: ', errors)\n    }\n\n    const [\n        createArtefact,\n        { error: creationErrors, loading: creationLoading }\n    ] = useMutation(CREATE_ARTEFACT_MUTATION, {\n        onCompleted: _creationCompleted,\n        onError: _handleCreationError\n    })\n\n    const _updateCompleted = async data => {\n        setBeingEdited('')\n        setSnackbarOpen(true)\n    }\n\n    const [updateArtefact, { error: updateErrors }] = useMutation(\n        UPDATE_ARTEFACT_MUTATION,\n        {\n            onCompleted: _updateCompleted,\n            onError: _handleUpdateError\n        }\n    )\n\n    const setField = (fieldName, value) => {\n        var prev = state[fieldName]\n        setState({\n            ...state,\n            [fieldName]: value\n        })\n\n        if (edit && beingEdited !== fieldName) {\n            setPrevValue(prev)\n        }\n    }\n\n    const handleSetField = (fieldName, value, famId) => {\n        if (fieldName === 'belongsToFamiliesBools') {\n            value = {\n                ...state.belongsToFamiliesBools,\n                [famId]: value\n            }\n        }\n\n        setField(fieldName, value)\n        setCurrValue(value)\n        if (edit && beingEdited !== fieldName) {\n            setBeingEdited(fieldName)\n        }\n    }\n\n    const _handleGeocodeQuery = query => {\n        if (query) {\n            console.log('Query run with argument: ', query)\n            return geocodeQuery(query).then(response => {\n                var errMsg = ''\n                if (response.error) {\n                    errMsg = 'Unknown error occurred, check console for details'\n                    console.log(response.error)\n                }\n                if (response.noErrors) errMsg = 'No results'\n                if (errMsg) {\n                    setLocationState({\n                        ...locationState,\n                        locationError: errMsg\n                    })\n                } else {\n                    setQueryResults(response.results)\n                }\n                return response\n            })\n        }\n    }\n\n    const handleSetLocationResult = result => {\n        var newLocationState = {\n            mapState: result.mapState,\n            locationError: ''\n        }\n        if (beingEdited === 'address' && !locationState.prevMapState) {\n            newLocationState.prevMapState = locationState.mapState\n        }\n        handleSetField('address', result.placeName)\n        setQueryResults([])\n\n        setLocationState({\n            ...locationState,\n            ...newLocationState\n        })\n        setAddressIsSearchResult(true)\n    }\n\n    const resetMapToPrevState = () => {\n        setLocationState({\n            ...locationState,\n            mapState: locationState.prevMapState,\n            prevMapState: {}\n        })\n        setQueryResults([])\n    }\n\n    const cancelEditing = () => {\n        setField(beingEdited, prevValue)\n        setBeingEdited('')\n\n        if (beingEdited === 'address') {\n            resetMapToPrevState()\n        }\n    }\n\n    const handleUnselectedSearchField = () => {\n        setLocationState({\n            ...locationState,\n            locationError: 'Select a search result or clear search field'\n        })\n    }\n\n    const submitForm = async event => {\n        if (!addressIsSearchResult) {\n            handleUnselectedSearchField()\n            return\n        }\n\n        // read image files\n        // TO DO\n        const reader = new FileReader()\n\n        reader.onabort = () => console.log('file reading was aborted')\n        reader.onerror = () => console.log('file reading has failed')\n        reader.onload = () => {\n            // Do whatever you want with the file contents\n            const binaryStr = reader.result\n            console.log(binaryStr)\n        }\n\n        if (state.files) {\n            state.files.forEach(file => reader.readAsArrayBuffer(file))\n        }\n\n        var famIDs\n        if (state.belongsToFamiliesBools) {\n            famIDs = Object.keys(state.belongsToFamiliesBools).filter(\n                id => state.belongsToFamiliesBools[id]\n            )\n        } else {\n            famIDs = []\n        }\n\n        var input = {\n            name: state.name,\n            description: state.description,\n            state: state.state,\n            isPublic: state.isPublic ? state.isPublic : false,\n            belongsToFamilies: famIDs,\n            address: state.address ? state.address : ''\n        }\n        console.log('Input to GQL creation mutation:', input)\n\n        createArtefact({\n            variables: input\n        })\n    }\n\n    const saveChange = async event => {\n        if (edit) {\n            var input = {}\n\n            if (!addressIsSearchResult) {\n                handleUnselectedSearchField()\n                return\n            }\n\n            if (beingEdited === 'belongsToFamiliesBools') {\n                input['belongsToFamilies'] = Object.keys(\n                    state.belongsToFamiliesBools\n                ).filter(id => state.belongsToFamiliesBools[id])\n            } else {\n                input[beingEdited] = currValue\n            }\n\n            console.log('Input to GQL update mutation: input', input)\n\n            updateArtefact({\n                variables: {\n                    id: artefact.id,\n                    artefactInput: input\n                }\n            })\n        }\n    }\n\n    function SaveButton() {\n        return (\n            <Button\n                variant='contained'\n                color='primary'\n                type='submit'\n                className={classes.button}\n                onClick={saveChange}\n                fullWidth\n                padding={1}\n            >\n                Save\n            </Button>\n        )\n    }\n\n    function CancelButton() {\n        return (\n            <Button\n                variant='contained'\n                color='default'\n                className={classes.button}\n                onClick={cancelEditing}\n                fullWidth\n                padding={1}\n            >\n                Cancel\n            </Button>\n        )\n    }\n\n    function EditButtons() {\n        return (\n            <Grid\n                container\n                justify='space-evenly'\n                alignItems='center'\n                spacing={1}\n                style={{ marginTop: 1 }}\n            >\n                <Grid item xs={6}>\n                    <SaveButton />\n                </Grid>\n                <Grid item xs={6}>\n                    <CancelButton />\n                </Grid>\n\n                {updateErrors && (\n                    <Grid item xs={12}>\n                        <FormHelperText error>\n                            Error Updating Artefact\n                        </FormHelperText>\n                    </Grid>\n                )}\n            </Grid>\n        )\n    }\n\n    function handleCloseSnackbar(event, reason) {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        setSnackbarOpen(false)\n    }\n\n    const noErrors = !creationErrors\n    const dataLoading = familiesLoading || statesLoading\n\n    var mapStyle\n    if (theme && theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    } else {\n        mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    }\n\n    const submitHandler = e => {\n        e.preventDefault()\n        create ? submitForm(e) : saveChange(e)\n    }\n\n    if (edit && dataLoading) {\n        return <Loading />\n    }\n\n    return (\n        <Fragment>\n            <CssBaseline />\n            <form onSubmit={submitHandler} className={classes.form}>\n                <Grid\n                    container\n                    spacing={1}\n                    alignItems='stretch'\n                    alignContent='stretch'\n                    justify='space-evenly'\n                >\n                    <Grid item xs={12} container justify='center'>\n                        <Grid item xs={12} sm={8}>\n                            <Typography variant='h4' className={classes.title}>\n                                {create && 'Create'} {edit && 'Edit'}{' '}\n                                {view && 'View'} Artefact\n                            </Typography>\n                            {!view && (\n                                <Typography\n                                    variant='subtitle1'\n                                    className={classes.title}\n                                >\n                                    {create &&\n                                        'Artefacts are belongings of the family, enter as much or as little detail as you like'}\n                                    {edit && 'Click to start editing'}\n                                </Typography>\n                            )}\n                        </Grid>\n                    </Grid>\n                    {/* Left Pane */}\n                    <Grid item xs={12} sm={6} container spacing={1}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        // style={{ height: '100%' }}\n                                        // InputProps={{ style: {height: '100%'} }}\n                                        id='artefact-name'\n                                        label='Artefact name'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={state.name || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'name',\n                                                e.target.value\n                                            )\n                                        }\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'name'\n                                        }\n                                    />\n\n                                    {edit && beingEdited === 'name' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='state'\n                                        label='Artefact State'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={state.state || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'state',\n                                                e.target.value\n                                            )\n                                        }\n                                        select\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'state'\n                                        }\n                                    >\n                                        {Object.keys(artefactStates).map(\n                                            value => {\n                                                return (\n                                                    <MenuItem\n                                                        value={\n                                                            props\n                                                                .artefactStates[\n                                                                value\n                                                            ]\n                                                        }\n                                                        key={value}\n                                                    >\n                                                        {value}\n                                                    </MenuItem>\n                                                )\n                                            }\n                                        )}\n                                    </TextField>\n\n                                    {edit && beingEdited === 'state' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        multiline\n                                        rows={6}\n                                        value={state.description || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            handleSetField(\n                                                'description',\n                                                e.target.value\n                                            )\n                                        }\n                                        disabled={\n                                            edit &&\n                                            !!beingEdited &&\n                                            beingEdited !== 'description'\n                                        }\n                                    />\n\n                                    {edit && beingEdited === 'description' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='artefact-admin'\n                                        label='Artefact Admin'\n                                        variant='outlined'\n                                        required\n                                        fullWidth\n                                        value={\n                                            state.admin &&\n                                            Object.keys(state.admin).length !==\n                                                0\n                                                ? state.admin.username\n                                                : context.user.username\n                                        }\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e =>\n                                            console.log(\n                                                'admin field was changed'\n                                            )\n                                        }\n                                        disabled\n                                    />\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                    {/* Right Pane */}\n                    <Grid\n                        item\n                        xs={12}\n                        sm={6}\n                        container\n                        spacing={1}\n                        alignContent='stretch'\n                    >\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <List\n                                        subheader={\n                                            <ListSubheader component='div'>\n                                                Privacy\n                                            </ListSubheader>\n                                        }\n                                        dense\n                                    >\n                                        <ListItem\n                                            disabled={\n                                                edit &&\n                                                !!beingEdited &&\n                                                beingEdited !== 'isPublic'\n                                            }\n                                        >\n                                            {!view && (\n                                                <ListItemIcon>\n                                                    <Checkbox\n                                                        edge='start'\n                                                        checked={\n                                                            state.isPublic ||\n                                                            false\n                                                        }\n                                                        tabIndex={-1}\n                                                        onClick={e =>\n                                                            handleSetField(\n                                                                'isPublic',\n                                                                e.target.checked\n                                                            )\n                                                        }\n                                                    />\n                                                </ListItemIcon>\n                                            )}\n                                            <ListItemText primary={'Public'} />\n                                        </ListItem>\n                                    </List>\n\n                                    {edit && beingEdited === 'isPublic' && (\n                                        <EditButtons />\n                                    )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <List\n                                        subheader={\n                                            <ListSubheader component='div'>\n                                                {!view\n                                                    ? 'Select which of your families the artefact belongs to'\n                                                    : 'Belongs to'}\n                                            </ListSubheader>\n                                        }\n                                    >\n                                        {families.map(family => {\n                                            if (!state.belongsToFamiliesBools) {\n                                                return\n                                            }\n\n                                            if (\n                                                state.belongsToFamiliesBools &&\n                                                !state.belongsToFamiliesBools[\n                                                    family.id\n                                                ]\n                                            ) {\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ] = false\n                                            }\n\n                                            if (\n                                                !view ||\n                                                state.belongsToFamiliesBools[\n                                                    family.id\n                                                ]\n                                            ) {\n                                                return (\n                                                    <ListItem\n                                                        key={family.id}\n                                                        dense\n                                                        disabled={\n                                                            edit &&\n                                                            !!beingEdited &&\n                                                            beingEdited !==\n                                                                'belongsToFamiliesBools'\n                                                        }\n                                                    >\n                                                        {!view && (\n                                                            <ListItemIcon>\n                                                                <Checkbox\n                                                                    edge='start'\n                                                                    checked={\n                                                                        (state.belongsToFamiliesBools &&\n                                                                            state\n                                                                                .belongsToFamiliesBools[\n                                                                                family\n                                                                                    .id\n                                                                            ]) ||\n                                                                        false\n                                                                    }\n                                                                    onClick={e =>\n                                                                        handleSetField(\n                                                                            'belongsToFamiliesBools',\n                                                                            e\n                                                                                .target\n                                                                                .checked,\n                                                                            family.id\n                                                                        )\n                                                                    }\n                                                                    tabIndex={\n                                                                        -1\n                                                                    }\n                                                                />\n                                                            </ListItemIcon>\n                                                        )}\n                                                        <ListItemText\n                                                            primary={\n                                                                family.familyName\n                                                            }\n                                                        />\n                                                    </ListItem>\n                                                )\n                                            }\n                                        })}\n                                    </List>\n\n                                    {edit &&\n                                        beingEdited ===\n                                            'belongsToFamiliesBools' && (\n                                            <EditButtons />\n                                        )}\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n\n                        {/* TO DO: show images in different way on view page */}\n                        {!view && (\n                            <Grid item xs={12}>\n                                <Paper className={classes.paperWrapper} elevation={3}>\n                                    <DropzoneArea\n                                        initialFiles={state.files || []}\n                                        onChange={files =>\n                                            handleSetField('files', files)\n                                        }\n                                        dropzoneClass={classes.dropzone}\n                                    />\n                                </Paper>\n                            </Grid>\n                        )}\n                    </Grid>\n\n                    <Grid container item xs={12} spacing={1}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.paperWrapper} elevation={3}>\n                                <FormControl\n                                    className={classes.formControl}\n                                    fullWidth\n                                >\n                                    <TextField\n                                        id='address'\n                                        label='Address'\n                                        variant='outlined'\n                                        fullWidth\n                                        value={state.address || ''}\n                                        inputProps={{\n                                            readOnly: view\n                                        }}\n                                        onChange={e => {\n                                            // setState({\n                                            //     ...state,\n                                            //     address: e.target.value\n                                            // })\n                                            handleSetField(\n                                                'address',\n                                                e.target.value\n                                            )\n                                            if (e.target.value) {\n                                                setAddressIsSearchResult(false)\n                                            } else {\n                                                // allow blank address\n                                                setAddressIsSearchResult(true)\n                                            }\n                                        }}\n                                        error={!!locationState.locationError}\n                                        InputProps={{\n                                            endAdornment: !view && (\n                                                <IconButton\n                                                    className={\n                                                        classes.iconButton\n                                                    }\n                                                    aria-label='search'\n                                                    id='search'\n                                                    onClick={e =>\n                                                        _handleGeocodeQuery(\n                                                            state.address\n                                                        )\n                                                    }\n                                                >\n                                                    <SearchIcon />\n                                                </IconButton>\n                                            ),\n                                            style: { marginBottom: 3 }\n                                        }}\n                                        onKeyDown={e => {\n                                            if (e.keyCode === 13 && !view) {\n                                                e.preventDefault()\n                                                document\n                                                    .getElementById('search')\n                                                    .click()\n                                            }\n                                        }}\n                                        helperText={locationState.locationError}\n                                    />\n                                    <Popover\n                                        id={\n                                            queryResults.length\n                                                ? 'results'\n                                                : undefined\n                                        }\n                                        open={!!queryResults.length}\n                                        anchorEl={document.getElementById(\n                                            'address'\n                                        )}\n                                        onClose={e => setQueryResults([])}\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'left'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'left'\n                                        }}\n                                    >\n                                        <List component='div' disablePadding>\n                                            {queryResults.map(result => (\n                                                <ListItem\n                                                    key={result.placeName}\n                                                    button\n                                                    className={classes.nested}\n                                                    onClick={e =>\n                                                        handleSetLocationResult(\n                                                            result\n                                                        )\n                                                    }\n                                                >\n                                                    <ListItemText\n                                                        primary={\n                                                            result.placeName\n                                                        }\n                                                    />\n                                                </ListItem>\n                                            ))}\n                                        </List>\n                                    </Popover>\n\n                                    {edit && beingEdited === 'address' && (\n                                        <EditButtons />\n                                    )}\n\n                                    <Grid container style={{ marginTop: 1 }}>\n                                        <Map\n                                            className={classes.map}\n                                            mapStyle={mapStyle}\n                                            mapState={locationState.mapState}\n                                            containerStyle={{\n                                                height: '60vh',\n                                                width: '100vw'\n                                            }}\n                                            artefacts={[\n                                                {\n                                                    center:\n                                                        locationState.mapState\n                                                            .center\n                                                }\n                                            ]}\n                                        />\n                                    </Grid>\n                                </FormControl>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                    {create && (\n                        <Grid item xs={6}>\n                            <Button\n                                name='create'\n                                label='Create'\n                                type='submit'\n                                fullWidth\n                                variant='contained'\n                                color='primary'\n                                disabled={creationLoading}\n                            >\n                                Create\n                            </Button>\n                            {!noErrors && (\n                                <FormHelperText error={!noErrors}>\n                                    Unknown Error Occurred\n                                </FormHelperText>\n                            )}\n                        </Grid>\n                    )}\n                </Grid>\n\n                <ClickAwayListener onClickAway={handleCloseSnackbar}>\n                    <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left'\n                        }}\n                        open={snackbarOpen}\n                        autoHideDuration={2000}\n                        onClose={handleCloseSnackbar}\n                        ContentProps={{\n                            'aria-describedby': 'message-id'\n                        }}\n                        message={<span id='message-id'>Edit successful</span>}\n                        action={[\n                            <Button\n                                key='view'\n                                color='secondary'\n                                size='small'\n                                onClick={e => {\n                                    _pushViewArtefactURL(artefact.id) &&\n                                        handleCloseSnackbar(e)\n                                }}\n                            >\n                                VIEW\n                            </Button>,\n                            <IconButton\n                                key='close'\n                                aria-label='close'\n                                color='inherit'\n                                onClick={handleCloseSnackbar}\n                                className={classes.close}\n                            >\n                                <CloseIcon />\n                            </IconButton>\n                        ]}\n                    />\n                </ClickAwayListener>\n            </form>\n        </Fragment>\n    )\n}\n\nfunction Wrapped(props) {\n    return (\n        <Layout>\n            <Grid\n                container\n                spacing={0}\n                direction='column'\n                alignItems='center'\n                justify='center'\n                style={{ minHeight: '80vh' }}\n            >\n                <Grid item xs={10}>\n                    <ArtefactView {...props} />\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default withRouter(Wrapped)\n","import React, { useState } from 'react'\nimport ArtefactView from '../views/ArtefactView'\nimport { Layout } from '.'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport {\n    GET_FAMILIES_QUERY\n} from '../gqlQueriesMutations'\n\nexport default function GetFamiliesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n\n    const [families, setFamilies] = useState([])\n    // get users families\n    const { loading } = useQuery(GET_FAMILIES_QUERY, {\n        onCompleted: data => setFamilies(data.me.isMemberOf),\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        families: families,\n        familiesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState } from 'react'\nimport ArtefactView from '../views/ArtefactView'\nimport { Layout } from '../components'\nimport { useQuery } from '@apollo/react-hooks'\n\nimport { GET_ARTEFACT_STATES_QUERY } from '../gqlQueriesMutations'\n\nexport default function GetStatesWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    // get artefact states\n    const [artefactStates, setArtefactStates] = useState({})\n    const _saveArtefactStates = async statesData => {\n        var temp = {}\n        var desc\n        var state\n        for (var i in statesData.__type.enumValues) {\n            state = statesData.__type.enumValues[i]\n            desc = state.description\n            temp[desc] = state.name\n        }\n        setArtefactStates(temp)\n    }\n    const { loading } = useQuery(GET_ARTEFACT_STATES_QUERY, {\n        variables: {\n            name: 'ArtefactState'\n        },\n        onCompleted: _saveArtefactStates,\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactStates: artefactStates,\n        statesLoading: loading\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import React, { useState, useContext } from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { ARTEFACT_DETAIL } from '../gqlQueriesMutations'\nimport authContext from '../authContext'\n\nexport default function GetArtefactWrapper({\n    child: Child,\n    childProps,\n    ...rest\n}) {\n    console.log(\"HERE\")\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const { data, loading } = useQuery(ARTEFACT_DETAIL, {\n        variables: {\n            id: rest.match.params.id\n        },\n        onError: error => console.log(error)\n    })\n\n    var thisChildProps = {\n        ...childProps,\n        artefactData: data,\n        artefactLoading: loading,\n    }\n\n    return <Child {...rest} {...thisChildProps} />\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        margin: theme.spacing(1)\n    },\n    paper: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        alignItems: 'center',\n        alignContent: 'stretch',\n        justify: 'center'\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: theme.palette.background.paper,\n        justifyContent: 'center',\n    },\n    formControl: {\n        height: '100%',\n        justifyContent: 'center'\n    },\n    title: {\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        padding: theme.spacing(1),\n        textAlign: 'center'\n    },\n    paper: {\n        padding: theme.spacing(1),\n        // textAlign: 'center',\n        backgroundColor: theme.palette.background.paper,\n    },\n    paperWrapper: {\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        height: '100%',\n        alignItems: 'center'\n    },\n    button: {\n        height: '100%'\n    },\n    map: {\n        height: '200px',\n        type: theme.palette.type\n    },\n    form: {\n        marginBottom: theme.spacing(10),\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexWrap: 'wrap',\n        textAlign: 'center'\n    },\n    iconButton: {\n        padding: 10\n    },\n    dropzone: {\n        backgroundColor: theme.palette.background.paper,\n        minHeight: '80px'\n    }\n}))\n","import React, { useState, useContext, Fragment } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport authContext from '../authContext'\nimport { AUTH_TOKEN, INVALID_CRED_ERR_MSG } from '../constants.js'\nimport { Layout, formUseStyles } from '../components'\n\nimport { LOGIN_MUTATION } from '../gqlQueriesMutations'\n\nfunction Login(props) {\n    const context = useContext(authContext)\n    const classes = formUseStyles()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [invalidCred, setInvalidCred] = useState(false)\n    const [unknownError, setUnknownError] = useState(false)\n\n    const _confirm = async data => {\n        const { token } = data.tokenAuth\n        context.handleAuthentication(token)\n        localStorage.setItem(AUTH_TOKEN, token)\n        props.history.push(`/`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 15)\n            if (INVALID_CRED_ERR_MSG.startsWith(subMessage)) {\n                setInvalidCred(true)\n                console.log('invalid credentials')\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [login] = useMutation(LOGIN_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        login({ variables: { username: username, password: password } })\n        event.preventDefault()\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form onSubmit={submitForm} className={classes.form}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Log In\n                </Typography>\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    id='username'\n                    label='Username'\n                    autoFocus\n                    onChange={e => setUsername(e.target.value)}\n                    error={invalidCred}\n                />\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Password'\n                    type='password'\n                    id='password'\n                    onChange={e => setPassword(e.target.value)}\n                    error={invalidCred}\n                    helperText={invalidCred ? 'Please enter valid credentials' : ''}\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            name='submit'\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            fullWidth\n                        >\n                            Log In\n                        </Button>\n\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                                className={classes.root}\n                            >\n                                Unknown Error Occurred\n                            </FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            component={RouterLink}\n                            to='/signup'\n                            className={classes.root}\n                            color='inherit'\n                        >\n                            Need an account? Sign up\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Login {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","var passwordValidator = require('password-validator');\n\n// Create a schema\nexport var PASSWORD_SCHEMA = new passwordValidator();\n\nconst min_len = 6\nconst max_len = 100\n\n// NOTE: for every rule added to the Schema, a corresponding parsing conditional should be added below\nPASSWORD_SCHEMA\n    .is().min(min_len)                                    // Minimum length 8\n    .is().max(max_len)                                  // Maximum length 100\n    .has().uppercase()                              // Must have uppercase letters\n    .has().digits()                                 // Must have digits\n    .is().not().oneOf(['password', 'Password123']); // Blacklist these values\n    // .has().lowercase()                              // Must have lowercase letters\n    // .has().not().spaces()                           // Should not have spaces\n\nexport const parseFailedRules = (rules) => {\n    var output = ''\n    for (var i=0; i < rules.length; i++){\n        if (i >=1) output += \" | \"\n        \n        var rule = rules[i]\n        if (rule === 'min'){\n            output += `Password must be at least ${min_len} characters long`\n        }\n        if (rule === 'max') {\n            output += `Password must be at most ${max_len} characters long`\n        }\n        if (rule === 'uppercase') {\n            output += `Password must have an uppercase letter`\n        }\n        if (rule === 'digits') {\n            output += `Password must have a digit`\n        }\n        if (rule === 'oneOf') {\n            output += `Password is too common`\n        }\n    }\n    return output\n}","import React, { useState } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport {\n    Button,\n    TextField,\n    FormHelperText,\n    Link,\n    Grid,\n    Typography,\n    Paper\n} from '@material-ui/core'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\n\nimport { Layout, formUseStyles } from '../components'\nimport { USERNAME_TAKEN_ERR_MSG } from '../constants.js'\nimport {\n    PASSWORD_SCHEMA,\n    parseFailedRules\n} from '../components/passwordValidator.js'\n\nimport { SIGNUP_MUTATION } from '../gqlQueriesMutations'\n\nfunction Signup(props) {\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [usernameIsTaken, setUsernameIsTaken] = useState(false)\n    const [emailIsTaken, setEmailIsTaken] = useState(false)\n    const [validPassword, setValidPassword] = useState(false)\n    const [failedPassRules, setFailedPassRules] = useState([])\n    const [unknownError, setUnknownError] = useState(false)\n\n    var emailValidator = require('email-validator')\n\n    const classes = formUseStyles()\n    const _confirm = async data => {\n        // handle signup errors and potentially login\n        props.history.push(`/login`)\n    }\n\n    const _handleError = async errors => {\n        console.log('_handleError run')\n        if (errors.graphQLErrors) {\n            const subMessage = errors.graphQLErrors[0].message.substring(0, 10)\n            if (USERNAME_TAKEN_ERR_MSG.startsWith(subMessage)) {\n                setUsernameIsTaken(true)\n            } else {\n                console.log('unexpect error(s):')\n                console.log(errors)\n                setUnknownError(true)\n            }\n        }\n    }\n\n    const [signup] = useMutation(SIGNUP_MUTATION, {\n        onCompleted: _confirm,\n        onError: _handleError\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('form submitted')\n        signup({\n            variables: { username: username, email: email, password: password }\n        })\n    }\n\n    const changePassword = async pass => {\n        setPassword(pass)\n\n        // password validation\n        var failedRules = PASSWORD_SCHEMA.validate(pass, { list: true })\n        setFailedPassRules(failedRules)\n        if (failedRules.length !== 0) {\n            setValidPassword(false)\n        } else {\n            setValidPassword(true)\n        }\n    }\n\n    const errorPassword = !!password && !validPassword\n    const errorConfirmPassword =\n        !!confirmPassword && !(confirmPassword === password)\n\n    const disableSubmit =\n        (!!password && (!(confirmPassword === password) || !validPassword)) ||\n        (!!email && !emailValidator.validate(email))\n\n    const invalidEmail = !!email && !emailValidator.validate(email)\n    const emailError = emailIsTaken || invalidEmail\n    var emailErrMsg = ''\n    if (invalidEmail) {\n        emailErrMsg = 'Email is invalid'\n    } else if (emailIsTaken) {\n        emailErrMsg = 'Email is taken'\n    }\n\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form className={classes.form} onSubmit={submitForm}>\n                <Typography\n                    component='h1'\n                    variant='h5'\n                    className={classes.root}\n                >\n                    Sign up\n                </Typography>\n\n                <TextField\n                    className={classes.root}\n                    onChange={e => setUsername(e.target.value)}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='username'\n                    label='Username'\n                    type='username'\n                    autoFocus\n                    error={usernameIsTaken}\n                    helperText={usernameIsTaken ? 'Username is taken' : ''}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='email'\n                    label='Email'\n                    type='email'\n                    onChange={e => setEmail(e.target.value)}\n                    error={emailError}\n                    helperText={emailErrMsg}\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    autoComplete='password'\n                    label='Password'\n                    type='password'\n                    onChange={e => changePassword(e.target.value)}\n                    error={errorPassword}\n                    helperText={\n                        errorPassword ? parseFailedRules(failedPassRules) : ''\n                    }\n                />\n\n                <TextField\n                    className={classes.root}\n                    variant='outlined'\n                    required\n                    fullWidth\n                    label='Confirm Password'\n                    type='password'\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    error={errorConfirmPassword}\n                    helperText={\n                        errorConfirmPassword ? 'Passwords must match' : ''\n                    }\n                />\n\n                <Grid\n                    container\n                    justify='center'\n                    alignItems='center'\n                    spacing={3}\n                >\n                    <Grid item xs={6}>\n                        <Button\n                            className={classes.root}\n                            fullWidth\n                            label='Submit'\n                            type='submit'\n                            variant='contained'\n                            color='primary'\n                            disabled={disableSubmit}\n                        >\n                            Sign Up\n                        </Button>\n                        {unknownError && (\n                            <FormHelperText\n                                error={unknownError}\n                            ></FormHelperText>\n                        )}\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <Link\n                            className={classes.root}\n                            component={RouterLink}\n                            to='/login'\n                            color='inherit'\n                        >\n                            Already have an account? Log in\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={10} sm={8} md={6} lg={4}>\n                <Signup {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport authContext from '../authContext';\n\nfunction Logout() {\n    const context = useContext(authContext);\n    context.logout();\n\n    return (\n        <Redirect to='/login' />\n    );\n}\n\nexport default Logout;\n","import React, { useContext, useState } from 'react'\nimport {\n    IconButton,\n    Button,\n    CssBaseline,\n    TextField,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    Grid,\n    Paper,\n    FormControl\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nimport { useMutation } from '@apollo/react-hooks'\n\nimport Layout from '../components/Layout'\nimport authContext from '../authContext'\nimport { artefactFamilyFormUseStyles } from '../components'\nimport { CREATE_FAMILY_MUTATION } from '../gqlQueriesMutations'\n\nconst MyDialogTitle = props => {\n    const classes = artefactFamilyFormUseStyles()\n    const { children, onClose } = props\n\n    return (\n        <DialogTitle disableTypography className={classes.root}>\n            <Typography variant='h6'>{children}</Typography>\n            {onClose ? (\n                <IconButton\n                    aria-label='close'\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </DialogTitle>\n    )\n}\n\nfunction CreateFamilyView(props) {\n    const classes = artefactFamilyFormUseStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n\n    const [familyName, setFamilyName] = useState('')\n    const [about, setAbout] = useState('')\n    const [joinCode, setJoinCode] = useState('')\n    const [open, setOpen] = useState(false)\n\n    const _completed = async data => {\n        console.log(data)\n        const { joinCode } = data.familyCreate.family\n        setJoinCode(joinCode)\n        setOpen(true)\n    }\n\n    const [createFamily, { data }] = useMutation(CREATE_FAMILY_MUTATION, {\n        onCompleted: _completed\n    })\n\n    const submitForm = async event => {\n        event.preventDefault()\n        console.log('Family name: ' + familyName)\n        console.log('About: ' + about)\n        createFamily({\n            variables: {\n                familyName: familyName,\n                about: about\n            }\n        })\n    }\n\n    const handleClose = event => {\n        event.preventDefault()\n        setOpen(false)\n    }\n\n    return (\n        <form className={classes.form} onSubmit={submitForm}>\n            <Grid\n                container\n                spacing={2}\n                direction='row'\n                alignItems='stretch'\n                alignContent='stretch'\n                justify='space-evenly'\n            >\n                <Grid item xs={12} container justify='center'>\n                    <Typography variant='h4' className={classes.title}>\n                        Create Family\n                    </Typography>\n\n                    <Typography variant='subtitle1' className={classes.title}>\n                        Families are how you manage your artefacts. We recognise\n                        there is often complex overlap between families. That's\n                        why you can create and be a part of several families, so\n                        you can separate which of the artefacts you manage\n                        belong to which family.\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                required\n                                fullWidth\n                                id='family-name'\n                                label='Family name'\n                                autoFocus\n                                onChange={e => setFamilyName(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12}>\n                    <Paper className={classes.paper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                multiline\n                                rows={6}\n                                fullWidth\n                                id='about'\n                                label='Tell people about your family'\n                                onChange={e => setAbout(e.target.value)}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12}>\n                    <Paper className={classes.paper} elevation={3}>\n                        <FormControl className={classes.formControl} fullWidth>\n                            <TextField\n                                variant='outlined'\n                                disabled\n                                defaultValue={username}\n                                fullWidth\n                                id='family-admin'\n                                label='Family Admin'\n                                onChange={e => console.log('hello')}\n                            />\n                        </FormControl>\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={6}>\n                    <Button\n                        name='create'\n                        label='Create'\n                        type='submit'\n                        fullWidth\n                        variant='contained'\n                        color='primary'\n                        elevation={10}\n                    >\n                        Create\n                    </Button>\n                </Grid>\n            </Grid>\n            {data && (\n                <Dialog open={open} onClose={handleClose}>\n                    <MyDialogTitle onClose={handleClose}>\n                        Begin adding members to '{familyName}'!\n                    </MyDialogTitle>\n                    <DialogContent>\n                        <Typography align='center'>\n                            Begin getting members to join your family! Simply\n                            share the code below to your family members, get\n                            them to sign up and then they can join!\n                            <br />\n                            {joinCode}\n                        </Typography>\n                    </DialogContent>\n                </Dialog>\n            )}\n        </form>\n    )\n}\n\nexport default props => (\n    <Layout>\n        <CssBaseline />\n        <Grid\n            container\n            spacing={0}\n            direction='column'\n            alignItems='center'\n            justify='center'\n            style={{ minHeight: '80vh' }}\n        >\n            <Grid item xs={6}>\n                <CreateFamilyView {...props} />\n            </Grid>\n        </Grid>\n    </Layout>\n)\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function CreateArtefactView(props) {\n    const childProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        create: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            {...childProps}\n            child={GetFamiliesWrapper}\n        />\n    )\n}\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        view: true\n    }\n    return (\n        <GetStatesWrapper\n            {...props}\n            child={GetFamiliesWrapper}\n            childProps={thisChildProps}\n        />\n    )\n}\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { CssBaseline } from '@material-ui/core'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport ArtefactCard from '../components/ArtefactCard'\n\nconst useStyles = makeStyles(theme => ({\n    textField: {\n        // marginLeft: theme.spacing(1),\n        // marginRight: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n    paper: {\n        marginTop: theme.spacing(1),\n        padding: theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        textAlign: 'center'\n    },\n    button: {\n        margin: theme.spacing(1)\n    }\n}))\n\nconst LIST_OF_ARTEFACTS = gql`\n    query artefactsQuery($first: Int!) {\n        me {\n            artefactAdministratorOf(first: $first) {\n                edges {\n                    node {\n                        id\n                        name\n                        description\n                        upload\n                    }\n                }\n            }\n        }\n    }\n`\n\nfunction ManageArtefactsView(props) {\n    const tempImgURI =\n        'https://assets.pernod-ricard.com/nz/media_images/test.jpg?hUV74FvXQrWUBk1P2.fBvzoBUmjZ1wct'\n\n    const classes = useStyles()\n    const numArtefactsFetched = 10\n    const [artefactEdges, SetArtefactEdges] = useState([])\n\n    let { data, loading } = useQuery(LIST_OF_ARTEFACTS, {\n        variables: {\n            first: numArtefactsFetched\n        },\n        onCompleted: data => SetArtefactEdges(data.me.artefactAdministratorOf.edges)\n    })\n\n    console.log('The data is: ', data)\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <Grid container justify='center' spacing={2}>\n                        {artefactEdges.map(edge => (\n                            <Grid item key={edge.node.id}>\n                                <ArtefactCard\n                                    mediaURI={\"/media/\" + edge.node.upload}\n                                    title={edge.node.name}\n                                    description={edge.node.description}\n                                    id={edge.node.id}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default ManageArtefactsView\n","import React from 'react'\nimport ArtefactView from './ArtefactView'\nimport {\n    GetArtefactWrapper,\n    GetFamiliesWrapper,\n    GetStatesWrapper\n} from '../components'\n\nexport default function EditArtefactView(props) {\n    const thisChildProps = {\n        child: GetArtefactWrapper,\n        childProps: {\n            child: ArtefactView\n        },\n        edit: true\n    }\n\n    return (\n            <GetStatesWrapper\n                {...props}\n                child={GetFamiliesWrapper}\n                childProps={thisChildProps}\n            />\n    )\n}\n","import React from 'react'\n\nexport default function Error404View(props) {\n    return (\n        <div style={{padding:'50px'}}>\n            <h1 style={{color: 'red'}}>404 Page Not Found</h1>\n            <h3>If you're seeing this page...</h3>\n            <img src=\"https://media0.giphy.com/media/KVZXay4Uduy8XHpZRc/giphy.gif\" alt=''/>\n            <p><a href=\"/\">Return home</a></p>\n        </div>\n    )\n}","import React, { useContext, useState } from 'react';\nimport Layout from '../components/Layout';\nimport authContext from '../authContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Typography, CssBaseline, Button, TextField, Grid,\nFormControl } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery, useLazyQuery } from '@apollo/react-hooks';\nimport ArtefactCard from '../components/ArtefactCard';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)'\n    }\n}))\n\nconst HOMEPAGE_INFO = gql`\n        query {\n            me {\n            isMemberOf {\n            id\n            familyName\n            joinCode\n            hasArtefacts {\n                edges {\n                node {\n                    id\n                    name\n                    admin {\n                    username\n                    }\n                }\n                }\n            }\n            }\n            profile {\n                id\n                selectedFamily {\n                    id\n                    familyName\n                    joinCode\n                        hasArtefacts {\n                            edges {\n                                node {\n                                    id\n                                    name\n                                    description\n                                    upload\n                                }\n                            }\n                        }\n                    }\n                }\n        }\n    }`\n\nconst JOIN_FAMILY_MUTATION = gql`\nmutation JoinFamily($joinCode: String!) {\n  familyJoin(joinCode: $joinCode) {\n    family {\n      familyName\n      familyAdmin {\n          username\n      }\n    }\n  }\n}`\n\nconst SELECT_FAMILY_MUTATION = gql`\nmutation SelectFamilyMutation($profileId: Int!, $toFamily: String!) {\n    updateProfile(input: {\n        id: $profileId,\n        selectedFamily: $toFamily\n    }) {\n        id\n        selectedFamily\n    }\n}`\n\nfunction UserHomeView(props) {\n    const classes = useStyles()\n\n    const context = useContext(authContext)\n    const username = context.user.username\n    const [formJoinCode, setFormJoinCode] = useState(\"\")\n\n    const [joinFamilyMutation, { data: join_mutation_data }] = useMutation(JOIN_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const handleJoinFamily = () => {\n        if (formJoinCode.length === 0) {\n            console.error(\"Enter a valid joinCode\");\n            return;\n        }\n\n        joinFamilyMutation({variables: {joinCode: formJoinCode }})\n    }\n\n    const _homepageInfoCompleted = (data) => {\n        const selectedFamily = data.me.profile.selectedFamily\n        if (!selectedFamily) {\n            console.error(\"User has not selected a family\");\n            return;\n        }\n    }\n\n    let { data: home_data, loading, called: home_page_info_called } = useQuery(HOMEPAGE_INFO, {\n        onCompleted: (data) => {\n            _homepageInfoCompleted(data)\n        }\n    })\n\n\n    const [selectFamily, { data: mutation_data }] = useMutation(SELECT_FAMILY_MUTATION,\n        {\n            refetchQueries: (data) => [\n                { query: HOMEPAGE_INFO },\n            ],\n        });\n\n    const inputLabel = React.useRef(null);\n\n    const handleChange = event => {\n        event.preventDefault()\n        const newFamily = event.target.value;\n        selectFamily({ variables: { profileId: profileId, toFamily: newFamily } })\n    };\n\n    if (loading) {\n        return <p>Loading...</p>\n    }\n\n    const selectedFamily = home_data.me.profile.selectedFamily\n    const families = home_data.me.isMemberOf;\n    const profileId = home_data.me.profile.id;\n    let artefacts = []\n    \n    // If the user has selected a family there will be a list of artefacts\n    // Though the list may be empty\n    if (selectedFamily) {\n        artefacts = home_data.me.profile.selectedFamily.hasArtefacts.edges;\n    }\n    \n    return (\n        <Layout>\n            <CssBaseline />\n            <Grid container spacing={3}>\n                <Grid item xs={9}>\n                    {selectedFamily && (\n                        <div>\n                        <Typography variant=\"h1\">{selectedFamily.familyName}</Typography>\n                        <Typography variant=\"h5\">Join code: {selectedFamily.joinCode}</Typography>\n                        </div>\n                    )}\n                    {!selectedFamily && (\n                        <Typography variant=\"h2\">Join and/or Select a Family</Typography>\n                    )}\n                    <h4>Your username is (temp, for testing): {username}</h4>\n                    <GridList cellHeight={\"auto\"} cols={2}>\n                        {artefacts.map((artefact, key) => (\n                            <GridListTile\n                                key={key}>\n                                <ArtefactCard\n                                    key={key}\n                                    mediaURI={artefact.node.upload}\n                                    title={artefact.node.name}\n                                    description={artefact.node.description}\n                                    id={artefact.node.id} />\n                            </GridListTile>\n                        ))}\n                    </GridList>\n                </Grid>\n                <Grid item xs={3}>\n                    <InputLabel ref={inputLabel} htmlFor=\"outlined-age-simple\">\n                        Select Family\n                    </InputLabel>\n                    <Select\n                        variant='outlined'\n                        fullWidth\n                        disabled={families.length <= 1}\n                        value={selectedFamily ? selectedFamily.id : null}\n                        onChange={handleChange}\n                        inputProps={{\n                            name: 'age',\n                            id: 'outlined-age-simple',\n                        }}\n                    >\n                        {families && (families.map((item, key) =>\n                            <MenuItem\n                                key={item.id}\n                                value={item.id}\n                            >\n                                {item.familyName}\n                            </MenuItem>\n                        )\n                        )}\n                    </Select>\n                    <FormControl\n                    fullWidth\n                    >\n                    <TextField \n                        id=\"joinCodeField\"\n                        label=\"Join a family\"\n                        value={formJoinCode}\n                        className={classes.textField}\n                        margin=\"normal\"\n                        onChange={e => setFormJoinCode(e.target.value)}\n                        fullWidth\n                    />\n                    <Button\n                        variant=\"outlined\" \n                        onClick={handleJoinFamily}\n                    >\n                        Join Family\n                    </Button>\n                    </FormControl>\n                </Grid>\n            </Grid>\n        </Layout>\n    )\n}\n\nexport default UserHomeView\n","import React, { useState } from 'react'\nimport { useTheme } from '@material-ui/styles'\nimport { Popover } from '@material-ui/core'\nimport { Loading, Map, geocodeQuery } from '../components'\nimport { artefactGeocodeQuery } from '../components/MapAPI'\n\nimport { GetFamiliesWrapper, Layout } from '../components'\n\nimport { GET_FAMILY_ARTEFACTS } from '../gqlQueriesMutations'\nimport { useLazyQuery } from '@apollo/react-hooks'\n\nfunction MapView(props) {\n    const theme = useTheme()\n    var mapStyle = 'mapbox://styles/mapbox/streets-v9?optimize=true'\n    if (theme.palette.type === 'dark') {\n        mapStyle = 'mapbox://styles/mapbox/dark-v10?optimize=true'\n    }\n\n    const [getArtefacts, { called, loading, data }] = useLazyQuery(\n        GET_FAMILY_ARTEFACTS\n    )\n    var { families, familiesLoading } = props\n    if (families.length && !called) {\n        getArtefacts({\n            variables: { id: families[0].id }\n        })\n    }\n\n    var artefacts = []\n    const [mapArtefacts, setMapArtefacts] = useState([])\n    const [init, setInit] = useState(false)\n\n    if (data && data.family && !init) {\n        artefacts = data.family.hasArtefacts.edges.map(edge => edge.node)\n\n        var promiseArr = []\n        for (var i = 0; i < artefacts.length; i++) {\n            if (artefacts[i].address) {\n                promiseArr.push(\n                    artefactGeocodeQuery(artefacts[i]).then(result => {\n                        var { response, artefact } = result\n                        if (response.error) {\n                            console.log(response.error)\n                        } else {\n                            var mapArtefact = {\n                                ...artefact,\n                                popup: true,\n                                center: response.results[0].mapState.center\n                            }\n                            return mapArtefact\n                        }\n                    })\n                )\n            }\n        }\n\n        Promise.all(promiseArr).then(result => setMapArtefacts(result))\n        setInit(true)\n    }\n\n    // process artefacts into { center, showPopup, <artefact card props> }\n    return (\n        <Map\n            // className={classes.map}\n            mapStyle={mapStyle}\n            mapState={{zoom: [0]}}\n            containerStyle={{\n                height: '91vh',\n                width: '100vw',\n            }}\n            artefacts={mapArtefacts}\n        />\n    )\n}\n\nexport default props => (\n    <Layout>\n        <GetFamiliesWrapper {...props} child={MapView} />\n    </Layout>\n)\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { PrivateRoute } from './components/PrivateRoute'\nimport { CssBaseline } from '@material-ui/core'\n\n// Views\nimport Login from './views/LoginView'\nimport Signup from './views/SignupView'\nimport Logout from './components/Logout'\nimport Layout from './components/Layout'\n\n// Family views\nimport CreateFamilyView from './views/CreateFamilyView'\n// Artefact Views\nimport CreateArtefactView from './views/CreateArtefactView'\nimport DetailView from './views/DetailView'\nimport ManageArtefactsView from './views/ManageArtefactsView'\nimport EditArtefactView from './views/EditArtefactView'\nimport Error404View from './views/Error404View'\n\nimport UserHomeView from './views/UserHomeView'\n\nimport MapView from './views/MapView'\n\nfunction App(props) {\n    return (\n        <Router>\n            <CssBaseline />\n            <div>\n                <Switch>\n                    {/* This is a special protected route, since it sends to the landing page if not logged in, which \n                        has the same url as the userHomeView */}\n                    <PrivateRoute\n                        exact\n                        path='/'\n                        loggedIn={UserHomeView}\n                        landingPage\n                    />\n                    {/* User auth routes */}\n                    <Route exact path='/login/' component={Login} />\n                    <Route exact path='/signup/' component={Signup} />\n                    <Route exact path='/logout/' component={Logout} />\n\n                    {/* Artefact routes */}\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/create/'\n                        loggedIn={CreateArtefactView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/manage/'\n                        loggedIn={ManageArtefactsView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/:id/'\n                        loggedIn={DetailView}\n                        landingPage\n                    />\n                    <PrivateRoute\n                        exact\n                        path='/artefacts/edit/:id/'\n                        loggedIn={EditArtefactView}\n                        landingPage\n                    />\n\n                    {/* Family routes */}\n                    <PrivateRoute\n                        exact\n                        path='/family/create/'\n                        loggedIn={CreateFamilyView}\n                        landingPage\n                    />\n\n                    {/* Map */}\n                    <PrivateRoute\n                        exact\n                        path='/map/'\n                        loggedIn={MapView}\n                        landingPage\n                    />\n\n                    <Route component={Error404View} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { setContext } from 'apollo-link-context'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport Auth from './components/Auth'\n\nimport App from './App'\nimport { AUTH_TOKEN, config } from './constants'\n\n// Depending on prod or dev, set the appropriate uri for the graphql queries\nconst httpLink = createHttpLink({\n    uri: config.uri\n})\n\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem(AUTH_TOKEN)\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `JWT ${token}` : ''\n        }\n    }\n})\n\n// Set up Apollo client using Jwt auth\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n})\n\n// Wrap application with Apollo and Auth providers to give access across the application\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <Auth>\n            <App />\n        </Auth>\n    </ApolloProvider>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}